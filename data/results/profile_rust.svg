<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>__alloc_skb (2 samples, 0.91%)</title><rect x="160.2" y="373" width="10.7" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="163.18" y="383.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.45%)</title><rect x="691.2" y="485" width="5.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="694.18" y="495.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.45%)</title><rect x="1163.2" y="389" width="5.3" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1166.18" y="399.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (18 samples, 8.18%)</title><rect x="964.7" y="341" width="96.6" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="967.73" y="351.5" >__ip_queue_..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.91%)</title><rect x="895.0" y="533" width="10.7" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="898.00" y="543.5" ></text>
</g>
<g >
<title>ioctl (4 samples, 1.82%)</title><rect x="884.3" y="565" width="21.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="887.27" y="575.5" >i..</text>
</g>
<g >
<title>ep_insert (6 samples, 2.73%)</title><rect x="390.8" y="517" width="32.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="393.82" y="527.5" >ep..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.45%)</title><rect x="256.7" y="501" width="5.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="259.73" y="511.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.45%)</title><rect x="1163.2" y="357" width="5.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1166.18" y="367.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (2 samples, 0.91%)</title><rect x="449.8" y="453" width="10.7" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="452.82" y="463.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.45%)</title><rect x="154.8" y="389" width="5.4" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="157.82" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.45%)</title><rect x="1082.7" y="309" width="5.4" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="1085.73" y="319.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.45%)</title><rect x="691.2" y="469" width="5.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="694.18" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.45%)</title><rect x="1152.5" y="421" width="5.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1155.45" y="431.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.45%)</title><rect x="1120.3" y="517" width="5.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1123.27" y="527.5" ></text>
</g>
<g >
<title>tcp_poll (4 samples, 1.82%)</title><rect x="401.5" y="469" width="21.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="404.55" y="479.5" >t..</text>
</g>
<g >
<title>__mutex_init (1 samples, 0.45%)</title><rect x="782.4" y="421" width="5.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="785.36" y="431.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (8 samples, 3.64%)</title><rect x="176.3" y="341" width="42.9" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="179.27" y="351.5" >__tc..</text>
</g>
<g >
<title>[unknown] (4 samples, 1.82%)</title><rect x="10.0" y="597" width="21.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[..</text>
</g>
<g >
<title>core::fmt::write::h2f210ed4c94745cb (1 samples, 0.45%)</title><rect x="278.2" y="549" width="5.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="281.18" y="559.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.45%)</title><rect x="219.2" y="325" width="5.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="222.18" y="335.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.45%)</title><rect x="1104.2" y="469" width="5.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1107.18" y="479.5" ></text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.45%)</title><rect x="921.8" y="309" width="5.4" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="924.82" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (33 samples, 15.00%)</title><rect x="471.3" y="437" width="177.0" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="474.27" y="447.5" >__sched_text_start</text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 0.45%)</title><rect x="26.1" y="485" width="5.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="29.09" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.45%)</title><rect x="878.9" y="389" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="881.91" y="399.5" ></text>
</g>
<g >
<title>ip_queue_xmit (18 samples, 8.18%)</title><rect x="964.7" y="357" width="96.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="967.73" y="367.5" >ip_queue_xmit</text>
</g>
<g >
<title>tcp_recvmsg (9 samples, 4.09%)</title><rect x="1136.4" y="453" width="48.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1139.36" y="463.5" >tcp_..</text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.45%)</title><rect x="916.5" y="373" width="5.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="919.45" y="383.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.45%)</title><rect x="895.0" y="485" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="898.00" y="495.5" ></text>
</g>
<g >
<title>__fput (5 samples, 2.27%)</title><rect x="852.1" y="469" width="26.8" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="855.09" y="479.5" >_..</text>
</g>
<g >
<title>task_work_add (1 samples, 0.45%)</title><rect x="691.2" y="453" width="5.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="694.18" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 16.36%)</title><rect x="691.2" y="533" width="193.1" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="694.18" y="543.5" >do_syscall_64</text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.45%)</title><rect x="1184.6" y="485" width="5.4" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1187.64" y="495.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (1 samples, 0.45%)</title><rect x="712.6" y="453" width="5.4" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="715.64" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31 samples, 14.09%)</title><rect x="95.8" y="565" width="166.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="98.82" y="575.5" >entry_SYSCALL_64_afte..</text>
</g>
<g >
<title>fsnotify_grab_connector (1 samples, 0.45%)</title><rect x="111.9" y="325" width="5.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="114.91" y="335.5" ></text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 0.45%)</title><rect x="980.8" y="165" width="5.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="983.82" y="175.5" ></text>
</g>
<g >
<title>__call_rcu (2 samples, 0.91%)</title><rect x="122.6" y="421" width="10.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="125.64" y="431.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.45%)</title><rect x="401.5" y="405" width="5.4" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="404.55" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 16.82%)</title><rect x="449.8" y="549" width="198.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="452.82" y="559.5" >do_syscall_64</text>
</g>
<g >
<title>ima_file_free (1 samples, 0.45%)</title><rect x="878.9" y="469" width="5.4" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="881.91" y="479.5" ></text>
</g>
<g >
<title>__alloc_fd (1 samples, 0.45%)</title><rect x="696.5" y="453" width="5.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="699.55" y="463.5" ></text>
</g>
<g >
<title>inet_sendmsg (37 samples, 16.82%)</title><rect x="905.7" y="469" width="198.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="908.73" y="479.5" >inet_sendmsg</text>
</g>
<g >
<title>skb_copy_datagram_iter (3 samples, 1.36%)</title><rect x="1157.8" y="437" width="16.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1160.82" y="447.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (13 samples, 5.91%)</title><rect x="980.8" y="197" width="69.7" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="983.82" y="207.5" >dev_har..</text>
</g>
<g >
<title>__x64_sys_accept4 (28 samples, 12.73%)</title><rect x="691.2" y="517" width="150.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="694.18" y="527.5" >__x64_sys_accept4</text>
</g>
<g >
<title>task_work_run (6 samples, 2.73%)</title><rect x="852.1" y="501" width="32.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="855.09" y="511.5" >ta..</text>
</g>
<g >
<title>iput (3 samples, 1.36%)</title><rect x="106.5" y="421" width="16.1" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="109.55" y="431.5" ></text>
</g>
<g >
<title>ip_finish_output2 (8 samples, 3.64%)</title><rect x="176.3" y="229" width="42.9" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="179.27" y="239.5" >ip_f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.91%)</title><rect x="895.0" y="549" width="10.7" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="898.00" y="559.5" ></text>
</g>
<g >
<title>all (220 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>allocate_slab (2 samples, 0.91%)</title><rect x="927.2" y="309" width="10.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="930.18" y="319.5" ></text>
</g>
<g >
<title>_$LT$usize$u20$as$u20$core..iter..range..Step$GT$::forward_unchecked::h7bb5aee2a549224c (1 samples, 0.45%)</title><rect x="90.5" y="581" width="5.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="93.45" y="591.5" ></text>
</g>
<g >
<title>_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$::index::hbd0dce10ec64d390 (1 samples, 0.45%)</title><rect x="74.4" y="581" width="5.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="77.36" y="591.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.45%)</title><rect x="111.9" y="373" width="5.4" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="114.91" y="383.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.91%)</title><rect x="819.9" y="469" width="10.7" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="822.91" y="479.5" ></text>
</g>
<g >
<title>tcp_send_mss (2 samples, 0.91%)</title><rect x="1088.1" y="421" width="10.7" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1091.09" y="431.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.45%)</title><rect x="460.5" y="453" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="463.55" y="463.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.45%)</title><rect x="138.7" y="453" width="5.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="141.73" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.45%)</title><rect x="771.6" y="373" width="5.4" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="774.64" y="383.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.45%)</title><rect x="138.7" y="437" width="5.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="141.73" y="447.5" ></text>
</g>
<g >
<title>tcp_send_fin (13 samples, 5.91%)</title><rect x="160.2" y="389" width="69.7" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="163.18" y="399.5" >tcp_sen..</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.45%)</title><rect x="1168.5" y="357" width="5.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1171.55" y="367.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.45%)</title><rect x="1061.3" y="341" width="5.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="1064.27" y="351.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.45%)</title><rect x="814.5" y="469" width="5.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="817.55" y="479.5" ></text>
</g>
<g >
<title>epoll_wait (39 samples, 17.73%)</title><rect x="439.1" y="581" width="209.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="442.09" y="591.5" >epoll_wait</text>
</g>
<g >
<title>__put_page (1 samples, 0.45%)</title><rect x="1136.4" y="389" width="5.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1139.36" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.45%)</title><rect x="846.7" y="485" width="5.4" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="849.73" y="495.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.45%)</title><rect x="878.9" y="437" width="5.4" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="881.91" y="447.5" ></text>
</g>
<g >
<title>std::rt::lang_start::h7ec8606f0f41a375 (216 samples, 98.18%)</title><rect x="31.5" y="597" width="1158.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="34.45" y="607.5" >std::rt::lang_start::h7ec8606f0f41a375</text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.45%)</title><rect x="224.5" y="325" width="5.4" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="227.55" y="335.5" ></text>
</g>
<g >
<title>allocate_slab (3 samples, 1.36%)</title><rect x="921.8" y="325" width="16.1" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="924.82" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.45%)</title><rect x="423.0" y="485" width="5.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="426.00" y="495.5" ></text>
</g>
<g >
<title>ip_queue_xmit (8 samples, 3.64%)</title><rect x="176.3" y="325" width="42.9" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="179.27" y="335.5" >ip_q..</text>
</g>
<g >
<title>iowrite16 (10 samples, 4.55%)</title><rect x="996.9" y="149" width="53.6" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="999.91" y="159.5" >iowri..</text>
</g>
<g >
<title>__sys_accept4 (26 samples, 11.82%)</title><rect x="691.2" y="501" width="139.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="694.18" y="511.5" >__sys_accept4</text>
</g>
<g >
<title>ip_finish_output (8 samples, 3.64%)</title><rect x="176.3" y="261" width="42.9" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="179.27" y="271.5" >ip_f..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.45%)</title><rect x="975.5" y="213" width="5.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="978.45" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 4.09%)</title><rect x="390.8" y="565" width="48.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="393.82" y="575.5" >entr..</text>
</g>
<g >
<title>__sys_sendto (38 samples, 17.27%)</title><rect x="905.7" y="501" width="203.8" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="908.73" y="511.5" >__sys_sendto</text>
</g>
<g >
<title>wakeup_source_unregister (1 samples, 0.45%)</title><rect x="144.1" y="437" width="5.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="147.09" y="447.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.45%)</title><rect x="766.3" y="389" width="5.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="769.27" y="399.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="760.9" y="389" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="763.91" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.91%)</title><rect x="1072.0" y="309" width="10.7" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="1075.00" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (12 samples, 5.45%)</title><rect x="1125.6" y="517" width="64.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1128.64" y="527.5" >__x64_s..</text>
</g>
<g >
<title>fcntl@GLIBC_2.2.5 (1 samples, 0.45%)</title><rect x="648.3" y="581" width="5.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="651.27" y="591.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.45%)</title><rect x="1088.1" y="405" width="5.4" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1091.09" y="415.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (2 samples, 0.91%)</title><rect x="1163.2" y="405" width="10.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1166.18" y="415.5" ></text>
</g>
<g >
<title>recv (14 samples, 6.36%)</title><rect x="1114.9" y="565" width="75.1" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1117.91" y="575.5" >recv</text>
</g>
<g >
<title>irq_exit (1 samples, 0.45%)</title><rect x="878.9" y="421" width="5.4" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="881.91" y="431.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (12 samples, 5.45%)</title><rect x="750.2" y="469" width="64.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="753.18" y="479.5" >alloc_f..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.45%)</title><rect x="26.1" y="549" width="5.4" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="29.09" y="559.5" ></text>
</g>
<g >
<title>security_file_alloc (2 samples, 0.91%)</title><rect x="771.6" y="405" width="10.8" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="774.64" y="415.5" ></text>
</g>
<g >
<title>dput (5 samples, 2.27%)</title><rect x="852.1" y="453" width="26.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="855.09" y="463.5" >d..</text>
</g>
<g >
<title>__dentry_kill (4 samples, 1.82%)</title><rect x="101.2" y="453" width="21.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="104.18" y="463.5" >_..</text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.45%)</title><rect x="836.0" y="501" width="5.4" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="839.00" y="511.5" ></text>
</g>
<g >
<title>sock_poll (5 samples, 2.27%)</title><rect x="396.2" y="485" width="26.8" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="399.18" y="495.5" >s..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.45%)</title><rect x="701.9" y="453" width="5.4" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="704.91" y="463.5" ></text>
</g>
<g >
<title>start_xmit (13 samples, 5.91%)</title><rect x="980.8" y="181" width="69.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="983.82" y="191.5" >start_x..</text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.91%)</title><rect x="954.0" y="357" width="10.7" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="957.00" y="367.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.45%)</title><rect x="814.5" y="453" width="5.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="817.55" y="463.5" ></text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.45%)</title><rect x="862.8" y="341" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="865.82" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.45%)</title><rect x="905.7" y="405" width="5.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="908.73" y="415.5" ></text>
</g>
<g >
<title>ep_remove (1 samples, 0.45%)</title><rect x="133.4" y="437" width="5.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="136.36" y="447.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.45%)</title><rect x="111.9" y="293" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="114.91" y="303.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.45%)</title><rect x="1066.6" y="373" width="5.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1069.64" y="383.5" ></text>
</g>
<g >
<title>_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$::d_rounds::hd65b154c1fc9a2dd (1 samples, 0.45%)</title><rect x="63.6" y="581" width="5.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="66.64" y="591.5" ></text>
</g>
<g >
<title>__alloc_skb (6 samples, 2.73%)</title><rect x="916.5" y="405" width="32.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="919.45" y="415.5" >__..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.45%)</title><rect x="401.5" y="421" width="5.4" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="404.55" y="431.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.45%)</title><rect x="777.0" y="373" width="5.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="780.00" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 4.09%)</title><rect x="390.8" y="549" width="48.3" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="393.82" y="559.5" >do_s..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128::h818392808da97060 (1 samples, 0.45%)</title><rect x="310.4" y="581" width="5.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="313.36" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner::h2eb337214a577be5 (1 samples, 0.45%)</title><rect x="659.0" y="581" width="5.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="662.00" y="591.5" ></text>
</g>
<g >
<title>virtnet_poll_tx (1 samples, 0.45%)</title><rect x="26.1" y="501" width="5.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="29.09" y="511.5" ></text>
</g>
<g >
<title>inode_init_always (2 samples, 0.91%)</title><rect x="718.0" y="437" width="10.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="721.00" y="447.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.45%)</title><rect x="868.2" y="357" width="5.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="871.18" y="367.5" ></text>
</g>
<g >
<title>alloc::fmt::format::format_inner::h49a3ea498526530d (3 samples, 1.36%)</title><rect x="267.5" y="565" width="16.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="270.45" y="575.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.91%)</title><rect x="449.8" y="405" width="10.7" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="452.82" y="415.5" ></text>
</g>
<g >
<title>sock_alloc (6 samples, 2.73%)</title><rect x="718.0" y="485" width="32.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="721.00" y="495.5" >so..</text>
</g>
<g >
<title>__dentry_kill (5 samples, 2.27%)</title><rect x="852.1" y="437" width="26.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="855.09" y="447.5" >_..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (37 samples, 16.82%)</title><rect x="449.8" y="533" width="198.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="452.82" y="543.5" >__x64_sys_epoll_wait</text>
</g>
<g >
<title>sock_poll (1 samples, 0.45%)</title><rect x="465.9" y="453" width="5.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="468.91" y="463.5" ></text>
</g>
<g >
<title>virtqueue_add_outbuf (1 samples, 0.45%)</title><rect x="986.2" y="165" width="5.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="989.18" y="175.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.45%)</title><rect x="986.2" y="117" width="5.3" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="989.18" y="127.5" ></text>
</g>
<g >
<title>__fput (26 samples, 11.82%)</title><rect x="101.2" y="485" width="139.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="104.18" y="495.5" >__fput</text>
</g>
<g >
<title>release_sock (1 samples, 0.45%)</title><rect x="905.7" y="437" width="5.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="908.73" y="447.5" ></text>
</g>
<g >
<title>sock_alloc_inode (2 samples, 0.91%)</title><rect x="728.7" y="437" width="10.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="731.73" y="447.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.45%)</title><rect x="809.2" y="421" width="5.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="812.18" y="431.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.45%)</title><rect x="787.7" y="421" width="5.4" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="790.73" y="431.5" ></text>
</g>
<g >
<title>eventpoll_release_file (2 samples, 0.91%)</title><rect x="240.6" y="485" width="10.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="243.64" y="495.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.45%)</title><rect x="852.1" y="341" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="855.09" y="351.5" ></text>
</g>
<g >
<title>alloc_file (8 samples, 3.64%)</title><rect x="750.2" y="453" width="42.9" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="753.18" y="463.5" >allo..</text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.45%)</title><rect x="857.5" y="341" width="5.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="860.45" y="351.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (1 samples, 0.45%)</title><rect x="712.6" y="437" width="5.4" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="715.64" y="447.5" ></text>
</g>
<g >
<title>ip_output (8 samples, 3.64%)</title><rect x="176.3" y="277" width="42.9" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="179.27" y="287.5" >ip_o..</text>
</g>
<g >
<title>inet_recvmsg (11 samples, 5.00%)</title><rect x="1125.6" y="469" width="59.0" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="1128.64" y="479.5" >inet_r..</text>
</g>
<g >
<title>dev_queue_xmit (16 samples, 7.27%)</title><rect x="964.7" y="245" width="85.8" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="967.73" y="255.5" >dev_queue_..</text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.91%)</title><rect x="1136.4" y="437" width="10.7" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="1139.36" y="447.5" ></text>
</g>
<g >
<title>sock_gen_put (1 samples, 0.45%)</title><rect x="980.8" y="37" width="5.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="983.82" y="47.5" ></text>
</g>
<g >
<title>core::str::traits::_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$::get::h14100fc261db227f (1 samples, 0.45%)</title><rect x="385.5" y="581" width="5.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="388.45" y="591.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.45%)</title><rect x="1152.5" y="405" width="5.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1155.45" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 16.82%)</title><rect x="449.8" y="565" width="198.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="452.82" y="575.5" >entry_SYSCALL_64_after_hwf..</text>
</g>
<g >
<title>do_syscall_64 (13 samples, 5.91%)</title><rect x="1120.3" y="533" width="69.7" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1123.27" y="543.5" >do_sysc..</text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.45%)</title><rect x="937.9" y="389" width="5.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="940.91" y="399.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.45%)</title><rect x="852.1" y="293" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="855.09" y="303.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.45%)</title><rect x="878.9" y="453" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="881.91" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (16 samples, 7.27%)</title><rect x="964.7" y="229" width="85.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="967.73" y="239.5" >__dev_queu..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 6.36%)</title><rect x="1114.9" y="549" width="75.1" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1117.91" y="559.5" >entry_SY..</text>
</g>
<g >
<title>tcp_rearm_rto (2 samples, 0.91%)</title><rect x="1072.0" y="357" width="10.7" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1075.00" y="367.5" ></text>
</g>
<g >
<title>evict (4 samples, 1.82%)</title><rect x="852.1" y="389" width="21.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="855.09" y="399.5" >e..</text>
</g>
<g >
<title>ip_output (18 samples, 8.18%)</title><rect x="964.7" y="309" width="96.6" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="967.73" y="319.5" >ip_output</text>
</g>
<g >
<title>core::hash::sip::u8to64_le::hcf2e3ee73f32984f (1 samples, 0.45%)</title><rect x="321.1" y="581" width="5.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="324.09" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (38 samples, 17.27%)</title><rect x="905.7" y="517" width="203.8" height="15.0" fill="rgb(208,63,63)" rx="2" ry="2" />
<text  x="908.73" y="527.5" >__x64_sys_sendto</text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.91%)</title><rect x="750.2" y="389" width="10.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="753.18" y="399.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.91%)</title><rect x="1136.4" y="421" width="10.7" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="1139.36" y="431.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.45%)</title><rect x="160.2" y="341" width="5.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="163.18" y="351.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="803.8" y="405" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="806.82" y="415.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.45%)</title><rect x="1152.5" y="389" width="5.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1155.45" y="399.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (8 samples, 3.64%)</title><rect x="176.3" y="309" width="42.9" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="179.27" y="319.5" >__ip..</text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.45%)</title><rect x="937.9" y="373" width="5.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="940.91" y="383.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.91%)</title><rect x="449.8" y="437" width="10.7" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="452.82" y="447.5" ></text>
</g>
<g >
<title>core::char::convert::from_u32_unchecked::precondition_check::h7c6ea5a94056b625 (2 samples, 0.91%)</title><rect x="288.9" y="581" width="10.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="291.91" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.45%)</title><rect x="975.5" y="197" width="5.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="978.45" y="207.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.45%)</title><rect x="111.9" y="341" width="5.4" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="114.91" y="351.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (6 samples, 2.73%)</title><rect x="916.5" y="421" width="32.1" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="919.45" y="431.5" >sk..</text>
</g>
<g >
<title>security_inode_alloc (1 samples, 0.45%)</title><rect x="723.4" y="405" width="5.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="726.36" y="415.5" ></text>
</g>
<g >
<title>clear_page_rep (1 samples, 0.45%)</title><rect x="921.8" y="245" width="5.4" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="924.82" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 0.45%)</title><rect x="1114.9" y="533" width="5.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1117.91" y="543.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.45%)</title><rect x="235.3" y="437" width="5.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="238.27" y="447.5" ></text>
</g>
<g >
<title>ep_insert (1 samples, 0.45%)</title><rect x="390.8" y="501" width="5.4" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="393.82" y="511.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (4 samples, 1.82%)</title><rect x="852.1" y="421" width="21.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="855.09" y="431.5" >d..</text>
</g>
<g >
<title>iput (1 samples, 0.45%)</title><rect x="873.5" y="405" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="876.55" y="415.5" ></text>
</g>
<g >
<title>security_inode_alloc (1 samples, 0.45%)</title><rect x="723.4" y="421" width="5.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="726.36" y="431.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.45%)</title><rect x="809.2" y="405" width="5.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="812.18" y="415.5" ></text>
</g>
<g >
<title>sch_direct_xmit (13 samples, 5.91%)</title><rect x="980.8" y="213" width="69.7" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="983.82" y="223.5" >sch_dir..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.45%)</title><rect x="36.8" y="549" width="5.4" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="39.82" y="559.5" ></text>
</g>
<g >
<title>do_epoll_wait (37 samples, 16.82%)</title><rect x="449.8" y="517" width="198.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="452.82" y="527.5" >do_epoll_wait</text>
</g>
<g >
<title>__mutex_init (1 samples, 0.45%)</title><rect x="782.4" y="405" width="5.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="785.36" y="415.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.45%)</title><rect x="980.8" y="149" width="5.4" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="983.82" y="159.5" ></text>
</g>
<g >
<title>_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h21f93c90e792c358 (2 samples, 0.91%)</title><rect x="79.7" y="581" width="10.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="82.73" y="591.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.45%)</title><rect x="911.1" y="421" width="5.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="914.09" y="431.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.45%)</title><rect x="1168.5" y="373" width="5.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1171.55" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.45%)</title><rect x="707.3" y="453" width="5.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="710.27" y="463.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="803.8" y="389" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="806.82" y="399.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.91%)</title><rect x="111.9" y="405" width="10.7" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="114.91" y="415.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (2 samples, 0.91%)</title><rect x="1072.0" y="373" width="10.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1075.00" y="383.5" ></text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 0.45%)</title><rect x="26.1" y="469" width="5.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="29.09" y="479.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.45%)</title><rect x="117.3" y="357" width="5.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="120.27" y="367.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.45%)</title><rect x="895.0" y="469" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="898.00" y="479.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.45%)</title><rect x="1157.8" y="405" width="5.4" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1160.82" y="415.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (3 samples, 1.36%)</title><rect x="1157.8" y="421" width="16.1" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1160.82" y="431.5" ></text>
</g>
<g >
<title>finish_task_switch (33 samples, 15.00%)</title><rect x="471.3" y="421" width="177.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="474.27" y="431.5" >finish_task_switch</text>
</g>
<g >
<title>iowrite16 (5 samples, 2.27%)</title><rect x="192.4" y="117" width="26.8" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="195.36" y="127.5" >i..</text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.45%)</title><rect x="712.6" y="469" width="5.4" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="715.64" y="479.5" ></text>
</g>
<g >
<title>__alloc_fd (1 samples, 0.45%)</title><rect x="696.5" y="469" width="5.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="699.55" y="479.5" ></text>
</g>
<g >
<title>virtqueue_enable_cb_delayed (1 samples, 0.45%)</title><rect x="991.5" y="165" width="5.4" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="994.55" y="175.5" ></text>
</g>
<g >
<title>__sys_recvfrom (12 samples, 5.45%)</title><rect x="1125.6" y="501" width="64.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1128.64" y="511.5" >__sys_r..</text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.45%)</title><rect x="165.5" y="357" width="5.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="168.55" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.91%)</title><rect x="31.5" y="581" width="10.7" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="34.45" y="591.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.91%)</title><rect x="1072.0" y="325" width="10.7" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1075.00" y="335.5" ></text>
</g>
<g >
<title>ksys_ioctl (2 samples, 0.91%)</title><rect x="895.0" y="501" width="10.7" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="898.00" y="511.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (1 samples, 0.45%)</title><rect x="160.2" y="357" width="5.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="163.18" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.91%)</title><rect x="793.1" y="405" width="10.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="796.09" y="415.5" ></text>
</g>
<g >
<title>__call_rcu (2 samples, 0.91%)</title><rect x="122.6" y="405" width="10.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="125.64" y="415.5" ></text>
</g>
<g >
<title>task_work_run (30 samples, 13.64%)</title><rect x="101.2" y="517" width="160.9" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="104.18" y="527.5" >task_work_run</text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 1.36%)</title><rect x="406.9" y="437" width="16.1" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="409.91" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.45%)</title><rect x="921.8" y="261" width="5.4" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="924.82" y="271.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.45%)</title><rect x="1061.3" y="309" width="5.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1064.27" y="319.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="417.6" y="405" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="420.64" y="415.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.45%)</title><rect x="1066.6" y="357" width="5.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1069.64" y="367.5" ></text>
</g>
<g >
<title>call_rcu (2 samples, 0.91%)</title><rect x="122.6" y="437" width="10.8" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="125.64" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.91%)</title><rect x="1072.0" y="293" width="10.7" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="1075.00" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 1.36%)</title><rect x="750.2" y="405" width="16.1" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="753.18" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 16.36%)</title><rect x="691.2" y="549" width="193.1" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="694.18" y="559.5" >entry_SYSCALL_64_after_hw..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.45%)</title><rect x="26.1" y="517" width="5.4" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="29.09" y="527.5" ></text>
</g>
<g >
<title>virtqueue_get_buf (1 samples, 0.45%)</title><rect x="187.0" y="117" width="5.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="190.00" y="127.5" ></text>
</g>
<g >
<title>sch_direct_xmit (7 samples, 3.18%)</title><rect x="181.6" y="181" width="37.6" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="184.64" y="191.5" >sch..</text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.45%)</title><rect x="868.2" y="373" width="5.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="871.18" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.45%)</title><rect x="846.7" y="469" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="849.73" y="479.5" ></text>
</g>
<g >
<title>std::io::Write::write_all::ha941869a2b0e3ab0 (38 samples, 17.27%)</title><rect x="905.7" y="581" width="203.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="908.73" y="591.5" >std::io::Write::write_all:..</text>
</g>
<g >
<title>iowrite16 (10 samples, 4.55%)</title><rect x="996.9" y="133" width="53.6" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="999.91" y="143.5" >iowri..</text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.91%)</title><rect x="428.4" y="517" width="10.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="431.36" y="527.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.45%)</title><rect x="707.3" y="405" width="5.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="710.27" y="415.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.45%)</title><rect x="948.6" y="405" width="5.4" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="951.64" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.45%)</title><rect x="905.7" y="421" width="5.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="908.73" y="431.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.45%)</title><rect x="1168.5" y="389" width="5.4" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="1171.55" y="399.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.45%)</title><rect x="852.1" y="357" width="5.4" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="855.09" y="367.5" ></text>
</g>
<g >
<title>__close_fd (1 samples, 0.45%)</title><rect x="95.8" y="501" width="5.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="98.82" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.45%)</title><rect x="921.8" y="277" width="5.4" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="924.82" y="287.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.45%)</title><rect x="868.2" y="341" width="5.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="871.18" y="351.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.45%)</title><rect x="1082.7" y="325" width="5.4" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="1085.73" y="335.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.45%)</title><rect x="1125.6" y="437" width="5.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1128.64" y="447.5" ></text>
</g>
<g >
<title>__put_compound_page (1 samples, 0.45%)</title><rect x="1136.4" y="373" width="5.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1139.36" y="383.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.45%)</title><rect x="943.3" y="389" width="5.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="946.27" y="399.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.45%)</title><rect x="165.5" y="325" width="5.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="168.55" y="335.5" ></text>
</g>
<g >
<title>____fput (6 samples, 2.73%)</title><rect x="852.1" y="485" width="32.2" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="855.09" y="495.5" >__..</text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.91%)</title><rect x="964.7" y="213" width="10.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="967.73" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 1.36%)</title><rect x="921.8" y="389" width="16.1" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="924.82" y="399.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (4 samples, 1.82%)</title><rect x="401.5" y="453" width="21.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="404.55" y="463.5" >e..</text>
</g>
<g >
<title>destroy_inode (1 samples, 0.45%)</title><rect x="111.9" y="389" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="114.91" y="399.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.45%)</title><rect x="251.4" y="485" width="5.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="254.36" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.91%)</title><rect x="728.7" y="421" width="10.8" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="731.73" y="431.5" ></text>
</g>
<g >
<title>__libc_send (38 samples, 17.27%)</title><rect x="905.7" y="565" width="203.8" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="908.73" y="575.5" >__libc_send</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.45%)</title><rect x="423.0" y="501" width="5.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="426.00" y="511.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.45%)</title><rect x="111.9" y="309" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="114.91" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 0.45%)</title><rect x="1114.9" y="517" width="5.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1117.91" y="527.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.45%)</title><rect x="1184.6" y="469" width="5.4" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1187.64" y="479.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.91%)</title><rect x="728.7" y="405" width="10.8" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="731.73" y="415.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.45%)</title><rect x="911.1" y="437" width="5.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="914.09" y="447.5" ></text>
</g>
<g >
<title>alloc::fmt::format::_$u7b$$u7b$closure$u7d$$u7d$::h3fc460319bfbf611 (3 samples, 1.36%)</title><rect x="267.5" y="581" width="16.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="270.45" y="591.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (30 samples, 13.64%)</title><rect x="101.2" y="533" width="160.9" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="104.18" y="543.5" >exit_to_usermode_loop</text>
</g>
<g >
<title>memset (1 samples, 0.45%)</title><rect x="943.3" y="373" width="5.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="946.27" y="383.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.45%)</title><rect x="873.5" y="421" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="876.55" y="431.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (33 samples, 15.00%)</title><rect x="471.3" y="469" width="177.0" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="474.27" y="479.5" >schedule_hrtimeout_rang..</text>
</g>
<g >
<title>tcp_write_xmit (25 samples, 11.36%)</title><rect x="954.0" y="389" width="134.1" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="957.00" y="399.5" >tcp_write_xmit</text>
</g>
<g >
<title>eventpoll_release_file (2 samples, 0.91%)</title><rect x="240.6" y="469" width="10.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="243.64" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place$LT$std..sys..pal..unix..fd..FileDesc$GT$::hca4f575d765c6435 (1 samples, 0.45%)</title><rect x="331.8" y="581" width="5.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="334.82" y="591.5" ></text>
</g>
<g >
<title>inet_accept (1 samples, 0.45%)</title><rect x="830.6" y="501" width="5.4" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="833.64" y="511.5" ></text>
</g>
<g >
<title>inode_init_always (1 samples, 0.45%)</title><rect x="718.0" y="421" width="5.4" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="721.00" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.45%)</title><rect x="878.9" y="405" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="881.91" y="415.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.91%)</title><rect x="1072.0" y="341" width="10.7" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1075.00" y="351.5" ></text>
</g>
<g >
<title>alloc_inode (4 samples, 1.82%)</title><rect x="718.0" y="453" width="21.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="721.00" y="463.5" >a..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.45%)</title><rect x="396.2" y="453" width="5.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="399.18" y="463.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (1 samples, 0.45%)</title><rect x="229.9" y="437" width="5.4" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="232.91" y="447.5" ></text>
</g>
<g >
<title>virtqueue_get_buf_ctx (1 samples, 0.45%)</title><rect x="187.0" y="85" width="5.4" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="190.00" y="95.5" ></text>
</g>
<g >
<title>sock_gen_put (1 samples, 0.45%)</title><rect x="980.8" y="53" width="5.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="983.82" y="63.5" ></text>
</g>
<g >
<title>inet_csk_accept (2 samples, 0.91%)</title><rect x="701.9" y="469" width="10.7" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="704.91" y="479.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.45%)</title><rect x="1098.8" y="437" width="5.4" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1101.82" y="447.5" ></text>
</g>
<g >
<title>dev_queue_xmit (8 samples, 3.64%)</title><rect x="176.3" y="213" width="42.9" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="179.27" y="223.5" >dev_..</text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.45%)</title><rect x="852.1" y="325" width="5.4" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="855.09" y="335.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (1 samples, 0.45%)</title><rect x="916.5" y="389" width="5.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="919.45" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.45%)</title><rect x="921.8" y="293" width="5.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="924.82" y="303.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.45%)</title><rect x="1152.5" y="437" width="5.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1155.45" y="447.5" ></text>
</g>
<g >
<title>dput (4 samples, 1.82%)</title><rect x="101.2" y="469" width="21.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="104.18" y="479.5" >d..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.45%)</title><rect x="846.7" y="453" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="849.73" y="463.5" ></text>
</g>
<g >
<title>ip_finish_output (18 samples, 8.18%)</title><rect x="964.7" y="293" width="96.6" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="967.73" y="303.5" >ip_finish_o..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.45%)</title><rect x="701.9" y="437" width="5.4" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="704.91" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (31 samples, 14.09%)</title><rect x="95.8" y="549" width="166.3" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="98.82" y="559.5" >do_syscall_64</text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.45%)</title><rect x="1131.0" y="437" width="5.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1134.00" y="447.5" ></text>
</g>
<g >
<title>tcp_push (25 samples, 11.36%)</title><rect x="954.0" y="421" width="134.1" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="957.00" y="431.5" >tcp_push</text>
</g>
<g >
<title>__fget_light (1 samples, 0.45%)</title><rect x="1184.6" y="437" width="5.4" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1187.64" y="447.5" ></text>
</g>
<g >
<title>virtqueue_get_buf_ctx (1 samples, 0.45%)</title><rect x="187.0" y="101" width="5.4" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="190.00" y="111.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.45%)</title><rect x="224.5" y="341" width="5.4" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="227.55" y="351.5" ></text>
</g>
<g >
<title>d_instantiate (1 samples, 0.45%)</title><rect x="809.2" y="453" width="5.3" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="812.18" y="463.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral::hc7a314cdfa20cf7c (1 samples, 0.45%)</title><rect x="278.2" y="517" width="5.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="281.18" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 0.45%)</title><rect x="95.8" y="533" width="5.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="98.82" y="543.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.91%)</title><rect x="819.9" y="453" width="10.7" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="822.91" y="463.5" ></text>
</g>
<g >
<title>core::str::pattern::simd_contains::hdfea4fed2998cd82 (1 samples, 0.45%)</title><rect x="380.1" y="581" width="5.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="383.09" y="591.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.45%)</title><rect x="106.5" y="405" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="109.55" y="415.5" ></text>
</g>
<g >
<title>inet_release (15 samples, 6.82%)</title><rect x="149.5" y="437" width="80.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="152.45" y="447.5" >inet_rele..</text>
</g>
<g >
<title>core::cmp::impls::_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$::eq::hd2503f5e1ec315c9 (1 samples, 0.45%)</title><rect x="299.6" y="581" width="5.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="302.64" y="591.5" ></text>
</g>
<g >
<title>eventpoll_release_file (5 samples, 2.27%)</title><rect x="122.6" y="469" width="26.9" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="125.64" y="479.5" >e..</text>
</g>
<g >
<title>__dev_queue_xmit (8 samples, 3.64%)</title><rect x="176.3" y="197" width="42.9" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="179.27" y="207.5" >__de..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.45%)</title><rect x="1147.1" y="421" width="5.4" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1150.09" y="431.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.45%)</title><rect x="219.2" y="341" width="5.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="222.18" y="351.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.45%)</title><rect x="980.8" y="101" width="5.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="983.82" y="111.5" ></text>
</g>
<g >
<title>clear_page_rep (1 samples, 0.45%)</title><rect x="921.8" y="229" width="5.4" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="924.82" y="239.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.45%)</title><rect x="1147.1" y="437" width="5.4" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1150.09" y="447.5" ></text>
</g>
<g >
<title>inet_release (1 samples, 0.45%)</title><rect x="149.5" y="421" width="5.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="152.45" y="431.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.45%)</title><rect x="160.2" y="325" width="5.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="163.18" y="335.5" ></text>
</g>
<g >
<title>inet_accept (3 samples, 1.36%)</title><rect x="701.9" y="485" width="16.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="704.91" y="495.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.45%)</title><rect x="777.0" y="389" width="5.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="780.00" y="399.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 3.18%)</title><rect x="846.7" y="517" width="37.6" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="849.73" y="527.5" >exi..</text>
</g>
<g >
<title>ip_mc_drop_socket (1 samples, 0.45%)</title><rect x="229.9" y="421" width="5.4" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="232.91" y="431.5" ></text>
</g>
<g >
<title>__ip_finish_output (18 samples, 8.18%)</title><rect x="964.7" y="277" width="96.6" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="967.73" y="287.5" >__ip_finish..</text>
</g>
<g >
<title>free_compound_page (1 samples, 0.45%)</title><rect x="1136.4" y="357" width="5.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="1139.36" y="367.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.45%)</title><rect x="1098.8" y="421" width="5.4" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1101.82" y="431.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad::h764b76a6b1eb0486 (1 samples, 0.45%)</title><rect x="272.8" y="549" width="5.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="275.82" y="559.5" ></text>
</g>
<g >
<title>iput (4 samples, 1.82%)</title><rect x="852.1" y="405" width="21.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="855.09" y="415.5" >i..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.45%)</title><rect x="841.4" y="517" width="5.3" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="844.36" y="527.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 1.36%)</title><rect x="921.8" y="341" width="16.1" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="924.82" y="351.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.45%)</title><rect x="766.3" y="405" width="5.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="769.27" y="415.5" ></text>
</g>
<g >
<title>_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$::index::he94fc11a5acea0e5 (1 samples, 0.45%)</title><rect x="69.0" y="581" width="5.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="72.00" y="591.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.45%)</title><rect x="465.9" y="437" width="5.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="468.91" y="447.5" ></text>
</g>
<g >
<title>kmalloc_array (1 samples, 0.45%)</title><rect x="986.2" y="149" width="5.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="989.18" y="159.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.45%)</title><rect x="26.1" y="581" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="29.09" y="591.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (7 samples, 3.18%)</title><rect x="181.6" y="165" width="37.6" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="184.64" y="175.5" >dev..</text>
</g>
<g >
<title>sock_recvmsg (11 samples, 5.00%)</title><rect x="1125.6" y="485" width="59.0" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="1128.64" y="495.5" >sock_r..</text>
</g>
<g >
<title>__tcp_close (14 samples, 6.36%)</title><rect x="154.8" y="405" width="75.1" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="157.82" y="415.5" >__tcp_cl..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.45%)</title><rect x="154.8" y="373" width="5.4" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="157.82" y="383.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (1 samples, 0.45%)</title><rect x="1082.7" y="373" width="5.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1085.73" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 17.27%)</title><rect x="905.7" y="549" width="203.8" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="908.73" y="559.5" >entry_SYSCALL_64_after_hwf..</text>
</g>
<g >
<title>sock_alloc (2 samples, 0.91%)</title><rect x="739.5" y="469" width="10.7" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="742.45" y="479.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.45%)</title><rect x="986.2" y="133" width="5.3" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="989.18" y="143.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.45%)</title><rect x="948.6" y="421" width="5.4" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="951.64" y="431.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.45%)</title><rect x="707.3" y="421" width="5.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="710.27" y="431.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.45%)</title><rect x="846.7" y="501" width="5.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="849.73" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (9 samples, 4.09%)</title><rect x="390.8" y="533" width="48.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="393.82" y="543.5" >__x6..</text>
</g>
<g >
<title>skb_clone (1 samples, 0.45%)</title><rect x="1061.3" y="357" width="5.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1064.27" y="367.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (3 samples, 1.36%)</title><rect x="106.5" y="437" width="16.1" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="109.55" y="447.5" ></text>
</g>
<g >
<title>ep_send_events_proc (4 samples, 1.82%)</title><rect x="449.8" y="469" width="21.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="452.82" y="479.5" >e..</text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.45%)</title><rect x="165.5" y="341" width="5.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="168.55" y="351.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.45%)</title><rect x="1104.2" y="485" width="5.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1107.18" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.45%)</title><rect x="101.2" y="421" width="5.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="104.18" y="431.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.45%)</title><rect x="1120.3" y="501" width="5.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1123.27" y="511.5" ></text>
</g>
<g >
<title>__ip_finish_output (8 samples, 3.64%)</title><rect x="176.3" y="245" width="42.9" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="179.27" y="255.5" >__ip..</text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.91%)</title><rect x="728.7" y="389" width="10.8" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="731.73" y="399.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (21 samples, 9.55%)</title><rect x="954.0" y="373" width="112.6" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="957.00" y="383.5" >__tcp_transmi..</text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="760.9" y="373" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="763.91" y="383.5" ></text>
</g>
<g >
<title>_$LT$$RF$std..net..tcp..TcpStream$u20$as$u20$std..io..Read$GT$::read_buf::hb3d75b330a992803 (1 samples, 0.45%)</title><rect x="1109.5" y="565" width="5.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1112.55" y="575.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (5 samples, 2.27%)</title><rect x="396.2" y="501" width="26.8" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="399.18" y="511.5" >e..</text>
</g>
<g >
<title>wakeup_source_unregister (1 samples, 0.45%)</title><rect x="144.1" y="453" width="5.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="147.09" y="463.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.45%)</title><rect x="675.1" y="565" width="5.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="678.09" y="575.5" ></text>
</g>
<g >
<title>schedule (33 samples, 15.00%)</title><rect x="471.3" y="453" width="177.0" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="474.27" y="463.5" >schedule</text>
</g>
<g >
<title>____fput (29 samples, 13.18%)</title><rect x="101.2" y="501" width="155.5" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="104.18" y="511.5" >____fput</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.45%)</title><rect x="181.6" y="149" width="5.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="184.64" y="159.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (11 samples, 5.00%)</title><rect x="170.9" y="373" width="59.0" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="173.91" y="383.5" >__tcp_..</text>
</g>
<g >
<title>finish_task_switch (33 samples, 15.00%)</title><rect x="471.3" y="405" width="177.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="474.27" y="415.5" >finish_task_switch</text>
</g>
<g >
<title>mutex_lock (1 samples, 0.45%)</title><rect x="423.0" y="517" width="5.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="426.00" y="527.5" ></text>
</g>
<g >
<title>__dev_kfree_skb_any (1 samples, 0.45%)</title><rect x="980.8" y="133" width="5.4" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="983.82" y="143.5" ></text>
</g>
<g >
<title>ep_remove (3 samples, 1.36%)</title><rect x="122.6" y="453" width="16.1" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="125.64" y="463.5" ></text>
</g>
<g >
<title>alloc::boxed::Box$LT$$u5b$T$u5d$$GT$::new_uninit_slice::h3f88720d0f292749 (1 samples, 0.45%)</title><rect x="262.1" y="581" width="5.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="265.09" y="591.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.45%)</title><rect x="980.8" y="85" width="5.4" height="15.0" fill="rgb(224,84,84)" rx="2" ry="2" />
<text  x="983.82" y="95.5" ></text>
</g>
<g >
<title>__sock_release (17 samples, 7.73%)</title><rect x="149.5" y="453" width="91.1" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="152.45" y="463.5" >__sock_rel..</text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.45%)</title><rect x="170.9" y="357" width="5.4" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="173.91" y="367.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (4 samples, 1.82%)</title><rect x="449.8" y="485" width="21.5" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="452.82" y="495.5" >e..</text>
</g>
<g >
<title>new_inode_pseudo (4 samples, 1.82%)</title><rect x="718.0" y="469" width="21.5" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="721.00" y="479.5" >n..</text>
</g>
<g >
<title>virtqueue_enable_cb_delayed (1 samples, 0.45%)</title><rect x="991.5" y="149" width="5.4" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="994.55" y="159.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$::fmt::h0f5c282eb890c6e7 (1 samples, 0.45%)</title><rect x="278.2" y="533" width="5.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="281.18" y="543.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (3 samples, 1.36%)</title><rect x="793.1" y="453" width="16.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="796.09" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.91%)</title><rect x="895.0" y="517" width="10.7" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="898.00" y="527.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 1.36%)</title><rect x="921.8" y="357" width="16.1" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="924.82" y="367.5" ></text>
</g>
<g >
<title>__sock_sendmsg (37 samples, 16.82%)</title><rect x="905.7" y="485" width="198.5" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="908.73" y="495.5" >__sock_sendmsg</text>
</g>
<g >
<title>__close_fd (1 samples, 0.45%)</title><rect x="95.8" y="517" width="5.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="98.82" y="527.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.45%)</title><rect x="836.0" y="485" width="5.4" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="839.00" y="495.5" ></text>
</g>
<g >
<title>__d_instantiate (1 samples, 0.45%)</title><rect x="809.2" y="437" width="5.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="812.18" y="447.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.45%)</title><rect x="1163.2" y="373" width="5.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1166.18" y="383.5" ></text>
</g>
<g >
<title>ip_finish_output2 (18 samples, 8.18%)</title><rect x="964.7" y="261" width="96.6" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="967.73" y="271.5" >ip_finish_o..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8::h426e347b1fe46ece (1 samples, 0.45%)</title><rect x="315.7" y="581" width="5.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="318.73" y="591.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.45%)</title><rect x="1136.4" y="325" width="5.3" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="1139.36" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 17.27%)</title><rect x="905.7" y="533" width="203.8" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="908.73" y="543.5" >do_syscall_64</text>
</g>
<g >
<title>core::cmp::max_by::h8f5637ae2775e27e (1 samples, 0.45%)</title><rect x="305.0" y="581" width="5.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="308.00" y="591.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.45%)</title><rect x="117.3" y="389" width="5.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="120.27" y="399.5" ></text>
</g>
<g >
<title>_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$::is_contained_in::h106b216077470918 (2 samples, 0.91%)</title><rect x="42.2" y="581" width="10.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="45.18" y="591.5" ></text>
</g>
<g >
<title>_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$::deallocate::hc9bee2e9a3848ede (1 samples, 0.45%)</title><rect x="58.3" y="581" width="5.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="61.27" y="591.5" ></text>
</g>
<g >
<title>ip_local_out (18 samples, 8.18%)</title><rect x="964.7" y="325" width="96.6" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="967.73" y="335.5" >ip_local_out</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.45%)</title><rect x="1125.6" y="453" width="5.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1128.64" y="463.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (34 samples, 15.45%)</title><rect x="916.5" y="437" width="182.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="919.45" y="447.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>tcp_close (14 samples, 6.36%)</title><rect x="154.8" y="421" width="75.1" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="157.82" y="431.5" >tcp_close</text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.45%)</title><rect x="1088.1" y="389" width="5.4" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1091.09" y="399.5" ></text>
</g>
<g >
<title>__libc_close (31 samples, 14.09%)</title><rect x="95.8" y="581" width="166.3" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="98.82" y="591.5" >__libc_close</text>
</g>
<g >
<title>schedule_hrtimeout_range (33 samples, 15.00%)</title><rect x="471.3" y="485" width="177.0" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="474.27" y="495.5" >schedule_hrtimeout_range</text>
</g>
<g >
<title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert_in_slot::h85564f60ffcd0b0f (1 samples, 0.45%)</title><rect x="653.6" y="581" width="5.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="656.64" y="591.5" ></text>
</g>
<g >
<title>ksys_ioctl (1 samples, 0.45%)</title><rect x="900.4" y="485" width="5.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="903.36" y="495.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.45%)</title><rect x="176.3" y="181" width="5.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="179.27" y="191.5" ></text>
</g>
<g >
<title>_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$::borrow::h8668756d42ebfc56 (1 samples, 0.45%)</title><rect x="52.9" y="581" width="5.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="55.91" y="591.5" ></text>
</g>
<g >
<title>accept4 (38 samples, 17.27%)</title><rect x="680.5" y="565" width="203.8" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="683.45" y="575.5" >accept4</text>
</g>
<g >
<title>inet_accept (1 samples, 0.45%)</title><rect x="830.6" y="485" width="5.4" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="833.64" y="495.5" ></text>
</g>
<g >
<title>tcp_sendmsg (37 samples, 16.82%)</title><rect x="905.7" y="453" width="198.5" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="908.73" y="463.5" >tcp_sendmsg</text>
</g>
<g >
<title>core::ptr::non_null::NonNull$LT$T$GT$::sub_ptr::h2310ded1363f6d24 (2 samples, 0.91%)</title><rect x="337.2" y="581" width="10.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="340.18" y="591.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.45%)</title><rect x="1082.7" y="341" width="5.4" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1085.73" y="351.5" ></text>
</g>
<g >
<title>sock_close (17 samples, 7.73%)</title><rect x="149.5" y="469" width="91.1" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="152.45" y="479.5" >sock_close</text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.45%)</title><rect x="401.5" y="437" width="5.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="404.55" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.45%)</title><rect x="36.8" y="533" width="5.4" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="39.82" y="543.5" ></text>
</g>
<g >
<title>sock_alloc_file (13 samples, 5.91%)</title><rect x="750.2" y="485" width="69.7" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="753.18" y="495.5" >sock_al..</text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.45%)</title><rect x="771.6" y="389" width="5.4" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="774.64" y="399.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (1 samples, 0.45%)</title><rect x="696.5" y="485" width="5.4" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="699.55" y="495.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.45%)</title><rect x="1184.6" y="453" width="5.4" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1187.64" y="463.5" ></text>
</g>
<g >
<title>epoll_ctl (9 samples, 4.09%)</title><rect x="390.8" y="581" width="48.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="393.82" y="591.5" >epol..</text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.45%)</title><rect x="852.1" y="309" width="5.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="855.09" y="319.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.91%)</title><rect x="819.9" y="437" width="10.7" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="822.91" y="447.5" ></text>
</g>
<g >
<title>virtqueue_notify (5 samples, 2.27%)</title><rect x="192.4" y="133" width="26.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="195.36" y="143.5" >v..</text>
</g>
<g >
<title>destroy_inode (1 samples, 0.45%)</title><rect x="106.5" y="389" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="109.55" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.45%)</title><rect x="26.1" y="533" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="29.09" y="543.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.45%)</title><rect x="707.3" y="437" width="5.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="710.27" y="447.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.45%)</title><rect x="1141.7" y="389" width="5.4" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1144.73" y="399.5" ></text>
</g>
<g >
<title>start_xmit (6 samples, 2.73%)</title><rect x="187.0" y="149" width="32.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="190.00" y="159.5" >st..</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.91%)</title><rect x="1050.5" y="245" width="10.8" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1053.55" y="255.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.45%)</title><rect x="1136.4" y="341" width="5.3" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="1139.36" y="351.5" ></text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 0.45%)</title><rect x="187.0" y="133" width="5.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="190.00" y="143.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.91%)</title><rect x="819.9" y="485" width="10.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="822.91" y="495.5" ></text>
</g>
<g >
<title>sock_edemux (1 samples, 0.45%)</title><rect x="980.8" y="69" width="5.4" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="983.82" y="79.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (25 samples, 11.36%)</title><rect x="954.0" y="405" width="134.1" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="957.00" y="415.5" >__tcp_push_pendi..</text>
</g>
<g >
<title>destroy_inode (2 samples, 0.91%)</title><rect x="852.1" y="373" width="10.7" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="855.09" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner$LT$A$GT$::try_allocate_in::h36d220b882326cce (1 samples, 0.45%)</title><rect x="283.5" y="581" width="5.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="286.55" y="591.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.45%)</title><rect x="396.2" y="469" width="5.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="399.18" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.45%)</title><rect x="26.1" y="565" width="5.4" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="29.09" y="575.5" ></text>
</g>
<g >
<title>virtqueue_notify (10 samples, 4.55%)</title><rect x="996.9" y="165" width="53.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="999.91" y="175.5" >virtq..</text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.91%)</title><rect x="1173.9" y="437" width="10.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1176.91" y="447.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.45%)</title><rect x="111.9" y="357" width="5.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="114.91" y="367.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.45%)</title><rect x="1093.5" y="405" width="5.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1096.45" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.45%)</title><rect x="36.8" y="565" width="5.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="39.82" y="575.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.45%)</title><rect x="117.3" y="373" width="5.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="120.27" y="383.5" ></text>
</g>
<g >
<title>core::str::pattern::Searcher::next_match::hd7d29ab3249b449c (3 samples, 1.36%)</title><rect x="364.0" y="581" width="16.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="367.00" y="591.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.45%)</title><rect x="1082.7" y="357" width="5.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1085.73" y="367.5" ></text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.91%)</title><rect x="428.4" y="501" width="10.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="431.36" y="511.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.45%)</title><rect x="1061.3" y="325" width="5.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1064.27" y="335.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.45%)</title><rect x="980.8" y="117" width="5.4" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="983.82" y="127.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.45%)</title><rect x="1093.5" y="389" width="5.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1096.45" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::_$LT$impl$u20$std..io..Read$u20$for$u20$$RF$mut$u20$R$GT$::read_buf::hb610389bd5c33a5c (15 samples, 6.82%)</title><rect x="1109.5" y="581" width="80.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1112.55" y="591.5" >std::io::..</text>
</g>
<g >
<title>__slab_alloc (3 samples, 1.36%)</title><rect x="921.8" y="373" width="16.1" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="924.82" y="383.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.45%)</title><rect x="916.5" y="357" width="5.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="919.45" y="367.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.45%)</title><rect x="1131.0" y="453" width="5.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1134.00" y="463.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.91%)</title><rect x="449.8" y="421" width="10.7" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="452.82" y="431.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.45%)</title><rect x="235.3" y="421" width="5.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="238.27" y="431.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.45%)</title><rect x="101.2" y="437" width="5.3" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="104.18" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place$LT$core..option..Option$LT$std..net..tcp..TcpStream$GT$$GT$::h76422310a84b7cc3 (1 samples, 0.45%)</title><rect x="326.5" y="581" width="5.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="329.45" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 1.36%)</title><rect x="793.1" y="421" width="16.1" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="796.09" y="431.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (1 samples, 0.45%)</title><rect x="862.8" y="373" width="5.4" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="865.82" y="383.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.45%)</title><rect x="857.5" y="357" width="5.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="860.45" y="367.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.45%)</title><rect x="251.4" y="469" width="5.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="254.36" y="479.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.45%)</title><rect x="417.6" y="421" width="5.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="420.64" y="431.5" ></text>
</g>
<g >
<title>ip_local_out (8 samples, 3.64%)</title><rect x="176.3" y="293" width="42.9" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="179.27" y="303.5" >ip_l..</text>
</g>
<g >
<title>tcp_write_xmit (10 samples, 4.55%)</title><rect x="176.3" y="357" width="53.6" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="179.27" y="367.5" >tcp_w..</text>
</g>
<g >
<title>skb_release_data (2 samples, 0.91%)</title><rect x="1136.4" y="405" width="10.7" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1139.36" y="415.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.45%)</title><rect x="160.2" y="309" width="5.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="163.18" y="319.5" ></text>
</g>
<g >
<title>iowrite16 (5 samples, 2.27%)</title><rect x="192.4" y="101" width="26.8" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="195.36" y="111.5" >i..</text>
</g>
<g >
<title>__d_alloc (3 samples, 1.36%)</title><rect x="793.1" y="437" width="16.1" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="796.09" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.91%)</title><rect x="406.9" y="421" width="10.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="409.91" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.45%)</title><rect x="101.2" y="405" width="5.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="104.18" y="415.5" ></text>
</g>
<g >
<title>alloc_empty_file (8 samples, 3.64%)</title><rect x="750.2" y="437" width="42.9" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="753.18" y="447.5" >allo..</text>
</g>
<g >
<title>http_server_rus (220 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >http_server_rus</text>
</g>
<g >
<title>ep_poll (37 samples, 16.82%)</title><rect x="449.8" y="501" width="198.5" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="452.82" y="511.5" >ep_poll</text>
</g>
<g >
<title>__alloc_file (6 samples, 2.73%)</title><rect x="750.2" y="421" width="32.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="753.18" y="431.5" >__..</text>
</g>
<g >
<title>http_server_rust::server::use_epoll::h44f35bd2ae21f044 (45 samples, 20.45%)</title><rect x="664.4" y="581" width="241.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="667.36" y="591.5" >http_server_rust::server::use_ep..</text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.45%)</title><rect x="862.8" y="357" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="865.82" y="367.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts::precondition_check::h3ed38bb6402b34d4 (3 samples, 1.36%)</title><rect x="347.9" y="581" width="16.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="350.91" y="591.5" ></text>
</g>
</g>
</svg>
