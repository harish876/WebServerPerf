<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1077.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1077.00"> </text><svg id="frames" x="10" width="1180"><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="0.7070%" y="885" width="0.3093%" height="15" fill="rgb(227,0,7)"/><text x="0.9570%" y="895.50"></text></g><g><title>__close [libpthread-2.31.so] (21 samples, 0.93%)</title><rect x="0.2651%" y="933" width="0.9280%" height="15" fill="rgb(217,0,24)"/><text x="0.5151%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (11 samples, 0.49%)</title><rect x="0.7070%" y="917" width="0.4861%" height="15" fill="rgb(221,193,54)"/><text x="0.9570%" y="927.50"></text></g><g><title>do_syscall_64 [linux] (11 samples, 0.49%)</title><rect x="0.7070%" y="901" width="0.4861%" height="15" fill="rgb(248,212,6)"/><text x="0.9570%" y="911.50"></text></g><g><title>__x64_sys_close [linux] (3 samples, 0.13%)</title><rect x="1.0605%" y="885" width="0.1326%" height="15" fill="rgb(208,68,35)"/><text x="1.3105%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (12 samples, 0.53%)</title><rect x="1.4141%" y="885" width="0.5303%" height="15" fill="rgb(232,128,0)"/><text x="1.6641%" y="895.50"></text></g><g><title>__alloc_fd [linux] (4 samples, 0.18%)</title><rect x="2.1653%" y="837" width="0.1768%" height="15" fill="rgb(207,160,47)"/><text x="2.4153%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="2.1653%" y="821" width="0.1768%" height="15" fill="rgb(228,23,34)"/><text x="2.4153%" y="831.50"></text></g><g><title>_raw_spin_lock [linux] (3 samples, 0.13%)</title><rect x="2.3420%" y="837" width="0.1326%" height="15" fill="rgb(218,30,26)"/><text x="2.5920%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="2.3420%" y="821" width="0.1326%" height="15" fill="rgb(220,122,19)"/><text x="2.5920%" y="831.50"></text></g><g><title>get_unused_fd_flags [linux] (9 samples, 0.40%)</title><rect x="2.1653%" y="853" width="0.3977%" height="15" fill="rgb(250,228,42)"/><text x="2.4153%" y="863.50"></text></g><g><title>_raw_spin_lock_bh [linux] (5 samples, 0.22%)</title><rect x="2.6513%" y="837" width="0.2209%" height="15" fill="rgb(240,193,28)"/><text x="2.9013%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="2.6513%" y="821" width="0.2209%" height="15" fill="rgb(216,20,37)"/><text x="2.9013%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="2.9165%" y="821" width="0.2209%" height="15" fill="rgb(206,188,39)"/><text x="3.1665%" y="831.50"></text></g><g><title>_raw_spin_lock_bh [linux] (3 samples, 0.13%)</title><rect x="3.1816%" y="821" width="0.1326%" height="15" fill="rgb(217,207,13)"/><text x="3.4316%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="3.1816%" y="805" width="0.1326%" height="15" fill="rgb(231,73,38)"/><text x="3.4316%" y="815.50"></text></g><g><title>kmem_cache_free [linux] (6 samples, 0.27%)</title><rect x="3.3584%" y="821" width="0.2651%" height="15" fill="rgb(225,20,46)"/><text x="3.6084%" y="831.50"></text></g><g><title>__slab_free [linux] (4 samples, 0.18%)</title><rect x="3.4468%" y="805" width="0.1768%" height="15" fill="rgb(210,31,41)"/><text x="3.6968%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="3.4468%" y="789" width="0.1768%" height="15" fill="rgb(221,200,47)"/><text x="3.6968%" y="799.50"></text></g><g><title>inet_csk_accept [linux] (18 samples, 0.80%)</title><rect x="2.9165%" y="837" width="0.7954%" height="15" fill="rgb(226,26,5)"/><text x="3.1665%" y="847.50"></text></g><g><title>inet_accept [linux] (30 samples, 1.33%)</title><rect x="2.5630%" y="853" width="1.3257%" height="15" fill="rgb(249,33,26)"/><text x="2.8130%" y="863.50"></text></g><g><title>move_addr_to_user [linux] (7 samples, 0.31%)</title><rect x="3.9328%" y="853" width="0.3093%" height="15" fill="rgb(235,183,28)"/><text x="4.1828%" y="863.50"></text></g><g><title>_raw_spin_lock [linux] (9 samples, 0.40%)</title><rect x="4.3747%" y="837" width="0.3977%" height="15" fill="rgb(221,5,38)"/><text x="4.6247%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="4.3747%" y="821" width="0.3977%" height="15" fill="rgb(247,18,42)"/><text x="4.6247%" y="831.50"></text></g><g><title>inode_init_always [linux] (6 samples, 0.27%)</title><rect x="4.8608%" y="805" width="0.2651%" height="15" fill="rgb(241,131,45)"/><text x="5.1108%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="5.1701%" y="773" width="0.2209%" height="15" fill="rgb(249,31,29)"/><text x="5.4201%" y="783.50"></text></g><g><title>kmem_cache_alloc [linux] (15 samples, 0.66%)</title><rect x="5.1701%" y="789" width="0.6628%" height="15" fill="rgb(225,111,53)"/><text x="5.4201%" y="799.50"></text></g><g><title>memcg_kmem_get_cache [linux] (8 samples, 0.35%)</title><rect x="5.4795%" y="773" width="0.3535%" height="15" fill="rgb(238,160,17)"/><text x="5.7295%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="5.4795%" y="757" width="0.3535%" height="15" fill="rgb(214,148,48)"/><text x="5.7295%" y="767.50"></text></g><g><title>alloc_inode [linux] (24 samples, 1.06%)</title><rect x="4.8166%" y="821" width="1.0605%" height="15" fill="rgb(232,36,49)"/><text x="5.0666%" y="831.50"></text></g><g><title>sock_alloc_inode [linux] (16 samples, 0.71%)</title><rect x="5.1701%" y="805" width="0.7070%" height="15" fill="rgb(209,103,24)"/><text x="5.4201%" y="815.50"></text></g><g><title>sock_alloc [linux] (36 samples, 1.59%)</title><rect x="4.3305%" y="853" width="1.5908%" height="15" fill="rgb(229,88,8)"/><text x="4.5805%" y="863.50"></text></g><g><title>new_inode_pseudo [linux] (25 samples, 1.10%)</title><rect x="4.8166%" y="837" width="1.1047%" height="15" fill="rgb(213,181,19)"/><text x="5.0666%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="6.0981%" y="805" width="0.1768%" height="15" fill="rgb(254,191,54)"/><text x="6.3481%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="6.2749%" y="773" width="0.3093%" height="15" fill="rgb(241,83,37)"/><text x="6.5249%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="6.6284%" y="757" width="0.2651%" height="15" fill="rgb(233,36,39)"/><text x="6.8784%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="6.8935%" y="741" width="0.1768%" height="15" fill="rgb(226,3,54)"/><text x="7.1435%" y="751.50"></text></g><g><title>__slab_alloc [linux] (6 samples, 0.27%)</title><rect x="6.8935%" y="757" width="0.2651%" height="15" fill="rgb(245,192,40)"/><text x="7.1435%" y="767.50"></text></g><g><title>kmem_cache_alloc [linux] (16 samples, 0.71%)</title><rect x="6.6284%" y="773" width="0.7070%" height="15" fill="rgb(238,167,29)"/><text x="6.8784%" y="783.50"></text></g><g><title>memcg_kmem_get_cache [linux] (4 samples, 0.18%)</title><rect x="7.1586%" y="757" width="0.1768%" height="15" fill="rgb(232,182,51)"/><text x="7.4086%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="7.1586%" y="741" width="0.1768%" height="15" fill="rgb(231,60,39)"/><text x="7.4086%" y="751.50"></text></g><g><title>apparmor_file_alloc_security [linux] (4 samples, 0.18%)</title><rect x="7.4238%" y="757" width="0.1768%" height="15" fill="rgb(208,69,12)"/><text x="7.6738%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="7.4238%" y="741" width="0.1768%" height="15" fill="rgb(235,93,37)"/><text x="7.6738%" y="751.50"></text></g><g><title>alloc_empty_file [linux] (34 samples, 1.50%)</title><rect x="6.2749%" y="805" width="1.5024%" height="15" fill="rgb(213,116,39)"/><text x="6.5249%" y="815.50"></text></g><g><title>__alloc_file [linux] (34 samples, 1.50%)</title><rect x="6.2749%" y="789" width="1.5024%" height="15" fill="rgb(222,207,29)"/><text x="6.5249%" y="799.50"></text></g><g><title>security_file_alloc [linux] (9 samples, 0.40%)</title><rect x="7.3796%" y="773" width="0.3977%" height="15" fill="rgb(206,96,30)"/><text x="7.6296%" y="783.50"></text></g><g><title>alloc_file [linux] (39 samples, 1.72%)</title><rect x="6.0981%" y="821" width="1.7234%" height="15" fill="rgb(218,138,4)"/><text x="6.3481%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="7.9099%" y="773" width="0.1326%" height="15" fill="rgb(250,191,14)"/><text x="8.1599%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="8.0424%" y="757" width="0.3093%" height="15" fill="rgb(239,60,40)"/><text x="8.2924%" y="767.50"></text></g><g><title>__slab_alloc [linux] (12 samples, 0.53%)</title><rect x="8.0424%" y="773" width="0.5303%" height="15" fill="rgb(206,27,48)"/><text x="8.2924%" y="783.50"></text></g><g><title>___slab_alloc [linux] (5 samples, 0.22%)</title><rect x="8.3517%" y="757" width="0.2209%" height="15" fill="rgb(225,35,8)"/><text x="8.6017%" y="767.50"></text></g><g><title>new_slab [linux] (5 samples, 0.22%)</title><rect x="8.3517%" y="741" width="0.2209%" height="15" fill="rgb(250,213,24)"/><text x="8.6017%" y="751.50"></text></g><g><title>allocate_slab [linux] (5 samples, 0.22%)</title><rect x="8.3517%" y="725" width="0.2209%" height="15" fill="rgb(247,123,22)"/><text x="8.6017%" y="735.50"></text></g><g><title>alloc_slab_page [linux] (4 samples, 0.18%)</title><rect x="8.3959%" y="709" width="0.1768%" height="15" fill="rgb(231,138,38)"/><text x="8.6459%" y="719.50"></text></g><g><title>alloc_pages_current [linux] (4 samples, 0.18%)</title><rect x="8.3959%" y="693" width="0.1768%" height="15" fill="rgb(231,145,46)"/><text x="8.6459%" y="703.50"></text></g><g><title>__alloc_pages_nodemask [linux] (3 samples, 0.13%)</title><rect x="8.4401%" y="677" width="0.1326%" height="15" fill="rgb(251,118,11)"/><text x="8.6901%" y="687.50"></text></g><g><title>get_page_from_freelist [linux] (3 samples, 0.13%)</title><rect x="8.4401%" y="661" width="0.1326%" height="15" fill="rgb(217,147,25)"/><text x="8.6901%" y="671.50"></text></g><g><title>kmem_cache_alloc [linux] (19 samples, 0.84%)</title><rect x="7.9099%" y="789" width="0.8396%" height="15" fill="rgb(247,81,37)"/><text x="8.1599%" y="799.50"></text></g><g><title>__d_alloc [linux] (23 samples, 1.02%)</title><rect x="7.8215%" y="805" width="1.0163%" height="15" fill="rgb(209,12,38)"/><text x="8.0715%" y="815.50"></text></g><g><title>d_alloc_pseudo [linux] (24 samples, 1.06%)</title><rect x="7.8215%" y="821" width="1.0605%" height="15" fill="rgb(227,1,9)"/><text x="8.0715%" y="831.50"></text></g><g><title>d_instantiate [linux] (3 samples, 0.13%)</title><rect x="8.8820%" y="821" width="0.1326%" height="15" fill="rgb(248,47,43)"/><text x="9.1320%" y="831.50"></text></g><g><title>alloc_file_pseudo [linux] (72 samples, 3.18%)</title><rect x="5.9655%" y="837" width="3.1816%" height="15" fill="rgb(221,10,30)"/><text x="6.2155%" y="847.50">all..</text></g><g><title>sock_alloc_file [linux] (74 samples, 3.27%)</title><rect x="5.9213%" y="853" width="3.2700%" height="15" fill="rgb(210,229,1)"/><text x="6.1713%" y="863.50">soc..</text></g><g><title>__sys_accept4 [linux] (172 samples, 7.60%)</title><rect x="1.9443%" y="869" width="7.6005%" height="15" fill="rgb(222,148,37)"/><text x="2.1943%" y="879.50">__sys_acce..</text></g><g><title>sockfd_lookup_light [linux] (8 samples, 0.35%)</title><rect x="9.1913%" y="853" width="0.3535%" height="15" fill="rgb(234,67,33)"/><text x="9.4413%" y="863.50"></text></g><g><title>__fdget [linux] (6 samples, 0.27%)</title><rect x="9.2797%" y="837" width="0.2651%" height="15" fill="rgb(247,98,35)"/><text x="9.5297%" y="847.50"></text></g><g><title>__fget_light [linux] (6 samples, 0.27%)</title><rect x="9.2797%" y="821" width="0.2651%" height="15" fill="rgb(247,138,52)"/><text x="9.5297%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="9.2797%" y="805" width="0.2651%" height="15" fill="rgb(213,79,30)"/><text x="9.5297%" y="815.50"></text></g><g><title>__x64_sys_accept [linux] (174 samples, 7.69%)</title><rect x="1.9443%" y="885" width="7.6889%" height="15" fill="rgb(246,177,23)"/><text x="2.1943%" y="895.50">__x64_sys_a..</text></g><g><title>accept [libpthread-2.31.so] (192 samples, 8.48%)</title><rect x="1.1931%" y="933" width="8.4843%" height="15" fill="rgb(230,62,27)"/><text x="1.4431%" y="943.50">accept [libp..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (187 samples, 8.26%)</title><rect x="1.4141%" y="917" width="8.2634%" height="15" fill="rgb(216,154,8)"/><text x="1.6641%" y="927.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 [linux] (187 samples, 8.26%)</title><rect x="1.4141%" y="901" width="8.2634%" height="15" fill="rgb(244,35,45)"/><text x="1.6641%" y="911.50">do_syscall_6..</text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="9.8542%" y="885" width="0.3977%" height="15" fill="rgb(251,115,12)"/><text x="10.1042%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (19 samples, 0.84%)</title><rect x="10.2519%" y="869" width="0.8396%" height="15" fill="rgb(240,54,50)"/><text x="10.5019%" y="879.50"></text></g><g><title>__fdget [linux] (3 samples, 0.13%)</title><rect x="11.0915%" y="869" width="0.1326%" height="15" fill="rgb(233,84,52)"/><text x="11.3415%" y="879.50"></text></g><g><title>__fget_light [linux] (3 samples, 0.13%)</title><rect x="11.0915%" y="853" width="0.1326%" height="15" fill="rgb(207,117,47)"/><text x="11.3415%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="11.0915%" y="837" width="0.1326%" height="15" fill="rgb(249,43,39)"/><text x="11.3415%" y="847.50"></text></g><g><title>_raw_spin_lock [linux] (5 samples, 0.22%)</title><rect x="11.2682%" y="869" width="0.2209%" height="15" fill="rgb(209,38,44)"/><text x="11.5182%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="11.2682%" y="853" width="0.2209%" height="15" fill="rgb(236,212,23)"/><text x="11.5182%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="11.5334%" y="853" width="0.3093%" height="15" fill="rgb(242,79,21)"/><text x="11.7834%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="11.9753%" y="805" width="0.2651%" height="15" fill="rgb(211,96,35)"/><text x="12.2253%" y="815.50"></text></g><g><title>add_wait_queue [linux] (4 samples, 0.18%)</title><rect x="12.3288%" y="789" width="0.1768%" height="15" fill="rgb(253,215,40)"/><text x="12.5788%" y="799.50"></text></g><g><title>__lock_text_start [linux] (4 samples, 0.18%)</title><rect x="12.3288%" y="773" width="0.1768%" height="15" fill="rgb(211,81,21)"/><text x="12.5788%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="12.3288%" y="757" width="0.1768%" height="15" fill="rgb(208,190,38)"/><text x="12.5788%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="12.5055%" y="773" width="0.1768%" height="15" fill="rgb(235,213,38)"/><text x="12.7555%" y="783.50"></text></g><g><title>tcp_poll [linux] (20 samples, 0.88%)</title><rect x="11.9753%" y="821" width="0.8838%" height="15" fill="rgb(237,122,38)"/><text x="12.2253%" y="831.50"></text></g><g><title>ep_ptable_queue_proc [linux] (14 samples, 0.62%)</title><rect x="12.2404%" y="805" width="0.6186%" height="15" fill="rgb(244,218,35)"/><text x="12.4904%" y="815.50"></text></g><g><title>kmem_cache_alloc [linux] (8 samples, 0.35%)</title><rect x="12.5055%" y="789" width="0.3535%" height="15" fill="rgb(240,68,47)"/><text x="12.7555%" y="799.50"></text></g><g><title>ep_item_poll.isra.0 [linux] (24 samples, 1.06%)</title><rect x="11.8427%" y="853" width="1.0605%" height="15" fill="rgb(210,16,53)"/><text x="12.0927%" y="863.50"></text></g><g><title>sock_poll [linux] (23 samples, 1.02%)</title><rect x="11.8869%" y="837" width="1.0163%" height="15" fill="rgb(235,124,12)"/><text x="12.1369%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="12.9032%" y="837" width="0.1768%" height="15" fill="rgb(224,169,11)"/><text x="13.1532%" y="847.50"></text></g><g><title>ep_insert [linux] (38 samples, 1.68%)</title><rect x="11.5334%" y="869" width="1.6792%" height="15" fill="rgb(250,166,2)"/><text x="11.7834%" y="879.50"></text></g><g><title>kmem_cache_alloc [linux] (7 samples, 0.31%)</title><rect x="12.9032%" y="853" width="0.3093%" height="15" fill="rgb(242,216,29)"/><text x="13.1532%" y="863.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (72 samples, 3.18%)</title><rect x="10.2519%" y="885" width="3.1816%" height="15" fill="rgb(230,116,27)"/><text x="10.5019%" y="895.50">__x..</text></g><g><title>rb_insert_color [linux] (3 samples, 0.13%)</title><rect x="13.3009%" y="869" width="0.1326%" height="15" fill="rgb(228,99,48)"/><text x="13.5509%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="13.3009%" y="853" width="0.1326%" height="15" fill="rgb(253,11,6)"/><text x="13.5509%" y="863.50"></text></g><g><title>epoll_ctl [libc-2.31.so] (86 samples, 3.80%)</title><rect x="9.6774%" y="933" width="3.8003%" height="15" fill="rgb(247,143,39)"/><text x="9.9274%" y="943.50">epol..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (83 samples, 3.67%)</title><rect x="9.8100%" y="917" width="3.6677%" height="15" fill="rgb(236,97,10)"/><text x="10.0600%" y="927.50">entr..</text></g><g><title>do_syscall_64 [linux] (82 samples, 3.62%)</title><rect x="9.8542%" y="901" width="3.6235%" height="15" fill="rgb(233,208,19)"/><text x="10.1042%" y="911.50">do_s..</text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="14.6266%" y="885" width="0.3977%" height="15" fill="rgb(216,164,2)"/><text x="14.8766%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="15.2452%" y="837" width="0.3093%" height="15" fill="rgb(220,129,5)"/><text x="15.4952%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="15.6430%" y="821" width="0.3535%" height="15" fill="rgb(242,17,10)"/><text x="15.8930%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (13 samples, 0.57%)</title><rect x="15.9965%" y="805" width="0.5745%" height="15" fill="rgb(242,107,0)"/><text x="16.2465%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="16.5709%" y="789" width="0.3093%" height="15" fill="rgb(251,28,31)"/><text x="16.8209%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (16 samples, 0.71%)</title><rect x="16.8802%" y="773" width="0.7070%" height="15" fill="rgb(233,223,10)"/><text x="17.1302%" y="783.50"></text></g><g><title>sock_poll [linux] (25 samples, 1.10%)</title><rect x="16.8802%" y="789" width="1.1047%" height="15" fill="rgb(215,21,27)"/><text x="17.1302%" y="799.50"></text></g><g><title>tcp_poll [linux] (9 samples, 0.40%)</title><rect x="17.5873%" y="773" width="0.3977%" height="15" fill="rgb(232,23,21)"/><text x="17.8373%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="17.5873%" y="757" width="0.3977%" height="15" fill="rgb(244,5,23)"/><text x="17.8373%" y="767.50"></text></g><g><title>ep_item_poll.isra.0 [linux] (34 samples, 1.50%)</title><rect x="16.5709%" y="805" width="1.5024%" height="15" fill="rgb(226,81,46)"/><text x="16.8209%" y="815.50"></text></g><g><title>ep_send_events_proc [linux] (50 samples, 2.21%)</title><rect x="15.9965%" y="821" width="2.2095%" height="15" fill="rgb(247,70,30)"/><text x="16.2465%" y="831.50">e..</text></g><g><title>ep_scan_ready_list.constprop.0 [linux] (65 samples, 2.87%)</title><rect x="15.6430%" y="837" width="2.8723%" height="15" fill="rgb(212,68,19)"/><text x="15.8930%" y="847.50">ep..</text></g><g><title>mutex_lock [linux] (7 samples, 0.31%)</title><rect x="18.2059%" y="821" width="0.3093%" height="15" fill="rgb(240,187,13)"/><text x="18.4559%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="18.2059%" y="805" width="0.3093%" height="15" fill="rgb(223,113,26)"/><text x="18.4559%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="18.6920%" y="805" width="0.1768%" height="15" fill="rgb(206,192,2)"/><text x="18.9420%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="18.8688%" y="789" width="0.3977%" height="15" fill="rgb(241,108,4)"/><text x="19.1188%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="19.2665%" y="773" width="0.2651%" height="15" fill="rgb(247,173,49)"/><text x="19.5165%" y="783.50"></text></g><g><title>__sched_text_start [linux] (349 samples, 15.42%)</title><rect x="19.2665%" y="789" width="15.4220%" height="15" fill="rgb(224,114,35)"/><text x="19.5165%" y="799.50">__sched_text_start [linu..</text></g><g><title>finish_task_switch [linux] (343 samples, 15.16%)</title><rect x="19.5316%" y="773" width="15.1569%" height="15" fill="rgb(245,159,27)"/><text x="19.7816%" y="783.50">finish_task_switch [lin..</text></g><g><title>0xFFFFFFFFFFFFFF80 (343 samples, 15.16%)</title><rect x="19.5316%" y="757" width="15.1569%" height="15" fill="rgb(245,172,44)"/><text x="19.7816%" y="767.50">0xFFFFFFFFFFFFFF80</text></g><g><title>schedule_hrtimeout_range [linux] (365 samples, 16.13%)</title><rect x="18.6036%" y="837" width="16.1290%" height="15" fill="rgb(236,23,11)"/><text x="18.8536%" y="847.50">schedule_hrtimeout_range ..</text></g><g><title>schedule_hrtimeout_range_clock [linux] (363 samples, 16.04%)</title><rect x="18.6920%" y="821" width="16.0407%" height="15" fill="rgb(205,117,38)"/><text x="18.9420%" y="831.50">schedule_hrtimeout_range_..</text></g><g><title>schedule [linux] (359 samples, 15.86%)</title><rect x="18.8688%" y="805" width="15.8639%" height="15" fill="rgb(237,72,25)"/><text x="19.1188%" y="815.50">schedule [linux]</text></g><g><title>ep_poll [linux] (443 samples, 19.58%)</title><rect x="15.2452%" y="853" width="19.5758%" height="15" fill="rgb(244,70,9)"/><text x="15.4952%" y="863.50">ep_poll [linux]</text></g><g><title>__x64_sys_epoll_wait [linux] (451 samples, 19.93%)</title><rect x="15.0243%" y="885" width="19.9293%" height="15" fill="rgb(217,125,39)"/><text x="15.2743%" y="895.50">__x64_sys_epoll_wait [linux]</text></g><g><title>do_epoll_wait [linux] (450 samples, 19.89%)</title><rect x="15.0685%" y="869" width="19.8851%" height="15" fill="rgb(235,36,10)"/><text x="15.3185%" y="879.50">do_epoll_wait [linux]</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (462 samples, 20.42%)</title><rect x="14.5824%" y="917" width="20.4154%" height="15" fill="rgb(251,123,47)"/><text x="14.8324%" y="927.50">entry_SYSCALL_64_after_hwframe [..</text></g><g><title>do_syscall_64 [linux] (461 samples, 20.37%)</title><rect x="14.6266%" y="901" width="20.3712%" height="15" fill="rgb(221,13,13)"/><text x="14.8766%" y="911.50">do_syscall_64 [linux]</text></g><g><title>epoll_wait [libc-2.31.so] (488 samples, 21.56%)</title><rect x="13.4777%" y="933" width="21.5643%" height="15" fill="rgb(238,131,9)"/><text x="13.7277%" y="943.50">epoll_wait [libc-2.31.so]</text></g><g><title>0x00007F60AD337DF0 [libc-2.31.so] (3 samples, 0.13%)</title><rect x="35.9258%" y="917" width="0.1326%" height="15" fill="rgb(211,50,8)"/><text x="36.1758%" y="927.50"></text></g><g><title>__x64_sys_close [linux] (5 samples, 0.22%)</title><rect x="36.5886%" y="885" width="0.2209%" height="15" fill="rgb(245,182,24)"/><text x="36.8386%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="36.5886%" y="869" width="0.2209%" height="15" fill="rgb(242,14,37)"/><text x="36.8386%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="36.8095%" y="869" width="0.3093%" height="15" fill="rgb(246,228,12)"/><text x="37.0595%" y="879.50"></text></g><g><title>fput [linux] (6 samples, 0.27%)</title><rect x="37.1631%" y="821" width="0.2651%" height="15" fill="rgb(213,55,15)"/><text x="37.4131%" y="831.50"></text></g><g><title>fput_many [linux] (5 samples, 0.22%)</title><rect x="37.2072%" y="805" width="0.2209%" height="15" fill="rgb(209,9,3)"/><text x="37.4572%" y="815.50"></text></g><g><title>filp_close [linux] (7 samples, 0.31%)</title><rect x="37.1631%" y="837" width="0.3093%" height="15" fill="rgb(230,59,30)"/><text x="37.4131%" y="847.50"></text></g><g><title>__close_fd [linux] (10 samples, 0.44%)</title><rect x="37.1189%" y="853" width="0.4419%" height="15" fill="rgb(209,121,21)"/><text x="37.3689%" y="863.50"></text></g><g><title>__x64_sys_close [linux] (11 samples, 0.49%)</title><rect x="37.1189%" y="869" width="0.4861%" height="15" fill="rgb(220,109,13)"/><text x="37.3689%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="37.6491%" y="853" width="0.2209%" height="15" fill="rgb(232,18,1)"/><text x="37.8991%" y="863.50"></text></g><g><title>____fput [linux] (3 samples, 0.13%)</title><rect x="37.8701%" y="853" width="0.1326%" height="15" fill="rgb(215,41,42)"/><text x="38.1201%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="37.8701%" y="837" width="0.1326%" height="15" fill="rgb(224,123,36)"/><text x="38.1201%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="38.2678%" y="837" width="0.3093%" height="15" fill="rgb(240,125,3)"/><text x="38.5178%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="38.5771%" y="805" width="0.2651%" height="15" fill="rgb(205,98,50)"/><text x="38.8271%" y="815.50"></text></g><g><title>call_rcu [linux] (6 samples, 0.27%)</title><rect x="39.1074%" y="805" width="0.2651%" height="15" fill="rgb(205,185,37)"/><text x="39.3574%" y="815.50"></text></g><g><title>__call_rcu [linux] (6 samples, 0.27%)</title><rect x="39.1074%" y="789" width="0.2651%" height="15" fill="rgb(238,207,15)"/><text x="39.3574%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="39.1074%" y="773" width="0.2651%" height="15" fill="rgb(213,199,42)"/><text x="39.3574%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="39.4609%" y="741" width="0.3977%" height="15" fill="rgb(235,201,11)"/><text x="39.7109%" y="751.50"></text></g><g><title>dentry_free [linux] (15 samples, 0.66%)</title><rect x="39.4167%" y="773" width="0.6628%" height="15" fill="rgb(207,46,11)"/><text x="39.6667%" y="783.50"></text></g><g><title>kmem_cache_free [linux] (14 samples, 0.62%)</title><rect x="39.4609%" y="757" width="0.6186%" height="15" fill="rgb(241,35,35)"/><text x="39.7109%" y="767.50"></text></g><g><title>__slab_free [linux] (5 samples, 0.22%)</title><rect x="39.8586%" y="741" width="0.2209%" height="15" fill="rgb(243,32,47)"/><text x="40.1086%" y="751.50"></text></g><g><title>put_cpu_partial [linux] (3 samples, 0.13%)</title><rect x="39.9470%" y="725" width="0.1326%" height="15" fill="rgb(247,202,23)"/><text x="40.1970%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="39.9470%" y="709" width="0.1326%" height="15" fill="rgb(219,102,11)"/><text x="40.1970%" y="719.50"></text></g><g><title>_raw_spin_lock [linux] (4 samples, 0.18%)</title><rect x="40.2563%" y="741" width="0.1768%" height="15" fill="rgb(243,110,44)"/><text x="40.5063%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="40.2563%" y="725" width="0.1768%" height="15" fill="rgb(222,74,54)"/><text x="40.5063%" y="735.50"></text></g><g><title>__fsnotify_inode_delete [linux] (3 samples, 0.13%)</title><rect x="40.7424%" y="693" width="0.1326%" height="15" fill="rgb(216,99,12)"/><text x="40.9924%" y="703.50"></text></g><g><title>fsnotify_destroy_marks [linux] (3 samples, 0.13%)</title><rect x="40.7424%" y="677" width="0.1326%" height="15" fill="rgb(226,22,26)"/><text x="40.9924%" y="687.50"></text></g><g><title>__destroy_inode [linux] (4 samples, 0.18%)</title><rect x="40.7424%" y="709" width="0.1768%" height="15" fill="rgb(217,163,10)"/><text x="40.9924%" y="719.50"></text></g><g><title>call_rcu [linux] (4 samples, 0.18%)</title><rect x="40.9191%" y="709" width="0.1768%" height="15" fill="rgb(213,25,53)"/><text x="41.1691%" y="719.50"></text></g><g><title>__call_rcu [linux] (4 samples, 0.18%)</title><rect x="40.9191%" y="693" width="0.1768%" height="15" fill="rgb(252,105,26)"/><text x="41.1691%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="40.9191%" y="677" width="0.1768%" height="15" fill="rgb(220,39,43)"/><text x="41.1691%" y="687.50"></text></g><g><title>destroy_inode [linux] (10 samples, 0.44%)</title><rect x="40.6982%" y="725" width="0.4419%" height="15" fill="rgb(229,68,48)"/><text x="40.9482%" y="735.50"></text></g><g><title>truncate_inode_pages_final [linux] (4 samples, 0.18%)</title><rect x="41.1843%" y="725" width="0.1768%" height="15" fill="rgb(252,8,32)"/><text x="41.4343%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="41.1843%" y="709" width="0.1768%" height="15" fill="rgb(223,20,43)"/><text x="41.4343%" y="719.50"></text></g><g><title>evict [linux] (24 samples, 1.06%)</title><rect x="40.4331%" y="741" width="1.0605%" height="15" fill="rgb(229,81,49)"/><text x="40.6831%" y="751.50"></text></g><g><title>wake_up_bit [linux] (3 samples, 0.13%)</title><rect x="41.3610%" y="725" width="0.1326%" height="15" fill="rgb(236,28,36)"/><text x="41.6110%" y="735.50"></text></g><g><title>dentry_unlink_inode [linux] (33 samples, 1.46%)</title><rect x="40.0795%" y="773" width="1.4582%" height="15" fill="rgb(249,185,26)"/><text x="40.3295%" y="783.50"></text></g><g><title>iput [linux] (31 samples, 1.37%)</title><rect x="40.1679%" y="757" width="1.3699%" height="15" fill="rgb(249,174,33)"/><text x="40.4179%" y="767.50"></text></g><g><title>__dentry_kill [linux] (50 samples, 2.21%)</title><rect x="39.3725%" y="789" width="2.2095%" height="15" fill="rgb(233,201,37)"/><text x="39.6225%" y="799.50">_..</text></g><g><title>_cond_resched [linux] (6 samples, 0.27%)</title><rect x="41.5820%" y="789" width="0.2651%" height="15" fill="rgb(221,78,26)"/><text x="41.8320%" y="799.50"></text></g><g><title>preempt_schedule_common [linux] (5 samples, 0.22%)</title><rect x="41.6262%" y="773" width="0.2209%" height="15" fill="rgb(250,127,30)"/><text x="41.8762%" y="783.50"></text></g><g><title>__sched_text_start [linux] (5 samples, 0.22%)</title><rect x="41.6262%" y="757" width="0.2209%" height="15" fill="rgb(230,49,44)"/><text x="41.8762%" y="767.50"></text></g><g><title>finish_task_switch [linux] (5 samples, 0.22%)</title><rect x="41.6262%" y="741" width="0.2209%" height="15" fill="rgb(229,67,23)"/><text x="41.8762%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="41.6262%" y="725" width="0.2209%" height="15" fill="rgb(249,83,47)"/><text x="41.8762%" y="735.50"></text></g><g><title>dput [linux] (58 samples, 2.56%)</title><rect x="39.3725%" y="805" width="2.5630%" height="15" fill="rgb(215,43,3)"/><text x="39.6225%" y="815.50">dp..</text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="42.0239%" y="773" width="0.1768%" height="15" fill="rgb(238,154,13)"/><text x="42.2739%" y="783.50"></text></g><g><title>call_rcu [linux] (3 samples, 0.13%)</title><rect x="42.2006%" y="773" width="0.1326%" height="15" fill="rgb(219,56,2)"/><text x="42.4506%" y="783.50"></text></g><g><title>__call_rcu [linux] (3 samples, 0.13%)</title><rect x="42.2006%" y="757" width="0.1326%" height="15" fill="rgb(233,0,4)"/><text x="42.4506%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="42.2006%" y="741" width="0.1326%" height="15" fill="rgb(235,30,7)"/><text x="42.4506%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="42.4216%" y="741" width="0.2651%" height="15" fill="rgb(250,79,13)"/><text x="42.6716%" y="751.50"></text></g><g><title>kmem_cache_free [linux] (10 samples, 0.44%)</title><rect x="42.4216%" y="757" width="0.4419%" height="15" fill="rgb(211,146,34)"/><text x="42.6716%" y="767.50"></text></g><g><title>__slab_free [linux] (4 samples, 0.18%)</title><rect x="42.6867%" y="741" width="0.1768%" height="15" fill="rgb(228,22,38)"/><text x="42.9367%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="42.6867%" y="725" width="0.1768%" height="15" fill="rgb(235,168,5)"/><text x="42.9367%" y="735.50"></text></g><g><title>ep_remove [linux] (25 samples, 1.10%)</title><rect x="42.0239%" y="789" width="1.1047%" height="15" fill="rgb(221,155,16)"/><text x="42.2739%" y="799.50"></text></g><g><title>ep_unregister_pollwait.isra.0 [linux] (18 samples, 0.80%)</title><rect x="42.3332%" y="773" width="0.7954%" height="15" fill="rgb(215,215,53)"/><text x="42.5832%" y="783.50"></text></g><g><title>remove_wait_queue [linux] (6 samples, 0.27%)</title><rect x="42.8635%" y="757" width="0.2651%" height="15" fill="rgb(223,4,10)"/><text x="43.1135%" y="767.50"></text></g><g><title>__lock_text_start [linux] (6 samples, 0.27%)</title><rect x="42.8635%" y="741" width="0.2651%" height="15" fill="rgb(234,103,6)"/><text x="43.1135%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="42.8635%" y="725" width="0.2651%" height="15" fill="rgb(227,97,0)"/><text x="43.1135%" y="735.50"></text></g><g><title>rb_erase [linux] (8 samples, 0.35%)</title><rect x="43.2170%" y="789" width="0.3535%" height="15" fill="rgb(234,150,53)"/><text x="43.4670%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="43.2170%" y="773" width="0.3535%" height="15" fill="rgb(228,201,54)"/><text x="43.4670%" y="783.50"></text></g><g><title>eventpoll_release_file [linux] (38 samples, 1.68%)</title><rect x="41.9355%" y="805" width="1.6792%" height="15" fill="rgb(222,22,37)"/><text x="42.1855%" y="815.50"></text></g><g><title>lockref_put_return [linux] (7 samples, 0.31%)</title><rect x="43.6589%" y="805" width="0.3093%" height="15" fill="rgb(237,53,32)"/><text x="43.9089%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="43.6589%" y="789" width="0.3093%" height="15" fill="rgb(233,25,53)"/><text x="43.9089%" y="799.50"></text></g><g><title>mutex_lock [linux] (3 samples, 0.13%)</title><rect x="43.9682%" y="805" width="0.1326%" height="15" fill="rgb(210,40,34)"/><text x="44.2182%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="43.9682%" y="789" width="0.1326%" height="15" fill="rgb(241,220,44)"/><text x="44.2182%" y="799.50"></text></g><g><title>security_file_free [linux] (4 samples, 0.18%)</title><rect x="44.2333%" y="805" width="0.1768%" height="15" fill="rgb(235,28,35)"/><text x="44.4833%" y="815.50"></text></g><g><title>kmem_cache_free [linux] (3 samples, 0.13%)</title><rect x="44.2775%" y="789" width="0.1326%" height="15" fill="rgb(210,56,17)"/><text x="44.5275%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="44.4101%" y="773" width="0.1768%" height="15" fill="rgb(224,130,29)"/><text x="44.6601%" y="783.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="44.8078%" y="725" width="0.2651%" height="15" fill="rgb(235,212,8)"/><text x="45.0578%" y="735.50"></text></g><g><title>__sk_mem_reclaim [linux] (8 samples, 0.35%)</title><rect x="45.2055%" y="725" width="0.3535%" height="15" fill="rgb(223,33,50)"/><text x="45.4555%" y="735.50"></text></g><g><title>__sk_mem_reduce_allocated [linux] (7 samples, 0.31%)</title><rect x="45.2497%" y="709" width="0.3093%" height="15" fill="rgb(219,149,13)"/><text x="45.4997%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="45.2497%" y="693" width="0.3093%" height="15" fill="rgb(250,156,29)"/><text x="45.4997%" y="703.50"></text></g><g><title>sk_forced_mem_schedule [linux] (4 samples, 0.18%)</title><rect x="45.6032%" y="725" width="0.1768%" height="15" fill="rgb(216,193,19)"/><text x="45.8532%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="45.6032%" y="709" width="0.1768%" height="15" fill="rgb(216,135,14)"/><text x="45.8532%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="45.9125%" y="709" width="0.1326%" height="15" fill="rgb(241,47,5)"/><text x="46.1625%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="46.0451%" y="693" width="0.1768%" height="15" fill="rgb(233,42,35)"/><text x="46.2951%" y="703.50"></text></g><g><title>kmem_cache_alloc_node [linux] (4 samples, 0.18%)</title><rect x="46.3102%" y="693" width="0.1768%" height="15" fill="rgb(231,13,6)"/><text x="46.5602%" y="703.50"></text></g><g><title>__slab_alloc [linux] (3 samples, 0.13%)</title><rect x="46.3544%" y="677" width="0.1326%" height="15" fill="rgb(207,181,40)"/><text x="46.6044%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="46.3544%" y="661" width="0.1326%" height="15" fill="rgb(254,173,49)"/><text x="46.6044%" y="671.50"></text></g><g><title>__alloc_skb [linux] (13 samples, 0.57%)</title><rect x="46.0451%" y="709" width="0.5745%" height="15" fill="rgb(221,1,38)"/><text x="46.2951%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="46.7521%" y="661" width="0.2651%" height="15" fill="rgb(206,124,46)"/><text x="47.0021%" y="671.50"></text></g><g><title>__sk_dst_check [linux] (4 samples, 0.18%)</title><rect x="47.0614%" y="629" width="0.1768%" height="15" fill="rgb(249,21,11)"/><text x="47.3114%" y="639.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="47.0614%" y="613" width="0.1768%" height="15" fill="rgb(222,201,40)"/><text x="47.3114%" y="623.50"></text></g><g><title>__ip_local_out [linux] (3 samples, 0.13%)</title><rect x="47.2824%" y="613" width="0.1326%" height="15" fill="rgb(235,61,29)"/><text x="47.5324%" y="623.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="47.4149%" y="597" width="0.1326%" height="15" fill="rgb(219,207,3)"/><text x="47.6649%" y="607.50"></text></g><g><title>__cgroup_bpf_run_filter_skb [linux] (3 samples, 0.13%)</title><rect x="47.6359%" y="581" width="0.1326%" height="15" fill="rgb(222,56,46)"/><text x="47.8859%" y="591.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="47.6359%" y="565" width="0.1326%" height="15" fill="rgb(239,76,54)"/><text x="47.8859%" y="575.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="47.8126%" y="549" width="0.1326%" height="15" fill="rgb(231,124,27)"/><text x="48.0626%" y="559.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="48.0778%" y="485" width="0.1326%" height="15" fill="rgb(249,195,6)"/><text x="48.3278%" y="495.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="48.2545%" y="469" width="0.1326%" height="15" fill="rgb(237,174,47)"/><text x="48.5045%" y="479.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="48.7848%" y="325" width="0.1326%" height="15" fill="rgb(206,201,31)"/><text x="49.0348%" y="335.50"></text></g><g><title>kfree_skb [linux] (5 samples, 0.22%)</title><rect x="49.0941%" y="293" width="0.2209%" height="15" fill="rgb(231,57,52)"/><text x="49.3441%" y="303.50"></text></g><g><title>raw_rcv [linux] (11 samples, 0.49%)</title><rect x="48.9616%" y="325" width="0.4861%" height="15" fill="rgb(248,177,22)"/><text x="49.2116%" y="335.50"></text></g><g><title>raw_rcv_skb [linux] (11 samples, 0.49%)</title><rect x="48.9616%" y="309" width="0.4861%" height="15" fill="rgb(215,211,37)"/><text x="49.2116%" y="319.50"></text></g><g><title>sock_queue_rcv_skb [linux] (3 samples, 0.13%)</title><rect x="49.3151%" y="293" width="0.1326%" height="15" fill="rgb(241,128,51)"/><text x="49.5651%" y="303.50"></text></g><g><title>sk_filter_trim_cap [linux] (3 samples, 0.13%)</title><rect x="49.3151%" y="277" width="0.1326%" height="15" fill="rgb(227,165,31)"/><text x="49.5651%" y="287.50"></text></g><g><title>__skb_clone [linux] (3 samples, 0.13%)</title><rect x="49.4918%" y="309" width="0.1326%" height="15" fill="rgb(228,167,24)"/><text x="49.7418%" y="319.50"></text></g><g><title>__copy_skb_header [linux] (3 samples, 0.13%)</title><rect x="49.4918%" y="293" width="0.1326%" height="15" fill="rgb(228,143,12)"/><text x="49.7418%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="49.4918%" y="277" width="0.1326%" height="15" fill="rgb(249,149,8)"/><text x="49.7418%" y="287.50"></text></g><g><title>raw_local_deliver [linux] (21 samples, 0.93%)</title><rect x="48.7848%" y="341" width="0.9280%" height="15" fill="rgb(243,35,44)"/><text x="49.0348%" y="351.50"></text></g><g><title>skb_clone [linux] (6 samples, 0.27%)</title><rect x="49.4476%" y="325" width="0.2651%" height="15" fill="rgb(246,89,9)"/><text x="49.6976%" y="335.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="49.7128%" y="325" width="0.1768%" height="15" fill="rgb(233,213,13)"/><text x="49.9628%" y="335.50"></text></g><g><title>__lock_text_start [linux] (5 samples, 0.22%)</title><rect x="50.2872%" y="229" width="0.2209%" height="15" fill="rgb(233,141,41)"/><text x="50.5372%" y="239.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="50.2872%" y="213" width="0.2209%" height="15" fill="rgb(239,167,4)"/><text x="50.5372%" y="223.50"></text></g><g><title>__tcp_ack_snd_check [linux] (9 samples, 0.40%)</title><rect x="50.1989%" y="293" width="0.3977%" height="15" fill="rgb(209,217,16)"/><text x="50.4489%" y="303.50"></text></g><g><title>tcp_send_delayed_ack [linux] (8 samples, 0.35%)</title><rect x="50.2430%" y="277" width="0.3535%" height="15" fill="rgb(219,88,35)"/><text x="50.4930%" y="287.50"></text></g><g><title>sk_reset_timer [linux] (8 samples, 0.35%)</title><rect x="50.2430%" y="261" width="0.3535%" height="15" fill="rgb(220,193,23)"/><text x="50.4930%" y="271.50"></text></g><g><title>mod_timer [linux] (8 samples, 0.35%)</title><rect x="50.2430%" y="245" width="0.3535%" height="15" fill="rgb(230,90,52)"/><text x="50.4930%" y="255.50"></text></g><g><title>tcp_ack [linux] (3 samples, 0.13%)</title><rect x="50.6849%" y="293" width="0.1326%" height="15" fill="rgb(252,106,19)"/><text x="50.9349%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="50.6849%" y="277" width="0.1326%" height="15" fill="rgb(206,74,20)"/><text x="50.9349%" y="287.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="50.8175%" y="277" width="0.1326%" height="15" fill="rgb(230,138,44)"/><text x="51.0675%" y="287.50"></text></g><g><title>tcp_data_ready [linux] (5 samples, 0.22%)</title><rect x="51.1268%" y="277" width="0.2209%" height="15" fill="rgb(235,182,43)"/><text x="51.3768%" y="287.50"></text></g><g><title>sock_def_readable [linux] (5 samples, 0.22%)</title><rect x="51.1268%" y="261" width="0.2209%" height="15" fill="rgb(242,16,51)"/><text x="51.3768%" y="271.50"></text></g><g><title>__wake_up_sync_key [linux] (5 samples, 0.22%)</title><rect x="51.1268%" y="245" width="0.2209%" height="15" fill="rgb(248,9,4)"/><text x="51.3768%" y="255.50"></text></g><g><title>__wake_up_common_lock [linux] (5 samples, 0.22%)</title><rect x="51.1268%" y="229" width="0.2209%" height="15" fill="rgb(210,31,22)"/><text x="51.3768%" y="239.50"></text></g><g><title>__lock_text_start [linux] (5 samples, 0.22%)</title><rect x="51.1268%" y="213" width="0.2209%" height="15" fill="rgb(239,54,39)"/><text x="51.3768%" y="223.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="51.1268%" y="197" width="0.2209%" height="15" fill="rgb(230,99,41)"/><text x="51.3768%" y="207.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="51.3478%" y="261" width="0.1326%" height="15" fill="rgb(253,106,12)"/><text x="51.5978%" y="271.50"></text></g><g><title>sock_def_wakeup [linux] (9 samples, 0.40%)</title><rect x="51.5687%" y="261" width="0.3977%" height="15" fill="rgb(213,46,41)"/><text x="51.8187%" y="271.50"></text></g><g><title>__wake_up [linux] (9 samples, 0.40%)</title><rect x="51.5687%" y="245" width="0.3977%" height="15" fill="rgb(215,133,35)"/><text x="51.8187%" y="255.50"></text></g><g><title>__wake_up_common_lock [linux] (8 samples, 0.35%)</title><rect x="51.6129%" y="229" width="0.3535%" height="15" fill="rgb(213,28,5)"/><text x="51.8629%" y="239.50"></text></g><g><title>__lock_text_start [linux] (8 samples, 0.35%)</title><rect x="51.6129%" y="213" width="0.3535%" height="15" fill="rgb(215,77,49)"/><text x="51.8629%" y="223.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="51.6129%" y="197" width="0.3535%" height="15" fill="rgb(248,100,22)"/><text x="51.8629%" y="207.50"></text></g><g><title>tcp_fin [linux] (15 samples, 0.66%)</title><rect x="51.3478%" y="277" width="0.6628%" height="15" fill="rgb(208,67,9)"/><text x="51.5978%" y="287.50"></text></g><g><title>tcp_queue_rcv [linux] (5 samples, 0.22%)</title><rect x="52.0106%" y="277" width="0.2209%" height="15" fill="rgb(219,133,21)"/><text x="52.2606%" y="287.50"></text></g><g><title>tcp_try_coalesce [linux] (5 samples, 0.22%)</title><rect x="52.0106%" y="261" width="0.2209%" height="15" fill="rgb(246,46,29)"/><text x="52.2606%" y="271.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="52.0106%" y="245" width="0.2209%" height="15" fill="rgb(246,185,52)"/><text x="52.2606%" y="255.50"></text></g><g><title>tcp_data_queue [linux] (33 samples, 1.46%)</title><rect x="50.8175%" y="293" width="1.4582%" height="15" fill="rgb(252,136,11)"/><text x="51.0675%" y="303.50"></text></g><g><title>tcp_v4_do_rcv [linux] (57 samples, 2.52%)</title><rect x="50.0221%" y="325" width="2.5188%" height="15" fill="rgb(219,138,53)"/><text x="50.2721%" y="335.50">tc..</text></g><g><title>tcp_rcv_established [linux] (55 samples, 2.43%)</title><rect x="50.1105%" y="309" width="2.4304%" height="15" fill="rgb(211,51,23)"/><text x="50.3605%" y="319.50">tc..</text></g><g><title>ip_local_deliver [linux] (89 samples, 3.93%)</title><rect x="48.6522%" y="389" width="3.9328%" height="15" fill="rgb(247,221,28)"/><text x="48.9022%" y="399.50">ip_l..</text></g><g><title>ip_local_deliver_finish [linux] (88 samples, 3.89%)</title><rect x="48.6964%" y="373" width="3.8886%" height="15" fill="rgb(251,222,45)"/><text x="48.9464%" y="383.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu [linux] (88 samples, 3.89%)</title><rect x="48.6964%" y="357" width="3.8886%" height="15" fill="rgb(217,162,53)"/><text x="48.9464%" y="367.50">ip_p..</text></g><g><title>tcp_v4_rcv [linux] (65 samples, 2.87%)</title><rect x="49.7128%" y="341" width="2.8723%" height="15" fill="rgb(229,93,14)"/><text x="49.9628%" y="351.50">tc..</text></g><g><title>__local_bh_enable_ip [linux] (106 samples, 4.68%)</title><rect x="47.9452%" y="549" width="4.6840%" height="15" fill="rgb(209,67,49)"/><text x="48.1952%" y="559.50">__loc..</text></g><g><title>do_softirq.part.0 [linux] (104 samples, 4.60%)</title><rect x="48.0336%" y="533" width="4.5957%" height="15" fill="rgb(213,87,29)"/><text x="48.2836%" y="543.50">do_so..</text></g><g><title>do_softirq_own_stack [linux] (103 samples, 4.55%)</title><rect x="48.0778%" y="517" width="4.5515%" height="15" fill="rgb(205,151,52)"/><text x="48.3278%" y="527.50">do_so..</text></g><g><title>__softirqentry_text_start [linux] (103 samples, 4.55%)</title><rect x="48.0778%" y="501" width="4.5515%" height="15" fill="rgb(253,215,39)"/><text x="48.3278%" y="511.50">__sof..</text></g><g><title>net_rx_action [linux] (99 samples, 4.37%)</title><rect x="48.2545%" y="485" width="4.3747%" height="15" fill="rgb(221,220,41)"/><text x="48.5045%" y="495.50">net_r..</text></g><g><title>process_backlog [linux] (96 samples, 4.24%)</title><rect x="48.3871%" y="469" width="4.2422%" height="15" fill="rgb(218,133,21)"/><text x="48.6371%" y="479.50">proce..</text></g><g><title>__netif_receive_skb [linux] (95 samples, 4.20%)</title><rect x="48.4313%" y="453" width="4.1980%" height="15" fill="rgb(221,193,43)"/><text x="48.6813%" y="463.50">__net..</text></g><g><title>__netif_receive_skb_one_core [linux] (94 samples, 4.15%)</title><rect x="48.4755%" y="437" width="4.1538%" height="15" fill="rgb(240,128,52)"/><text x="48.7255%" y="447.50">__net..</text></g><g><title>ip_rcv [linux] (92 samples, 4.07%)</title><rect x="48.5639%" y="421" width="4.0654%" height="15" fill="rgb(253,114,12)"/><text x="48.8139%" y="431.50">ip_r..</text></g><g><title>ip_rcv_finish [linux] (90 samples, 3.98%)</title><rect x="48.6522%" y="405" width="3.9770%" height="15" fill="rgb(215,223,47)"/><text x="48.9022%" y="415.50">ip_r..</text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="52.6293%" y="517" width="0.1326%" height="15" fill="rgb(248,225,23)"/><text x="52.8793%" y="527.50"></text></g><g><title>loopback_xmit [linux] (6 samples, 0.27%)</title><rect x="52.8060%" y="501" width="0.2651%" height="15" fill="rgb(250,108,0)"/><text x="53.0560%" y="511.50"></text></g><g><title>netif_rx [linux] (5 samples, 0.22%)</title><rect x="52.8502%" y="485" width="0.2209%" height="15" fill="rgb(228,208,7)"/><text x="53.1002%" y="495.50"></text></g><g><title>netif_rx_internal [linux] (5 samples, 0.22%)</title><rect x="52.8502%" y="469" width="0.2209%" height="15" fill="rgb(244,45,10)"/><text x="53.1002%" y="479.50"></text></g><g><title>enqueue_to_backlog [linux] (4 samples, 0.18%)</title><rect x="52.8944%" y="453" width="0.1768%" height="15" fill="rgb(207,125,25)"/><text x="53.1444%" y="463.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="52.8944%" y="437" width="0.1768%" height="15" fill="rgb(210,195,18)"/><text x="53.1444%" y="447.50"></text></g><g><title>dev_hard_start_xmit [linux] (11 samples, 0.49%)</title><rect x="52.7618%" y="517" width="0.4861%" height="15" fill="rgb(249,80,12)"/><text x="53.0118%" y="527.50"></text></g><g><title>ip_finish_output2 [linux] (125 samples, 5.52%)</title><rect x="47.8126%" y="565" width="5.5236%" height="15" fill="rgb(221,65,9)"/><text x="48.0626%" y="575.50">ip_fini..</text></g><g><title>dev_queue_xmit [linux] (16 samples, 0.71%)</title><rect x="52.6293%" y="549" width="0.7070%" height="15" fill="rgb(235,49,36)"/><text x="52.8793%" y="559.50"></text></g><g><title>__dev_queue_xmit [linux] (16 samples, 0.71%)</title><rect x="52.6293%" y="533" width="0.7070%" height="15" fill="rgb(225,32,20)"/><text x="52.8793%" y="543.50"></text></g><g><title>ip_queue_xmit [linux] (143 samples, 6.32%)</title><rect x="47.0614%" y="661" width="6.3190%" height="15" fill="rgb(215,141,46)"/><text x="47.3114%" y="671.50">ip_queue..</text></g><g><title>__ip_queue_xmit [linux] (143 samples, 6.32%)</title><rect x="47.0614%" y="645" width="6.3190%" height="15" fill="rgb(250,160,47)"/><text x="47.3114%" y="655.50">__ip_que..</text></g><g><title>ip_local_out [linux] (139 samples, 6.14%)</title><rect x="47.2382%" y="629" width="6.1423%" height="15" fill="rgb(216,222,40)"/><text x="47.4882%" y="639.50">ip_local..</text></g><g><title>ip_output [linux] (135 samples, 5.97%)</title><rect x="47.4149%" y="613" width="5.9655%" height="15" fill="rgb(234,217,39)"/><text x="47.6649%" y="623.50">ip_outpu..</text></g><g><title>ip_finish_output [linux] (131 samples, 5.79%)</title><rect x="47.5917%" y="597" width="5.7888%" height="15" fill="rgb(207,178,40)"/><text x="47.8417%" y="607.50">ip_fini..</text></g><g><title>__ip_finish_output [linux] (127 samples, 5.61%)</title><rect x="47.7684%" y="581" width="5.6120%" height="15" fill="rgb(221,136,13)"/><text x="48.0184%" y="591.50">__ip_fi..</text></g><g><title>skb_clone [linux] (3 samples, 0.13%)</title><rect x="53.3805%" y="661" width="0.1326%" height="15" fill="rgb(249,199,10)"/><text x="53.6305%" y="671.50"></text></g><g><title>__tcp_transmit_skb [linux] (154 samples, 6.81%)</title><rect x="46.7521%" y="677" width="6.8051%" height="15" fill="rgb(249,222,13)"/><text x="47.0021%" y="687.50">__tcp_tra..</text></g><g><title>ktime_get [linux] (3 samples, 0.13%)</title><rect x="53.6014%" y="677" width="0.1326%" height="15" fill="rgb(244,185,38)"/><text x="53.8514%" y="687.50"></text></g><g><title>kvm_clock_get_cycles [linux] (3 samples, 0.13%)</title><rect x="53.6014%" y="661" width="0.1326%" height="15" fill="rgb(236,202,9)"/><text x="53.8514%" y="671.50"></text></g><g><title>pvclock_clocksource_read [linux] (3 samples, 0.13%)</title><rect x="53.6014%" y="645" width="0.1326%" height="15" fill="rgb(250,229,37)"/><text x="53.8514%" y="655.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="53.6014%" y="629" width="0.1326%" height="15" fill="rgb(206,174,23)"/><text x="53.8514%" y="639.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="53.7340%" y="661" width="0.1326%" height="15" fill="rgb(211,33,43)"/><text x="53.9840%" y="671.50"></text></g><g><title>tcp_event_new_data_sent [linux] (7 samples, 0.31%)</title><rect x="53.7340%" y="677" width="0.3093%" height="15" fill="rgb(245,58,50)"/><text x="53.9840%" y="687.50"></text></g><g><title>tcp_rearm_rto [linux] (3 samples, 0.13%)</title><rect x="53.9107%" y="661" width="0.1326%" height="15" fill="rgb(244,68,36)"/><text x="54.1607%" y="671.50"></text></g><g><title>sk_reset_timer [linux] (3 samples, 0.13%)</title><rect x="53.9107%" y="645" width="0.1326%" height="15" fill="rgb(232,229,15)"/><text x="54.1607%" y="655.50"></text></g><g><title>__tcp_push_pending_frames [linux] (168 samples, 7.42%)</title><rect x="46.7079%" y="709" width="7.4238%" height="15" fill="rgb(254,30,23)"/><text x="46.9579%" y="719.50">__tcp_push..</text></g><g><title>tcp_write_xmit [linux] (168 samples, 7.42%)</title><rect x="46.7079%" y="693" width="7.4238%" height="15" fill="rgb(235,160,14)"/><text x="46.9579%" y="703.50">tcp_write_..</text></g><g><title>tcp_send_fin [linux] (190 samples, 8.40%)</title><rect x="45.9125%" y="725" width="8.3959%" height="15" fill="rgb(212,155,44)"/><text x="46.1625%" y="735.50">tcp_send_fin..</text></g><g><title>tcp_current_mss [linux] (4 samples, 0.18%)</title><rect x="54.1317%" y="709" width="0.1768%" height="15" fill="rgb(226,2,50)"/><text x="54.3817%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="54.3084%" y="709" width="0.1326%" height="15" fill="rgb(234,177,6)"/><text x="54.5584%" y="719.50"></text></g><g><title>__tcp_close [linux] (219 samples, 9.68%)</title><rect x="44.8078%" y="741" width="9.6774%" height="15" fill="rgb(217,24,9)"/><text x="45.0578%" y="751.50">__tcp_close [l..</text></g><g><title>tcp_set_state [linux] (4 samples, 0.18%)</title><rect x="54.3084%" y="725" width="0.1768%" height="15" fill="rgb(220,13,46)"/><text x="54.5584%" y="735.50"></text></g><g><title>_raw_spin_lock_bh [linux] (4 samples, 0.18%)</title><rect x="54.5736%" y="741" width="0.1768%" height="15" fill="rgb(239,221,27)"/><text x="54.8236%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="54.5736%" y="725" width="0.1768%" height="15" fill="rgb(222,198,25)"/><text x="54.8236%" y="735.50"></text></g><g><title>inet_release [linux] (231 samples, 10.21%)</title><rect x="44.7194%" y="773" width="10.2077%" height="15" fill="rgb(211,99,13)"/><text x="44.9694%" y="783.50">inet_release [l..</text></g><g><title>tcp_close [linux] (229 samples, 10.12%)</title><rect x="44.8078%" y="757" width="10.1193%" height="15" fill="rgb(232,111,31)"/><text x="45.0578%" y="767.50">tcp_close [linu..</text></g><g><title>__sock_release [linux] (241 samples, 10.65%)</title><rect x="44.4101%" y="789" width="10.6496%" height="15" fill="rgb(245,82,37)"/><text x="44.6601%" y="799.50">__sock_release [..</text></g><g><title>__fput [linux] (379 samples, 16.75%)</title><rect x="38.5771%" y="821" width="16.7477%" height="15" fill="rgb(227,149,46)"/><text x="38.8271%" y="831.50">__fput [linux]</text></g><g><title>sock_close [linux] (247 samples, 10.91%)</title><rect x="44.4101%" y="805" width="10.9147%" height="15" fill="rgb(218,36,50)"/><text x="44.6601%" y="815.50">sock_close [linu..</text></g><g><title>up_write [linux] (3 samples, 0.13%)</title><rect x="55.1922%" y="789" width="0.1326%" height="15" fill="rgb(226,80,48)"/><text x="55.4422%" y="799.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="55.1922%" y="773" width="0.1326%" height="15" fill="rgb(238,224,15)"/><text x="55.4422%" y="783.50"></text></g><g><title>____fput [linux] (380 samples, 16.79%)</title><rect x="38.5771%" y="837" width="16.7919%" height="15" fill="rgb(241,136,10)"/><text x="38.8271%" y="847.50">____fput [linux]</text></g><g><title>exit_to_usermode_loop [linux] (403 samples, 17.81%)</title><rect x="37.6491%" y="869" width="17.8082%" height="15" fill="rgb(208,32,45)"/><text x="37.8991%" y="879.50">exit_to_usermode_loop [linux]</text></g><g><title>task_work_run [linux] (389 samples, 17.19%)</title><rect x="38.2678%" y="853" width="17.1896%" height="15" fill="rgb(207,135,9)"/><text x="38.5178%" y="863.50">task_work_run [linux]</text></g><g><title>__close [libpthread-2.31.so] (436 samples, 19.27%)</title><rect x="36.2351%" y="917" width="19.2665%" height="15" fill="rgb(206,86,44)"/><text x="36.4851%" y="927.50">__close [libpthread-2.31.so]</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (428 samples, 18.91%)</title><rect x="36.5886%" y="901" width="18.9129%" height="15" fill="rgb(245,177,15)"/><text x="36.8386%" y="911.50">entry_SYSCALL_64_after_hwframe..</text></g><g><title>do_syscall_64 [linux] (423 samples, 18.69%)</title><rect x="36.8095%" y="885" width="18.6920%" height="15" fill="rgb(206,64,50)"/><text x="37.0595%" y="895.50">do_syscall_64 [linux]</text></g><g><title>0x00007F60AD21923E [libc-2.31.so] (3 samples, 0.13%)</title><rect x="56.7388%" y="901" width="0.1326%" height="15" fill="rgb(234,36,40)"/><text x="56.9888%" y="911.50"></text></g><g><title>0x00007F60AD2467BE [libc-2.31.so] (3 samples, 0.13%)</title><rect x="57.1365%" y="901" width="0.1326%" height="15" fill="rgb(213,64,8)"/><text x="57.3865%" y="911.50"></text></g><g><title>0x00007F60AD247DB5 [libc-2.31.so] (4 samples, 0.18%)</title><rect x="57.4017%" y="901" width="0.1768%" height="15" fill="rgb(210,75,36)"/><text x="57.6517%" y="911.50"></text></g><g><title>0x00007F60AD338A30 [libc-2.31.so] (4 samples, 0.18%)</title><rect x="57.4017%" y="885" width="0.1768%" height="15" fill="rgb(229,88,21)"/><text x="57.6517%" y="895.50"></text></g><g><title>0x00007F60AD247DD5 [libc-2.31.so] (5 samples, 0.22%)</title><rect x="57.5784%" y="901" width="0.2209%" height="15" fill="rgb(252,204,47)"/><text x="57.8284%" y="911.50"></text></g><g><title>_IO_setb [libc-2.31.so] (5 samples, 0.22%)</title><rect x="57.5784%" y="885" width="0.2209%" height="15" fill="rgb(208,77,27)"/><text x="57.8284%" y="895.50"></text></g><g><title>__isoc99_sscanf [libc-2.31.so] (54 samples, 2.39%)</title><rect x="55.5015%" y="917" width="2.3862%" height="15" fill="rgb(221,76,26)"/><text x="55.7515%" y="927.50">__..</text></g><g><title>0x00007F60AD22A971 [libc-2.31.so] (4 samples, 0.18%)</title><rect x="59.8321%" y="869" width="0.1768%" height="15" fill="rgb(225,139,18)"/><text x="60.0821%" y="879.50"></text></g><g><title>_IO_default_xsputn [libc-2.31.so] (4 samples, 0.18%)</title><rect x="59.8321%" y="853" width="0.1768%" height="15" fill="rgb(230,137,11)"/><text x="60.0821%" y="863.50"></text></g><g><title>0x00007F60AD22B0FB [libc-2.31.so] (3 samples, 0.13%)</title><rect x="60.3182%" y="869" width="0.1326%" height="15" fill="rgb(212,28,1)"/><text x="60.5682%" y="879.50"></text></g><g><title>_IO_default_xsputn [libc-2.31.so] (3 samples, 0.13%)</title><rect x="60.3182%" y="853" width="0.1326%" height="15" fill="rgb(248,164,17)"/><text x="60.5682%" y="863.50"></text></g><g><title>0x00007F60AD22B574 [libc-2.31.so] (3 samples, 0.13%)</title><rect x="60.4949%" y="869" width="0.1326%" height="15" fill="rgb(222,171,42)"/><text x="60.7449%" y="879.50"></text></g><g><title>0x00007F60AD22B7AC [libc-2.31.so] (3 samples, 0.13%)</title><rect x="60.6717%" y="869" width="0.1326%" height="15" fill="rgb(243,84,45)"/><text x="60.9217%" y="879.50"></text></g><g><title>_IO_default_xsputn [libc-2.31.so] (3 samples, 0.13%)</title><rect x="60.6717%" y="853" width="0.1326%" height="15" fill="rgb(252,49,23)"/><text x="60.9217%" y="863.50"></text></g><g><title>__snprintf [libc-2.31.so] (39 samples, 1.72%)</title><rect x="59.2576%" y="901" width="1.7234%" height="15" fill="rgb(215,19,7)"/><text x="59.5076%" y="911.50"></text></g><g><title>0x00007F60AD23FF99 [libc-2.31.so] (31 samples, 1.37%)</title><rect x="59.6111%" y="885" width="1.3699%" height="15" fill="rgb(238,81,41)"/><text x="59.8611%" y="895.50"></text></g><g><title>default_free [http_server_c] (5 samples, 0.22%)</title><rect x="61.0252%" y="901" width="0.2209%" height="15" fill="rgb(210,199,37)"/><text x="61.2752%" y="911.50"></text></g><g><title>__x64_sys_sendto [linux] (4 samples, 0.18%)</title><rect x="61.4229%" y="869" width="0.1768%" height="15" fill="rgb(244,192,49)"/><text x="61.6729%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="61.4229%" y="853" width="0.1768%" height="15" fill="rgb(226,211,11)"/><text x="61.6729%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.44%)</title><rect x="61.6438%" y="853" width="0.4419%" height="15" fill="rgb(236,162,54)"/><text x="61.8938%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="62.1741%" y="821" width="0.1326%" height="15" fill="rgb(220,229,9)"/><text x="62.4241%" y="831.50"></text></g><g><title>_cond_resched [linux] (10 samples, 0.44%)</title><rect x="62.5276%" y="741" width="0.4419%" height="15" fill="rgb(250,87,22)"/><text x="62.7776%" y="751.50"></text></g><g><title>preempt_schedule_common [linux] (10 samples, 0.44%)</title><rect x="62.5276%" y="725" width="0.4419%" height="15" fill="rgb(239,43,17)"/><text x="62.7776%" y="735.50"></text></g><g><title>__sched_text_start [linux] (10 samples, 0.44%)</title><rect x="62.5276%" y="709" width="0.4419%" height="15" fill="rgb(231,177,25)"/><text x="62.7776%" y="719.50"></text></g><g><title>finish_task_switch [linux] (10 samples, 0.44%)</title><rect x="62.5276%" y="693" width="0.4419%" height="15" fill="rgb(219,179,1)"/><text x="62.7776%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.44%)</title><rect x="62.5276%" y="677" width="0.4419%" height="15" fill="rgb(238,219,53)"/><text x="62.7776%" y="687.50"></text></g><g><title>skb_release_data [linux] (3 samples, 0.13%)</title><rect x="63.3672%" y="677" width="0.1326%" height="15" fill="rgb(232,167,36)"/><text x="63.6172%" y="687.50"></text></g><g><title>__kfree_skb [linux] (6 samples, 0.27%)</title><rect x="63.2788%" y="709" width="0.2651%" height="15" fill="rgb(244,19,51)"/><text x="63.5288%" y="719.50"></text></g><g><title>skb_release_all [linux] (4 samples, 0.18%)</title><rect x="63.3672%" y="693" width="0.1768%" height="15" fill="rgb(224,6,22)"/><text x="63.6172%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="63.5440%" y="693" width="0.3093%" height="15" fill="rgb(224,145,5)"/><text x="63.7940%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="63.9417%" y="677" width="0.1768%" height="15" fill="rgb(234,130,49)"/><text x="64.1917%" y="687.50"></text></g><g><title>__kfree_skb [linux] (4 samples, 0.18%)</title><rect x="64.1184%" y="677" width="0.1768%" height="15" fill="rgb(254,6,2)"/><text x="64.3684%" y="687.50"></text></g><g><title>skb_release_all [linux] (3 samples, 0.13%)</title><rect x="64.1626%" y="661" width="0.1326%" height="15" fill="rgb(208,96,46)"/><text x="64.4126%" y="671.50"></text></g><g><title>tcp_clean_rtx_queue [linux] (10 samples, 0.44%)</title><rect x="63.9417%" y="693" width="0.4419%" height="15" fill="rgb(239,3,39)"/><text x="64.1917%" y="703.50"></text></g><g><title>tcp_ack [linux] (23 samples, 1.02%)</title><rect x="63.5440%" y="709" width="1.0163%" height="15" fill="rgb(233,210,1)"/><text x="63.7940%" y="719.50"></text></g><g><title>__release_sock [linux] (49 samples, 2.17%)</title><rect x="62.4834%" y="757" width="2.1653%" height="15" fill="rgb(244,137,37)"/><text x="62.7334%" y="767.50">_..</text></g><g><title>tcp_v4_do_rcv [linux] (36 samples, 1.59%)</title><rect x="63.0579%" y="741" width="1.5908%" height="15" fill="rgb(240,136,2)"/><text x="63.3079%" y="751.50"></text></g><g><title>tcp_rcv_established [linux] (32 samples, 1.41%)</title><rect x="63.2346%" y="725" width="1.4141%" height="15" fill="rgb(239,18,37)"/><text x="63.4846%" y="735.50"></text></g><g><title>release_sock [linux] (51 samples, 2.25%)</title><rect x="62.4392%" y="773" width="2.2536%" height="15" fill="rgb(218,185,22)"/><text x="62.6892%" y="783.50">r..</text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="64.8255%" y="757" width="0.2651%" height="15" fill="rgb(225,218,4)"/><text x="65.0755%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string [linux] (6 samples, 0.27%)</title><rect x="65.2232%" y="741" width="0.2651%" height="15" fill="rgb(230,182,32)"/><text x="65.4732%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="65.2232%" y="725" width="0.2651%" height="15" fill="rgb(242,56,43)"/><text x="65.4732%" y="735.50"></text></g><g><title>_copy_from_iter_full [linux] (8 samples, 0.35%)</title><rect x="65.2232%" y="757" width="0.3535%" height="15" fill="rgb(233,99,24)"/><text x="65.4732%" y="767.50"></text></g><g><title>sk_page_frag_refill [linux] (6 samples, 0.27%)</title><rect x="65.5767%" y="757" width="0.2651%" height="15" fill="rgb(234,209,42)"/><text x="65.8267%" y="767.50"></text></g><g><title>skb_page_frag_refill [linux] (5 samples, 0.22%)</title><rect x="65.6209%" y="741" width="0.2209%" height="15" fill="rgb(227,7,12)"/><text x="65.8709%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="65.6209%" y="725" width="0.2209%" height="15" fill="rgb(245,203,43)"/><text x="65.8709%" y="735.50"></text></g><g><title>__kmalloc_node_track_caller [linux] (6 samples, 0.27%)</title><rect x="65.9744%" y="709" width="0.2651%" height="15" fill="rgb(238,205,33)"/><text x="66.2244%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="65.9744%" y="693" width="0.2651%" height="15" fill="rgb(231,56,7)"/><text x="66.2244%" y="703.50"></text></g><g><title>__kmalloc_reserve.isra.0 [linux] (9 samples, 0.40%)</title><rect x="65.9744%" y="725" width="0.3977%" height="15" fill="rgb(244,186,29)"/><text x="66.2244%" y="735.50"></text></g><g><title>kmem_cache_alloc_node [linux] (4 samples, 0.18%)</title><rect x="66.3721%" y="725" width="0.1768%" height="15" fill="rgb(234,111,31)"/><text x="66.6221%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="66.3721%" y="709" width="0.1768%" height="15" fill="rgb(241,149,10)"/><text x="66.6221%" y="719.50"></text></g><g><title>ksize [linux] (3 samples, 0.13%)</title><rect x="66.5488%" y="725" width="0.1326%" height="15" fill="rgb(249,206,44)"/><text x="66.7988%" y="735.50"></text></g><g><title>__ksize [linux] (3 samples, 0.13%)</title><rect x="66.5488%" y="709" width="0.1326%" height="15" fill="rgb(251,153,30)"/><text x="66.7988%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="66.5488%" y="693" width="0.1326%" height="15" fill="rgb(239,152,38)"/><text x="66.7988%" y="703.50"></text></g><g><title>__alloc_skb [linux] (19 samples, 0.84%)</title><rect x="65.9302%" y="741" width="0.8396%" height="15" fill="rgb(249,139,47)"/><text x="66.1802%" y="751.50"></text></g><g><title>sk_stream_alloc_skb [linux] (23 samples, 1.02%)</title><rect x="65.8418%" y="757" width="1.0163%" height="15" fill="rgb(244,64,35)"/><text x="66.0918%" y="767.50"></text></g><g><title>ktime_get [linux] (3 samples, 0.13%)</title><rect x="67.0349%" y="725" width="0.1326%" height="15" fill="rgb(216,46,15)"/><text x="67.2849%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="67.0349%" y="709" width="0.1326%" height="15" fill="rgb(250,74,19)"/><text x="67.2849%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="67.1675%" y="709" width="0.2209%" height="15" fill="rgb(249,42,33)"/><text x="67.4175%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="67.3884%" y="693" width="0.2651%" height="15" fill="rgb(242,149,17)"/><text x="67.6384%" y="703.50"></text></g><g><title>bictcp_cwnd_event [linux] (3 samples, 0.13%)</title><rect x="67.7861%" y="693" width="0.1326%" height="15" fill="rgb(244,29,21)"/><text x="68.0361%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="67.7861%" y="677" width="0.1326%" height="15" fill="rgb(220,130,37)"/><text x="68.0361%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="67.9187%" y="661" width="0.1768%" height="15" fill="rgb(211,67,2)"/><text x="68.1687%" y="671.50"></text></g><g><title>__cgroup_bpf_run_filter_skb [linux] (3 samples, 0.13%)</title><rect x="68.3606%" y="613" width="0.1326%" height="15" fill="rgb(235,68,52)"/><text x="68.6106%" y="623.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="68.3606%" y="597" width="0.1326%" height="15" fill="rgb(246,142,3)"/><text x="68.6106%" y="607.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (12 samples, 0.53%)</title><rect x="68.5815%" y="581" width="0.5303%" height="15" fill="rgb(241,25,7)"/><text x="68.8315%" y="591.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="69.2002%" y="549" width="0.1768%" height="15" fill="rgb(242,119,39)"/><text x="69.4502%" y="559.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="69.3769%" y="517" width="0.1326%" height="15" fill="rgb(241,98,45)"/><text x="69.6269%" y="527.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="69.5095%" y="501" width="0.1326%" height="15" fill="rgb(254,28,30)"/><text x="69.7595%" y="511.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="69.6863%" y="485" width="0.2651%" height="15" fill="rgb(241,142,54)"/><text x="69.9363%" y="495.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="70.0398%" y="453" width="0.1768%" height="15" fill="rgb(222,85,15)"/><text x="70.2898%" y="463.50"></text></g><g><title>__netif_receive_skb_core [linux] (4 samples, 0.18%)</title><rect x="70.2165%" y="453" width="0.1768%" height="15" fill="rgb(210,85,47)"/><text x="70.4665%" y="463.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="70.2165%" y="437" width="0.1768%" height="15" fill="rgb(224,206,25)"/><text x="70.4665%" y="447.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="70.6142%" y="405" width="0.3093%" height="15" fill="rgb(243,201,19)"/><text x="70.8642%" y="415.50"></text></g><g><title>_raw_spin_lock [linux] (3 samples, 0.13%)</title><rect x="71.1445%" y="373" width="0.1326%" height="15" fill="rgb(236,59,4)"/><text x="71.3945%" y="383.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="71.1445%" y="357" width="0.1326%" height="15" fill="rgb(254,179,45)"/><text x="71.3945%" y="367.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="71.2771%" y="357" width="0.1768%" height="15" fill="rgb(226,14,10)"/><text x="71.5271%" y="367.50"></text></g><g><title>kfree_skb [linux] (6 samples, 0.27%)</title><rect x="71.6306%" y="325" width="0.2651%" height="15" fill="rgb(244,27,41)"/><text x="71.8806%" y="335.50"></text></g><g><title>skb_release_all [linux] (4 samples, 0.18%)</title><rect x="71.7190%" y="309" width="0.1768%" height="15" fill="rgb(235,35,32)"/><text x="71.9690%" y="319.50"></text></g><g><title>skb_release_data [linux] (4 samples, 0.18%)</title><rect x="71.7190%" y="293" width="0.1768%" height="15" fill="rgb(218,68,31)"/><text x="71.9690%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="71.7190%" y="277" width="0.1768%" height="15" fill="rgb(207,120,37)"/><text x="71.9690%" y="287.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="71.9399%" y="293" width="0.2651%" height="15" fill="rgb(227,98,0)"/><text x="72.1899%" y="303.50"></text></g><g><title>raw_rcv [linux] (19 samples, 0.84%)</title><rect x="71.5422%" y="357" width="0.8396%" height="15" fill="rgb(207,7,3)"/><text x="71.7922%" y="367.50"></text></g><g><title>raw_rcv_skb [linux] (18 samples, 0.80%)</title><rect x="71.5864%" y="341" width="0.7954%" height="15" fill="rgb(206,98,19)"/><text x="71.8364%" y="351.50"></text></g><g><title>sock_queue_rcv_skb [linux] (11 samples, 0.49%)</title><rect x="71.8957%" y="325" width="0.4861%" height="15" fill="rgb(217,5,26)"/><text x="72.1457%" y="335.50"></text></g><g><title>sk_filter_trim_cap [linux] (10 samples, 0.44%)</title><rect x="71.9399%" y="309" width="0.4419%" height="15" fill="rgb(235,190,38)"/><text x="72.1899%" y="319.50"></text></g><g><title>__skb_clone [linux] (4 samples, 0.18%)</title><rect x="72.3818%" y="341" width="0.1768%" height="15" fill="rgb(247,86,24)"/><text x="72.6318%" y="351.50"></text></g><g><title>__copy_skb_header [linux] (3 samples, 0.13%)</title><rect x="72.4260%" y="325" width="0.1326%" height="15" fill="rgb(205,101,16)"/><text x="72.6760%" y="335.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="72.4260%" y="309" width="0.1326%" height="15" fill="rgb(246,168,33)"/><text x="72.6760%" y="319.50"></text></g><g><title>kmem_cache_alloc [linux] (3 samples, 0.13%)</title><rect x="72.5586%" y="341" width="0.1326%" height="15" fill="rgb(231,114,1)"/><text x="72.8086%" y="351.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="72.5586%" y="325" width="0.1326%" height="15" fill="rgb(207,184,53)"/><text x="72.8086%" y="335.50"></text></g><g><title>skb_clone [linux] (8 samples, 0.35%)</title><rect x="72.3818%" y="357" width="0.3535%" height="15" fill="rgb(224,95,51)"/><text x="72.6318%" y="367.50"></text></g><g><title>raw_local_deliver [linux] (34 samples, 1.50%)</title><rect x="71.2771%" y="373" width="1.5024%" height="15" fill="rgb(212,188,45)"/><text x="71.5271%" y="383.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.44%)</title><rect x="72.8679%" y="357" width="0.4419%" height="15" fill="rgb(223,154,38)"/><text x="73.1179%" y="367.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (19 samples, 0.84%)</title><rect x="73.3098%" y="341" width="0.8396%" height="15" fill="rgb(251,22,52)"/><text x="73.5598%" y="351.50"></text></g><g><title>__inet_lookup_established [linux] (21 samples, 0.93%)</title><rect x="73.3098%" y="357" width="0.9280%" height="15" fill="rgb(229,209,22)"/><text x="73.5598%" y="367.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="74.5029%" y="325" width="0.1326%" height="15" fill="rgb(234,138,34)"/><text x="74.7529%" y="335.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="74.6354%" y="309" width="0.1326%" height="15" fill="rgb(212,95,11)"/><text x="74.8854%" y="319.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="74.9006%" y="261" width="0.1326%" height="15" fill="rgb(240,179,47)"/><text x="75.1506%" y="271.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="75.0331%" y="229" width="0.1326%" height="15" fill="rgb(240,163,11)"/><text x="75.2831%" y="239.50"></text></g><g><title>__kmalloc_node_track_caller [linux] (7 samples, 0.31%)</title><rect x="75.0331%" y="245" width="0.3093%" height="15" fill="rgb(236,37,12)"/><text x="75.2831%" y="255.50"></text></g><g><title>__slab_alloc [linux] (4 samples, 0.18%)</title><rect x="75.1657%" y="229" width="0.1768%" height="15" fill="rgb(232,164,16)"/><text x="75.4157%" y="239.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="75.1657%" y="213" width="0.1768%" height="15" fill="rgb(244,205,15)"/><text x="75.4157%" y="223.50"></text></g><g><title>__kmalloc_reserve.isra.0 [linux] (8 samples, 0.35%)</title><rect x="75.0331%" y="261" width="0.3535%" height="15" fill="rgb(223,117,47)"/><text x="75.2831%" y="271.50"></text></g><g><title>ksize [linux] (3 samples, 0.13%)</title><rect x="75.4750%" y="261" width="0.1326%" height="15" fill="rgb(244,107,35)"/><text x="75.7250%" y="271.50"></text></g><g><title>__ksize [linux] (3 samples, 0.13%)</title><rect x="75.4750%" y="245" width="0.1326%" height="15" fill="rgb(205,140,8)"/><text x="75.7250%" y="255.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="75.4750%" y="229" width="0.1326%" height="15" fill="rgb(228,84,46)"/><text x="75.7250%" y="239.50"></text></g><g><title>__alloc_skb [linux] (19 samples, 0.84%)</title><rect x="74.9006%" y="277" width="0.8396%" height="15" fill="rgb(254,188,9)"/><text x="75.1506%" y="287.50"></text></g><g><title>memset_erms [linux] (3 samples, 0.13%)</title><rect x="75.6076%" y="261" width="0.1326%" height="15" fill="rgb(206,112,54)"/><text x="75.8576%" y="271.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="75.6076%" y="245" width="0.1326%" height="15" fill="rgb(216,84,49)"/><text x="75.8576%" y="255.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="75.7402%" y="261" width="0.2651%" height="15" fill="rgb(214,194,35)"/><text x="75.9902%" y="271.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="76.0937%" y="229" width="0.1768%" height="15" fill="rgb(249,28,3)"/><text x="76.3437%" y="239.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="76.5356%" y="149" width="0.1326%" height="15" fill="rgb(222,56,52)"/><text x="76.7856%" y="159.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="76.6681%" y="117" width="0.1326%" height="15" fill="rgb(245,217,50)"/><text x="76.9181%" y="127.50"></text></g><g><title>dev_hard_start_xmit [linux] (7 samples, 0.31%)</title><rect x="76.8007%" y="117" width="0.3093%" height="15" fill="rgb(213,201,24)"/><text x="77.0507%" y="127.50"></text></g><g><title>loopback_xmit [linux] (5 samples, 0.22%)</title><rect x="76.8891%" y="101" width="0.2209%" height="15" fill="rgb(248,116,28)"/><text x="77.1391%" y="111.50"></text></g><g><title>netif_rx [linux] (4 samples, 0.18%)</title><rect x="76.9333%" y="85" width="0.1768%" height="15" fill="rgb(219,72,43)"/><text x="77.1833%" y="95.50"></text></g><g><title>netif_rx_internal [linux] (3 samples, 0.13%)</title><rect x="76.9775%" y="69" width="0.1326%" height="15" fill="rgb(209,138,14)"/><text x="77.2275%" y="79.50"></text></g><g><title>enqueue_to_backlog [linux] (3 samples, 0.13%)</title><rect x="76.9775%" y="53" width="0.1326%" height="15" fill="rgb(222,18,33)"/><text x="77.2275%" y="63.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="76.9775%" y="37" width="0.1326%" height="15" fill="rgb(213,199,7)"/><text x="77.2275%" y="47.50"></text></g><g><title>ip_queue_xmit [linux] (28 samples, 1.24%)</title><rect x="76.0937%" y="261" width="1.2373%" height="15" fill="rgb(250,110,10)"/><text x="76.3437%" y="271.50"></text></g><g><title>__ip_queue_xmit [linux] (28 samples, 1.24%)</title><rect x="76.0937%" y="245" width="1.2373%" height="15" fill="rgb(248,123,6)"/><text x="76.3437%" y="255.50"></text></g><g><title>ip_local_out [linux] (23 samples, 1.02%)</title><rect x="76.3146%" y="229" width="1.0163%" height="15" fill="rgb(206,91,31)"/><text x="76.5646%" y="239.50"></text></g><g><title>ip_output [linux] (21 samples, 0.93%)</title><rect x="76.4030%" y="213" width="0.9280%" height="15" fill="rgb(211,154,13)"/><text x="76.6530%" y="223.50"></text></g><g><title>ip_finish_output [linux] (21 samples, 0.93%)</title><rect x="76.4030%" y="197" width="0.9280%" height="15" fill="rgb(225,148,7)"/><text x="76.6530%" y="207.50"></text></g><g><title>__ip_finish_output [linux] (20 samples, 0.88%)</title><rect x="76.4472%" y="181" width="0.8838%" height="15" fill="rgb(220,160,43)"/><text x="76.6972%" y="191.50"></text></g><g><title>ip_finish_output2 [linux] (18 samples, 0.80%)</title><rect x="76.5356%" y="165" width="0.7954%" height="15" fill="rgb(213,52,39)"/><text x="76.7856%" y="175.50"></text></g><g><title>dev_queue_xmit [linux] (15 samples, 0.66%)</title><rect x="76.6681%" y="149" width="0.6628%" height="15" fill="rgb(243,137,7)"/><text x="76.9181%" y="159.50"></text></g><g><title>__dev_queue_xmit [linux] (15 samples, 0.66%)</title><rect x="76.6681%" y="133" width="0.6628%" height="15" fill="rgb(230,79,13)"/><text x="76.9181%" y="143.50"></text></g><g><title>validate_xmit_skb [linux] (5 samples, 0.22%)</title><rect x="77.1100%" y="117" width="0.2209%" height="15" fill="rgb(247,105,23)"/><text x="77.3600%" y="127.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (5 samples, 0.22%)</title><rect x="77.1100%" y="101" width="0.2209%" height="15" fill="rgb(223,179,41)"/><text x="77.3600%" y="111.50"></text></g><g><title>__tcp_transmit_skb [linux] (41 samples, 1.81%)</title><rect x="75.7402%" y="277" width="1.8118%" height="15" fill="rgb(218,9,34)"/><text x="75.9902%" y="287.50">_..</text></g><g><title>__tcp_ack_snd_check [linux] (67 samples, 2.96%)</title><rect x="74.6354%" y="325" width="2.9607%" height="15" fill="rgb(222,106,8)"/><text x="74.8854%" y="335.50">__t..</text></g><g><title>tcp_send_ack [linux] (63 samples, 2.78%)</title><rect x="74.8122%" y="309" width="2.7839%" height="15" fill="rgb(211,220,0)"/><text x="75.0622%" y="319.50">tc..</text></g><g><title>__tcp_send_ack.part.0 [linux] (63 samples, 2.78%)</title><rect x="74.8122%" y="293" width="2.7839%" height="15" fill="rgb(229,52,16)"/><text x="75.0622%" y="303.50">__..</text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="77.7287%" y="309" width="0.1768%" height="15" fill="rgb(212,155,18)"/><text x="77.9787%" y="319.50"></text></g><g><title>tcp_ack [linux] (5 samples, 0.22%)</title><rect x="77.7287%" y="325" width="0.2209%" height="15" fill="rgb(242,21,14)"/><text x="77.9787%" y="335.50"></text></g><g><title>dst_release [linux] (6 samples, 0.27%)</title><rect x="77.9938%" y="309" width="0.2651%" height="15" fill="rgb(222,19,48)"/><text x="78.2438%" y="319.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (6 samples, 0.27%)</title><rect x="77.9938%" y="293" width="0.2651%" height="15" fill="rgb(232,45,27)"/><text x="78.2438%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.44%)</title><rect x="78.3031%" y="277" width="0.4419%" height="15" fill="rgb(249,103,42)"/><text x="78.5531%" y="287.50"></text></g><g><title>tcp_data_ready [linux] (97 samples, 4.29%)</title><rect x="78.2589%" y="309" width="4.2863%" height="15" fill="rgb(246,81,33)"/><text x="78.5089%" y="319.50">tcp_d..</text></g><g><title>sock_def_readable [linux] (96 samples, 4.24%)</title><rect x="78.3031%" y="293" width="4.2422%" height="15" fill="rgb(252,33,42)"/><text x="78.5531%" y="303.50">sock_..</text></g><g><title>__wake_up_sync_key [linux] (86 samples, 3.80%)</title><rect x="78.7450%" y="277" width="3.8003%" height="15" fill="rgb(209,212,41)"/><text x="78.9950%" y="287.50">__wa..</text></g><g><title>__wake_up_common_lock [linux] (85 samples, 3.76%)</title><rect x="78.7892%" y="261" width="3.7561%" height="15" fill="rgb(207,154,6)"/><text x="79.0392%" y="271.50">__wa..</text></g><g><title>__lock_text_start [linux] (85 samples, 3.76%)</title><rect x="78.7892%" y="245" width="3.7561%" height="15" fill="rgb(223,64,47)"/><text x="79.0392%" y="255.50">__lo..</text></g><g><title>0xFFFFFFFFFFFFFF80 (85 samples, 3.76%)</title><rect x="78.7892%" y="229" width="3.7561%" height="15" fill="rgb(211,161,38)"/><text x="79.0392%" y="239.50">0xFF..</text></g><g><title>tcp_data_queue [linux] (107 samples, 4.73%)</title><rect x="77.9496%" y="325" width="4.7282%" height="15" fill="rgb(219,138,40)"/><text x="78.1996%" y="335.50">tcp_da..</text></g><g><title>tcp_queue_rcv [linux] (3 samples, 0.13%)</title><rect x="82.5453%" y="309" width="0.1326%" height="15" fill="rgb(241,228,46)"/><text x="82.7953%" y="319.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="82.5453%" y="293" width="0.1326%" height="15" fill="rgb(223,209,38)"/><text x="82.7953%" y="303.50"></text></g><g><title>tcp_rcv_established [linux] (192 samples, 8.48%)</title><rect x="74.5029%" y="341" width="8.4843%" height="15" fill="rgb(236,164,45)"/><text x="74.7529%" y="351.50">tcp_rcv_esta..</text></g><g><title>tcp_v4_do_rcv [linux] (194 samples, 8.57%)</title><rect x="74.4587%" y="357" width="8.5727%" height="15" fill="rgb(231,15,5)"/><text x="74.7087%" y="367.50">tcp_v4_do_rc..</text></g><g><title>ip_local_deliver [linux] (283 samples, 12.51%)</title><rect x="70.6142%" y="421" width="12.5055%" height="15" fill="rgb(252,35,15)"/><text x="70.8642%" y="431.50">ip_local_deliver [l..</text></g><g><title>ip_local_deliver_finish [linux] (276 samples, 12.20%)</title><rect x="70.9236%" y="405" width="12.1962%" height="15" fill="rgb(248,181,18)"/><text x="71.1736%" y="415.50">ip_local_deliver_f..</text></g><g><title>ip_protocol_deliver_rcu [linux] (275 samples, 12.15%)</title><rect x="70.9677%" y="389" width="12.1520%" height="15" fill="rgb(233,39,42)"/><text x="71.2177%" y="399.50">ip_protocol_delive..</text></g><g><title>tcp_v4_rcv [linux] (232 samples, 10.25%)</title><rect x="72.8679%" y="373" width="10.2519%" height="15" fill="rgb(238,110,33)"/><text x="73.1179%" y="383.50">tcp_v4_rcv [lin..</text></g><g><title>__netif_receive_skb_one_core [linux] (298 samples, 13.17%)</title><rect x="70.0398%" y="469" width="13.1684%" height="15" fill="rgb(233,195,10)"/><text x="70.2898%" y="479.50">__netif_receive_skb_..</text></g><g><title>ip_rcv [linux] (290 samples, 12.81%)</title><rect x="70.3933%" y="453" width="12.8148%" height="15" fill="rgb(254,105,3)"/><text x="70.6433%" y="463.50">ip_rcv [linux]</text></g><g><title>ip_rcv_finish [linux] (287 samples, 12.68%)</title><rect x="70.5259%" y="437" width="12.6823%" height="15" fill="rgb(221,225,9)"/><text x="70.7759%" y="447.50">ip_rcv_finish [linu..</text></g><g><title>__netif_receive_skb [linux] (302 samples, 13.35%)</title><rect x="69.9514%" y="485" width="13.3451%" height="15" fill="rgb(224,227,45)"/><text x="70.2014%" y="495.50">__netif_receive_skb ..</text></g><g><title>do_softirq_own_stack [linux] (316 samples, 13.96%)</title><rect x="69.3769%" y="549" width="13.9638%" height="15" fill="rgb(229,198,43)"/><text x="69.6269%" y="559.50">do_softirq_own_stack ..</text></g><g><title>__softirqentry_text_start [linux] (316 samples, 13.96%)</title><rect x="69.3769%" y="533" width="13.9638%" height="15" fill="rgb(206,209,35)"/><text x="69.6269%" y="543.50">__softirqentry_text_s..</text></g><g><title>net_rx_action [linux] (313 samples, 13.83%)</title><rect x="69.5095%" y="517" width="13.8312%" height="15" fill="rgb(245,195,53)"/><text x="69.7595%" y="527.50">net_rx_action [linux]</text></g><g><title>process_backlog [linux] (309 samples, 13.65%)</title><rect x="69.6863%" y="501" width="13.6544%" height="15" fill="rgb(240,92,26)"/><text x="69.9363%" y="511.50">process_backlog [linu..</text></g><g><title>__local_bh_enable_ip [linux] (323 samples, 14.27%)</title><rect x="69.1118%" y="581" width="14.2731%" height="15" fill="rgb(207,40,23)"/><text x="69.3618%" y="591.50">__local_bh_enable_ip [..</text></g><g><title>do_softirq.part.0 [linux] (321 samples, 14.18%)</title><rect x="69.2002%" y="565" width="14.1847%" height="15" fill="rgb(223,111,35)"/><text x="69.4502%" y="575.50">do_softirq.part.0 [lin..</text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="83.3849%" y="549" width="0.1768%" height="15" fill="rgb(229,147,28)"/><text x="83.6349%" y="559.50"></text></g><g><title>netif_rx [linux] (8 samples, 0.35%)</title><rect x="83.6942%" y="517" width="0.3535%" height="15" fill="rgb(211,29,28)"/><text x="83.9442%" y="527.50"></text></g><g><title>netif_rx_internal [linux] (8 samples, 0.35%)</title><rect x="83.6942%" y="501" width="0.3535%" height="15" fill="rgb(228,72,33)"/><text x="83.9442%" y="511.50"></text></g><g><title>ktime_get_with_offset [linux] (5 samples, 0.22%)</title><rect x="83.8268%" y="485" width="0.2209%" height="15" fill="rgb(205,214,31)"/><text x="84.0768%" y="495.50"></text></g><g><title>kvm_clock_get_cycles [linux] (3 samples, 0.13%)</title><rect x="83.9152%" y="469" width="0.1326%" height="15" fill="rgb(224,111,15)"/><text x="84.1652%" y="479.50"></text></g><g><title>pvclock_clocksource_read [linux] (3 samples, 0.13%)</title><rect x="83.9152%" y="453" width="0.1326%" height="15" fill="rgb(253,21,26)"/><text x="84.1652%" y="463.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="83.9152%" y="437" width="0.1326%" height="15" fill="rgb(245,139,43)"/><text x="84.1652%" y="447.50"></text></g><g><title>dev_hard_start_xmit [linux] (14 samples, 0.62%)</title><rect x="83.5616%" y="549" width="0.6186%" height="15" fill="rgb(252,170,7)"/><text x="83.8116%" y="559.50"></text></g><g><title>loopback_xmit [linux] (13 samples, 0.57%)</title><rect x="83.6058%" y="533" width="0.5745%" height="15" fill="rgb(231,118,14)"/><text x="83.8558%" y="543.50"></text></g><g><title>tcp_wfree [linux] (3 samples, 0.13%)</title><rect x="84.0477%" y="517" width="0.1326%" height="15" fill="rgb(238,83,0)"/><text x="84.2977%" y="527.50"></text></g><g><title>__dev_queue_xmit [linux] (21 samples, 0.93%)</title><rect x="83.3849%" y="565" width="0.9280%" height="15" fill="rgb(221,39,39)"/><text x="83.6349%" y="575.50"></text></g><g><title>validate_xmit_skb [linux] (3 samples, 0.13%)</title><rect x="84.1803%" y="549" width="0.1326%" height="15" fill="rgb(222,119,46)"/><text x="84.4303%" y="559.50"></text></g><g><title>dev_queue_xmit [linux] (22 samples, 0.97%)</title><rect x="83.3849%" y="581" width="0.9722%" height="15" fill="rgb(222,165,49)"/><text x="83.6349%" y="591.50"></text></g><g><title>ip_queue_xmit [linux] (373 samples, 16.48%)</title><rect x="67.9187%" y="693" width="16.4825%" height="15" fill="rgb(219,113,52)"/><text x="68.1687%" y="703.50">ip_queue_xmit [linux]</text></g><g><title>__ip_queue_xmit [linux] (373 samples, 16.48%)</title><rect x="67.9187%" y="677" width="16.4825%" height="15" fill="rgb(214,7,15)"/><text x="68.1687%" y="687.50">__ip_queue_xmit [linux]</text></g><g><title>ip_local_out [linux] (369 samples, 16.31%)</title><rect x="68.0954%" y="661" width="16.3058%" height="15" fill="rgb(235,32,4)"/><text x="68.3454%" y="671.50">ip_local_out [linux]</text></g><g><title>ip_output [linux] (365 samples, 16.13%)</title><rect x="68.2722%" y="645" width="16.1290%" height="15" fill="rgb(238,90,54)"/><text x="68.5222%" y="655.50">ip_output [linux]</text></g><g><title>ip_finish_output [linux] (363 samples, 16.04%)</title><rect x="68.3606%" y="629" width="16.0407%" height="15" fill="rgb(213,208,19)"/><text x="68.6106%" y="639.50">ip_finish_output [linux]</text></g><g><title>__ip_finish_output [linux] (360 samples, 15.91%)</title><rect x="68.4932%" y="613" width="15.9081%" height="15" fill="rgb(233,156,4)"/><text x="68.7432%" y="623.50">__ip_finish_output [linu..</text></g><g><title>ip_finish_output2 [linux] (358 samples, 15.82%)</title><rect x="68.5815%" y="597" width="15.8197%" height="15" fill="rgb(207,194,5)"/><text x="68.8315%" y="607.50">ip_finish_output2 [linux]</text></g><g><title>__tcp_transmit_skb [linux] (388 samples, 17.15%)</title><rect x="67.3884%" y="709" width="17.1454%" height="15" fill="rgb(206,111,30)"/><text x="67.6384%" y="719.50">__tcp_transmit_skb [linux]</text></g><g><title>ktime_get [linux] (8 samples, 0.35%)</title><rect x="84.5338%" y="709" width="0.3535%" height="15" fill="rgb(243,70,54)"/><text x="84.7838%" y="719.50"></text></g><g><title>kvm_clock_get_cycles [linux] (7 samples, 0.31%)</title><rect x="84.5780%" y="693" width="0.3093%" height="15" fill="rgb(242,28,8)"/><text x="84.8280%" y="703.50"></text></g><g><title>pvclock_clocksource_read [linux] (7 samples, 0.31%)</title><rect x="84.5780%" y="677" width="0.3093%" height="15" fill="rgb(219,106,18)"/><text x="84.8280%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (7 samples, 0.31%)</title><rect x="84.5780%" y="661" width="0.3093%" height="15" fill="rgb(244,222,10)"/><text x="84.8280%" y="671.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="84.9315%" y="645" width="0.3977%" height="15" fill="rgb(236,179,52)"/><text x="85.1815%" y="655.50"></text></g><g><title>__lock_text_start [linux] (14 samples, 0.62%)</title><rect x="85.3292%" y="645" width="0.6186%" height="15" fill="rgb(213,23,39)"/><text x="85.5792%" y="655.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (14 samples, 0.62%)</title><rect x="85.3292%" y="629" width="0.6186%" height="15" fill="rgb(238,48,10)"/><text x="85.5792%" y="639.50"></text></g><g><title>tcp_event_new_data_sent [linux] (25 samples, 1.10%)</title><rect x="84.8873%" y="709" width="1.1047%" height="15" fill="rgb(251,196,23)"/><text x="85.1373%" y="719.50"></text></g><g><title>tcp_rearm_rto [linux] (24 samples, 1.06%)</title><rect x="84.9315%" y="693" width="1.0605%" height="15" fill="rgb(250,152,24)"/><text x="85.1815%" y="703.50"></text></g><g><title>sk_reset_timer [linux] (24 samples, 1.06%)</title><rect x="84.9315%" y="677" width="1.0605%" height="15" fill="rgb(209,150,17)"/><text x="85.1815%" y="687.50"></text></g><g><title>mod_timer [linux] (24 samples, 1.06%)</title><rect x="84.9315%" y="661" width="1.0605%" height="15" fill="rgb(234,202,34)"/><text x="85.1815%" y="671.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 [linux] (3 samples, 0.13%)</title><rect x="85.9920%" y="709" width="0.1326%" height="15" fill="rgb(253,148,53)"/><text x="86.2420%" y="719.50"></text></g><g><title>__tcp_push_pending_frames [linux] (434 samples, 19.18%)</title><rect x="66.9907%" y="741" width="19.1781%" height="15" fill="rgb(218,129,16)"/><text x="67.2407%" y="751.50">__tcp_push_pending_frames [lin..</text></g><g><title>tcp_write_xmit [linux] (430 samples, 19.00%)</title><rect x="67.1675%" y="725" width="19.0013%" height="15" fill="rgb(216,85,19)"/><text x="67.4175%" y="735.50">tcp_write_xmit [linux]</text></g><g><title>tcp_push [linux] (437 samples, 19.31%)</title><rect x="66.9465%" y="757" width="19.3106%" height="15" fill="rgb(235,228,7)"/><text x="67.1965%" y="767.50">tcp_push [linux]</text></g><g><title>inet_sendmsg [linux] (544 samples, 24.04%)</title><rect x="62.3067%" y="805" width="24.0389%" height="15" fill="rgb(245,175,0)"/><text x="62.5567%" y="815.50">inet_sendmsg [linux]</text></g><g><title>tcp_sendmsg [linux] (542 samples, 23.95%)</title><rect x="62.3951%" y="789" width="23.9505%" height="15" fill="rgb(208,168,36)"/><text x="62.6451%" y="799.50">tcp_sendmsg [linux]</text></g><g><title>tcp_sendmsg_locked [linux] (487 samples, 21.52%)</title><rect x="64.8255%" y="773" width="21.5201%" height="15" fill="rgb(246,171,24)"/><text x="65.0755%" y="783.50">tcp_sendmsg_locked [linux]</text></g><g><title>__sock_sendmsg [linux] (546 samples, 24.13%)</title><rect x="62.3067%" y="821" width="24.1273%" height="15" fill="rgb(215,142,24)"/><text x="62.5567%" y="831.50">__sock_sendmsg [linux]</text></g><g><title>__x64_sys_sendto [linux] (552 samples, 24.39%)</title><rect x="62.1299%" y="853" width="24.3924%" height="15" fill="rgb(250,187,7)"/><text x="62.3799%" y="863.50">__x64_sys_sendto [linux]</text></g><g><title>__sys_sendto [linux] (551 samples, 24.35%)</title><rect x="62.1741%" y="837" width="24.3482%" height="15" fill="rgb(228,66,33)"/><text x="62.4241%" y="847.50">__sys_sendto [linux]</text></g><g><title>send [libpthread-2.31.so] (574 samples, 25.36%)</title><rect x="61.2461%" y="901" width="25.3646%" height="15" fill="rgb(234,215,21)"/><text x="61.4961%" y="911.50">send [libpthread-2.31.so]</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (570 samples, 25.19%)</title><rect x="61.4229%" y="885" width="25.1878%" height="15" fill="rgb(222,191,20)"/><text x="61.6729%" y="895.50">entry_SYSCALL_64_after_hwframe [linux]</text></g><g><title>do_syscall_64 [linux] (565 samples, 24.97%)</title><rect x="61.6438%" y="869" width="24.9669%" height="15" fill="rgb(245,79,54)"/><text x="61.8938%" y="879.50">do_syscall_64 [linux]</text></g><g><title>yyjson_mut_doc_new [http_server_c] (4 samples, 0.18%)</title><rect x="86.6549%" y="885" width="0.1768%" height="15" fill="rgb(240,10,37)"/><text x="86.9049%" y="895.50"></text></g><g><title>unsafe_yyjson_str_pool_grow [http_server_c] (4 samples, 0.18%)</title><rect x="87.4503%" y="869" width="0.1768%" height="15" fill="rgb(214,192,32)"/><text x="87.7003%" y="879.50"></text></g><g><title>yyjson_doc_mut_copy [http_server_c] (28 samples, 1.24%)</title><rect x="86.6107%" y="901" width="1.2373%" height="15" fill="rgb(209,36,54)"/><text x="86.8607%" y="911.50"></text></g><g><title>yyjson_val_mut_copy [http_server_c] (23 samples, 1.02%)</title><rect x="86.8316%" y="885" width="1.0163%" height="15" fill="rgb(220,10,11)"/><text x="87.0816%" y="895.50"></text></g><g><title>unsafe_yyjson_val_pool_grow [http_server_c] (5 samples, 0.22%)</title><rect x="87.6270%" y="869" width="0.2209%" height="15" fill="rgb(221,106,17)"/><text x="87.8770%" y="879.50"></text></g><g><title>default_free [http_server_c] (5 samples, 0.22%)</title><rect x="87.9364%" y="885" width="0.2209%" height="15" fill="rgb(251,142,44)"/><text x="88.1864%" y="895.50"></text></g><g><title>yyjson_mut_doc_free [http_server_c] (9 samples, 0.40%)</title><rect x="87.8480%" y="901" width="0.3977%" height="15" fill="rgb(238,13,15)"/><text x="88.0980%" y="911.50"></text></g><g><title>yyjson_mut_write_opts [http_server_c] (30 samples, 1.33%)</title><rect x="88.2457%" y="901" width="1.3257%" height="15" fill="rgb(208,107,27)"/><text x="88.4957%" y="911.50"></text></g><g><title>yyjson_mut_write_opts_impl [http_server_c] (28 samples, 1.24%)</title><rect x="88.3341%" y="885" width="1.2373%" height="15" fill="rgb(205,136,37)"/><text x="88.5841%" y="895.50"></text></g><g><title>default_malloc [http_server_c] (5 samples, 0.22%)</title><rect x="91.8692%" y="885" width="0.2209%" height="15" fill="rgb(250,205,27)"/><text x="92.1192%" y="895.50"></text></g><g><title>__libc_malloc [libc-2.31.so] (3 samples, 0.13%)</title><rect x="91.9576%" y="869" width="0.1326%" height="15" fill="rgb(210,80,43)"/><text x="92.2076%" y="879.50"></text></g><g><title>handle_json_endpoint [http_server_c] (776 samples, 34.29%)</title><rect x="57.8878%" y="917" width="34.2908%" height="15" fill="rgb(247,160,36)"/><text x="58.1378%" y="927.50">handle_json_endpoint [http_server_c]</text></g><g><title>yyjson_read_opts [http_server_c] (59 samples, 2.61%)</title><rect x="89.5714%" y="901" width="2.6072%" height="15" fill="rgb(234,13,49)"/><text x="89.8214%" y="911.50">yy..</text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.44%)</title><rect x="92.4878%" y="869" width="0.4419%" height="15" fill="rgb(234,122,0)"/><text x="92.7378%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="93.0181%" y="805" width="0.3977%" height="15" fill="rgb(207,146,38)"/><text x="93.2681%" y="815.50"></text></g><g><title>__fdget_pos [linux] (10 samples, 0.44%)</title><rect x="93.0181%" y="837" width="0.4419%" height="15" fill="rgb(207,177,25)"/><text x="93.2681%" y="847.50"></text></g><g><title>__fget_light [linux] (10 samples, 0.44%)</title><rect x="93.0181%" y="821" width="0.4419%" height="15" fill="rgb(211,178,42)"/><text x="93.2681%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="93.4600%" y="821" width="0.1768%" height="15" fill="rgb(230,69,54)"/><text x="93.7100%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="93.6368%" y="789" width="0.1326%" height="15" fill="rgb(214,135,41)"/><text x="93.8868%" y="799.50"></text></g><g><title>tcp_rcv_space_adjust [linux] (3 samples, 0.13%)</title><rect x="93.9903%" y="741" width="0.1326%" height="15" fill="rgb(237,67,25)"/><text x="94.2403%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="93.9903%" y="725" width="0.1326%" height="15" fill="rgb(222,189,50)"/><text x="94.2403%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="94.1228%" y="725" width="0.3535%" height="15" fill="rgb(245,148,34)"/><text x="94.3728%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="94.4764%" y="677" width="0.1768%" height="15" fill="rgb(222,29,6)"/><text x="94.7264%" y="687.50"></text></g><g><title>kfree_skbmem [linux] (7 samples, 0.31%)</title><rect x="94.4764%" y="709" width="0.3093%" height="15" fill="rgb(221,189,43)"/><text x="94.7264%" y="719.50"></text></g><g><title>kmem_cache_free [linux] (7 samples, 0.31%)</title><rect x="94.4764%" y="693" width="0.3093%" height="15" fill="rgb(207,36,27)"/><text x="94.7264%" y="703.50"></text></g><g><title>__slab_free [linux] (3 samples, 0.13%)</title><rect x="94.6531%" y="677" width="0.1326%" height="15" fill="rgb(217,90,24)"/><text x="94.9031%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="94.6531%" y="661" width="0.1326%" height="15" fill="rgb(224,66,35)"/><text x="94.9031%" y="671.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (4 samples, 0.18%)</title><rect x="94.8741%" y="645" width="0.1768%" height="15" fill="rgb(221,13,50)"/><text x="95.1241%" y="655.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="95.0508%" y="629" width="0.3535%" height="15" fill="rgb(236,68,49)"/><text x="95.3008%" y="639.50"></text></g><g><title>skb_release_data [linux] (15 samples, 0.66%)</title><rect x="94.7857%" y="693" width="0.6628%" height="15" fill="rgb(229,146,28)"/><text x="95.0357%" y="703.50"></text></g><g><title>skb_free_head [linux] (14 samples, 0.62%)</title><rect x="94.8299%" y="677" width="0.6186%" height="15" fill="rgb(225,31,38)"/><text x="95.0799%" y="687.50"></text></g><g><title>kfree [linux] (13 samples, 0.57%)</title><rect x="94.8741%" y="661" width="0.5745%" height="15" fill="rgb(250,208,3)"/><text x="95.1241%" y="671.50"></text></g><g><title>__slab_free [linux] (9 samples, 0.40%)</title><rect x="95.0508%" y="645" width="0.3977%" height="15" fill="rgb(246,54,23)"/><text x="95.3008%" y="655.50"></text></g><g><title>__kfree_skb [linux] (25 samples, 1.10%)</title><rect x="94.4764%" y="725" width="1.1047%" height="15" fill="rgb(243,76,11)"/><text x="94.7264%" y="735.50"></text></g><g><title>skb_release_all [linux] (18 samples, 0.80%)</title><rect x="94.7857%" y="709" width="0.7954%" height="15" fill="rgb(245,21,50)"/><text x="95.0357%" y="719.50"></text></g><g><title>sock_rfree [linux] (3 samples, 0.13%)</title><rect x="95.4485%" y="693" width="0.1326%" height="15" fill="rgb(228,9,43)"/><text x="95.6985%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="95.4485%" y="677" width="0.1326%" height="15" fill="rgb(208,100,47)"/><text x="95.6985%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.40%)</title><rect x="95.7578%" y="693" width="0.3977%" height="15" fill="rgb(232,26,8)"/><text x="96.0078%" y="703.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="96.1555%" y="661" width="0.1326%" height="15" fill="rgb(216,166,38)"/><text x="96.4055%" y="671.50"></text></g><g><title>__check_object_size [linux] (4 samples, 0.18%)</title><rect x="96.1555%" y="677" width="0.1768%" height="15" fill="rgb(251,202,51)"/><text x="96.4055%" y="687.50"></text></g><g><title>_copy_to_iter [linux] (8 samples, 0.35%)</title><rect x="96.3323%" y="677" width="0.3535%" height="15" fill="rgb(254,216,34)"/><text x="96.5823%" y="687.50"></text></g><g><title>copy_user_enhanced_fast_string [linux] (8 samples, 0.35%)</title><rect x="96.3323%" y="661" width="0.3535%" height="15" fill="rgb(251,32,27)"/><text x="96.5823%" y="671.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="96.3323%" y="645" width="0.3535%" height="15" fill="rgb(208,127,28)"/><text x="96.5823%" y="655.50"></text></g><g><title>skb_copy_datagram_iter [linux] (23 samples, 1.02%)</title><rect x="95.7137%" y="725" width="1.0163%" height="15" fill="rgb(224,137,22)"/><text x="95.9637%" y="735.50"></text></g><g><title>__skb_datagram_iter [linux] (22 samples, 0.97%)</title><rect x="95.7578%" y="709" width="0.9722%" height="15" fill="rgb(254,70,32)"/><text x="96.0078%" y="719.50"></text></g><g><title>simple_copy_to_iter [linux] (13 samples, 0.57%)</title><rect x="96.1555%" y="693" width="0.5745%" height="15" fill="rgb(229,75,37)"/><text x="96.4055%" y="703.50"></text></g><g><title>tcp_cleanup_rbuf [linux] (3 samples, 0.13%)</title><rect x="96.7300%" y="725" width="0.1326%" height="15" fill="rgb(252,64,23)"/><text x="96.9800%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="96.7300%" y="709" width="0.1326%" height="15" fill="rgb(232,162,48)"/><text x="96.9800%" y="719.50"></text></g><g><title>tcp_rcv_space_adjust [linux] (10 samples, 0.44%)</title><rect x="96.9068%" y="725" width="0.4419%" height="15" fill="rgb(246,160,12)"/><text x="97.1568%" y="735.50"></text></g><g><title>tcp_mstamp_refresh [linux] (8 samples, 0.35%)</title><rect x="96.9951%" y="709" width="0.3535%" height="15" fill="rgb(247,166,0)"/><text x="97.2451%" y="719.50"></text></g><g><title>ktime_get [linux] (8 samples, 0.35%)</title><rect x="96.9951%" y="693" width="0.3535%" height="15" fill="rgb(249,219,21)"/><text x="97.2451%" y="703.50"></text></g><g><title>kvm_clock_get_cycles [linux] (8 samples, 0.35%)</title><rect x="96.9951%" y="677" width="0.3535%" height="15" fill="rgb(205,209,3)"/><text x="97.2451%" y="687.50"></text></g><g><title>pvclock_clocksource_read [linux] (8 samples, 0.35%)</title><rect x="96.9951%" y="661" width="0.3535%" height="15" fill="rgb(243,44,1)"/><text x="97.2451%" y="671.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.35%)</title><rect x="96.9951%" y="645" width="0.3535%" height="15" fill="rgb(206,159,16)"/><text x="97.2451%" y="655.50"></text></g><g><title>inet_recvmsg [linux] (80 samples, 3.54%)</title><rect x="93.9461%" y="757" width="3.5351%" height="15" fill="rgb(244,77,30)"/><text x="94.1961%" y="767.50">ine..</text></g><g><title>tcp_recvmsg [linux] (76 samples, 3.36%)</title><rect x="94.1228%" y="741" width="3.3584%" height="15" fill="rgb(218,69,12)"/><text x="94.3728%" y="751.50">tcp..</text></g><g><title>tcp_recv_timestamp [linux] (3 samples, 0.13%)</title><rect x="97.3487%" y="725" width="0.1326%" height="15" fill="rgb(212,87,7)"/><text x="97.5987%" y="735.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="97.3487%" y="709" width="0.1326%" height="15" fill="rgb(245,114,25)"/><text x="97.5987%" y="719.50"></text></g><g><title>__vfs_read [linux] (90 samples, 3.98%)</title><rect x="93.6368%" y="821" width="3.9770%" height="15" fill="rgb(210,61,42)"/><text x="93.8868%" y="831.50">__vf..</text></g><g><title>new_sync_read [linux] (90 samples, 3.98%)</title><rect x="93.6368%" y="805" width="3.9770%" height="15" fill="rgb(211,52,33)"/><text x="93.8868%" y="815.50">new_..</text></g><g><title>sock_read_iter [linux] (87 samples, 3.84%)</title><rect x="93.7693%" y="789" width="3.8445%" height="15" fill="rgb(234,58,33)"/><text x="94.0193%" y="799.50">sock..</text></g><g><title>sock_recvmsg [linux] (86 samples, 3.80%)</title><rect x="93.8135%" y="773" width="3.8003%" height="15" fill="rgb(220,115,36)"/><text x="94.0635%" y="783.50">sock..</text></g><g><title>security_socket_recvmsg [linux] (3 samples, 0.13%)</title><rect x="97.4812%" y="757" width="0.1326%" height="15" fill="rgb(243,153,54)"/><text x="97.7312%" y="767.50"></text></g><g><title>rw_verify_area [linux] (4 samples, 0.18%)</title><rect x="97.6580%" y="821" width="0.1768%" height="15" fill="rgb(251,47,18)"/><text x="97.9080%" y="831.50"></text></g><g><title>security_file_permission [linux] (3 samples, 0.13%)</title><rect x="97.7022%" y="805" width="0.1326%" height="15" fill="rgb(242,102,42)"/><text x="97.9522%" y="815.50"></text></g><g><title>handle_connection [http_server_c] (1,422 samples, 62.84%)</title><rect x="35.0420%" y="933" width="62.8369%" height="15" fill="rgb(234,31,38)"/><text x="35.2920%" y="943.50">handle_connection [http_server_c]</text></g><g><title>read [libpthread-2.31.so] (129 samples, 5.70%)</title><rect x="92.1785%" y="917" width="5.7004%" height="15" fill="rgb(221,117,51)"/><text x="92.4285%" y="927.50">read [l..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (123 samples, 5.44%)</title><rect x="92.4437%" y="901" width="5.4353%" height="15" fill="rgb(212,20,18)"/><text x="92.6937%" y="911.50">entry_S..</text></g><g><title>do_syscall_64 [linux] (122 samples, 5.39%)</title><rect x="92.4878%" y="885" width="5.3911%" height="15" fill="rgb(245,133,36)"/><text x="92.7378%" y="895.50">do_sysc..</text></g><g><title>__x64_sys_read [linux] (112 samples, 4.95%)</title><rect x="92.9297%" y="869" width="4.9492%" height="15" fill="rgb(212,6,19)"/><text x="93.1797%" y="879.50">__x64_..</text></g><g><title>ksys_read [linux] (112 samples, 4.95%)</title><rect x="92.9297%" y="853" width="4.9492%" height="15" fill="rgb(218,1,36)"/><text x="93.1797%" y="863.50">ksys_r..</text></g><g><title>vfs_read [linux] (100 samples, 4.42%)</title><rect x="93.4600%" y="837" width="4.4189%" height="15" fill="rgb(246,84,54)"/><text x="93.7100%" y="847.50">vfs_r..</text></g><g><title>0xFFFFFFFFFFFFFF80 (14 samples, 0.62%)</title><rect x="98.7627%" y="837" width="0.6186%" height="15" fill="rgb(242,110,6)"/><text x="99.0127%" y="847.50"></text></g><g><title>__fdget_raw [linux] (3 samples, 0.13%)</title><rect x="99.4697%" y="821" width="0.1326%" height="15" fill="rgb(214,47,5)"/><text x="99.7197%" y="831.50"></text></g><g><title>__fget_light [linux] (3 samples, 0.13%)</title><rect x="99.4697%" y="805" width="0.1326%" height="15" fill="rgb(218,159,25)"/><text x="99.7197%" y="815.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (3 samples, 0.13%)</title><rect x="99.4697%" y="789" width="0.1326%" height="15" fill="rgb(215,211,28)"/><text x="99.7197%" y="799.50"></text></g><g><title>do_fcntl [linux] (3 samples, 0.13%)</title><rect x="99.6907%" y="821" width="0.1326%" height="15" fill="rgb(238,59,32)"/><text x="99.9407%" y="831.50"></text></g><g><title>__x64_sys_fcntl [linux] (11 samples, 0.49%)</title><rect x="99.4255%" y="837" width="0.4861%" height="15" fill="rgb(226,82,3)"/><text x="99.6755%" y="847.50"></text></g><g><title>0x00007F60AD2C7664 [libc-2.31.so] (32 samples, 1.41%)</title><rect x="98.5418%" y="885" width="1.4141%" height="15" fill="rgb(240,164,32)"/><text x="98.7918%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (27 samples, 1.19%)</title><rect x="98.7627%" y="869" width="1.1931%" height="15" fill="rgb(232,46,7)"/><text x="99.0127%" y="879.50"></text></g><g><title>do_syscall_64 [linux] (27 samples, 1.19%)</title><rect x="98.7627%" y="853" width="1.1931%" height="15" fill="rgb(229,129,53)"/><text x="99.0127%" y="863.50"></text></g><g><title>all (2,263 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(234,188,29)"/><text x="0.2500%" y="1055.50"></text></g><g><title>http_server_c [PID=624149] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(246,141,4)"/><text x="0.2500%" y="1039.50">http_server_c [PID=624149]</text></g><g><title>[MAIN_THREAD] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(229,23,39)"/><text x="0.2500%" y="1023.50">[MAIN_THREAD]</text></g><g><title>_start [http_server_c] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(206,12,3)"/><text x="0.2500%" y="1007.50">_start [http_server_c]</text></g><g><title>__libc_start_main [libc-2.31.so] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(252,226,20)"/><text x="0.2500%" y="991.50">__libc_start_main [libc-2.31.so]</text></g><g><title>main [http_server_c] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(216,123,35)"/><text x="0.2500%" y="975.50">main [http_server_c]</text></g><g><title>use_epoll [http_server_c] (2,263 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,68,40)"/><text x="0.2500%" y="959.50">use_epoll [http_server_c]</text></g><g><title>set_non_blocking [http_server_c] (48 samples, 2.12%)</title><rect x="97.8789%" y="933" width="2.1211%" height="15" fill="rgb(254,125,32)"/><text x="98.1289%" y="943.50">s..</text></g><g><title>__fcntl [libpthread-2.31.so] (47 samples, 2.08%)</title><rect x="97.9231%" y="917" width="2.0769%" height="15" fill="rgb(253,97,22)"/><text x="98.1731%" y="927.50">_..</text></g><g><title>__libc_fcntl64 [libc-2.31.so] (45 samples, 1.99%)</title><rect x="98.0115%" y="901" width="1.9885%" height="15" fill="rgb(241,101,14)"/><text x="98.2615%" y="911.50">_..</text></g></svg></svg>