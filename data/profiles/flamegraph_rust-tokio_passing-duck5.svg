<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1830" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1813.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1813.00"> </text><svg id="frames" x="10" width="1180"><g><title>0x0000000000000001 (31 samples, 0.13%)</title><rect x="0.0469%" y="1733" width="0.1322%" height="15" fill="rgb(227,0,7)"/><text x="0.2969%" y="1743.50"></text></g><g><title>0x00007FFD7E332760 (28 samples, 0.12%)</title><rect x="0.0597%" y="1717" width="0.1194%" height="15" fill="rgb(217,0,24)"/><text x="0.3097%" y="1727.50"></text></g><g><title>write [libpthread-2.31.so] (28 samples, 0.12%)</title><rect x="0.0597%" y="1701" width="0.1194%" height="15" fill="rgb(221,193,54)"/><text x="0.3097%" y="1711.50"></text></g><g><title>irq_entries_start [linux] (71 samples, 0.30%)</title><rect x="1.4712%" y="1685" width="0.3028%" height="15" fill="rgb(248,212,6)"/><text x="1.7212%" y="1695.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (71 samples, 0.30%)</title><rect x="1.4712%" y="1669" width="0.3028%" height="15" fill="rgb(208,68,35)"/><text x="1.7212%" y="1679.50"></text></g><g><title>0x00007FFD7E330990 (78 samples, 0.33%)</title><rect x="1.4456%" y="1733" width="0.3326%" height="15" fill="rgb(232,128,0)"/><text x="1.6956%" y="1743.50"></text></g><g><title>0x00007FFD7E330980 (78 samples, 0.33%)</title><rect x="1.4456%" y="1717" width="0.3326%" height="15" fill="rgb(207,160,47)"/><text x="1.6956%" y="1727.50"></text></g><g><title>writev [libc-2.31.so] (78 samples, 0.33%)</title><rect x="1.4456%" y="1701" width="0.3326%" height="15" fill="rgb(228,23,34)"/><text x="1.6956%" y="1711.50"></text></g><g><title>irq_entries_start [linux] (60 samples, 0.26%)</title><rect x="1.9062%" y="1637" width="0.2559%" height="15" fill="rgb(218,30,26)"/><text x="2.1562%" y="1647.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (60 samples, 0.26%)</title><rect x="1.9062%" y="1621" width="0.2559%" height="15" fill="rgb(220,122,19)"/><text x="2.1562%" y="1631.50"></text></g><g><title>epoll_wait [libc-2.31.so] (74 samples, 0.32%)</title><rect x="1.8507%" y="1653" width="0.3156%" height="15" fill="rgb(250,228,42)"/><text x="2.1007%" y="1663.50"></text></g><g><title>0x0000000000000005 (69 samples, 0.29%)</title><rect x="2.1791%" y="1637" width="0.2942%" height="15" fill="rgb(240,193,28)"/><text x="2.4291%" y="1647.50"></text></g><g><title>shutdown [libc-2.31.so] (69 samples, 0.29%)</title><rect x="2.1791%" y="1621" width="0.2942%" height="15" fill="rgb(216,20,37)"/><text x="2.4291%" y="1631.50"></text></g><g><title>irq_entries_start [linux] (66 samples, 0.28%)</title><rect x="2.1919%" y="1605" width="0.2814%" height="15" fill="rgb(206,188,39)"/><text x="2.4419%" y="1615.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (66 samples, 0.28%)</title><rect x="2.1919%" y="1589" width="0.2814%" height="15" fill="rgb(217,207,13)"/><text x="2.4419%" y="1599.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::shutdown [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="2.1791%" y="1653" width="0.3070%" height="15" fill="rgb(231,73,38)"/><text x="2.4291%" y="1663.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1653" width="0.2729%" height="15" fill="rgb(225,20,46)"/><text x="2.7745%" y="1663.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1637" width="0.2729%" height="15" fill="rgb(210,31,41)"/><text x="2.7745%" y="1647.50"></text></g><g><title>mio::poll::Registry::register [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1621" width="0.2729%" height="15" fill="rgb(221,200,47)"/><text x="2.7745%" y="1631.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1605" width="0.2729%" height="15" fill="rgb(226,26,5)"/><text x="2.7745%" y="1615.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::register [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1589" width="0.2729%" height="15" fill="rgb(249,33,26)"/><text x="2.7745%" y="1599.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::register [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1573" width="0.2729%" height="15" fill="rgb(235,183,28)"/><text x="2.7745%" y="1583.50"></text></g><g><title>mio::sys::unix::selector::Selector::register [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="2.5245%" y="1557" width="0.2729%" height="15" fill="rgb(221,5,38)"/><text x="2.7745%" y="1567.50"></text></g><g><title>epoll_ctl [libc-2.31.so] (64 samples, 0.27%)</title><rect x="2.5245%" y="1541" width="0.2729%" height="15" fill="rgb(247,18,42)"/><text x="2.7745%" y="1551.50"></text></g><g><title>irq_entries_start [linux] (54 samples, 0.23%)</title><rect x="2.5672%" y="1525" width="0.2303%" height="15" fill="rgb(241,131,45)"/><text x="2.8172%" y="1535.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (54 samples, 0.23%)</title><rect x="2.5672%" y="1509" width="0.2303%" height="15" fill="rgb(249,31,29)"/><text x="2.8172%" y="1519.50"></text></g><g><title>0x0000000000000000 (232 samples, 0.99%)</title><rect x="1.8124%" y="1669" width="0.9893%" height="15" fill="rgb(225,111,53)"/><text x="2.0624%" y="1679.50"></text></g><g><title>accept4 [libc-2.31.so] (44 samples, 0.19%)</title><rect x="2.8017%" y="1653" width="0.1876%" height="15" fill="rgb(238,160,17)"/><text x="3.0517%" y="1663.50"></text></g><g><title>irq_entries_start [linux] (38 samples, 0.16%)</title><rect x="2.8273%" y="1637" width="0.1620%" height="15" fill="rgb(214,148,48)"/><text x="3.0773%" y="1647.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (38 samples, 0.16%)</title><rect x="2.8273%" y="1621" width="0.1620%" height="15" fill="rgb(232,36,49)"/><text x="3.0773%" y="1631.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1653" width="0.1023%" height="15" fill="rgb(209,103,24)"/><text x="3.3374%" y="1663.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1637" width="0.1023%" height="15" fill="rgb(229,88,8)"/><text x="3.3374%" y="1647.50"></text></g><g><title>mio::waker::Waker::wake [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1621" width="0.1023%" height="15" fill="rgb(213,181,19)"/><text x="3.3374%" y="1631.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1605" width="0.1023%" height="15" fill="rgb(254,191,54)"/><text x="3.3374%" y="1615.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1589" width="0.1023%" height="15" fill="rgb(241,83,37)"/><text x="3.3374%" y="1599.50"></text></g><g><title>inline std::sys::pal::unix::fs::File::write [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1573" width="0.1023%" height="15" fill="rgb(233,36,39)"/><text x="3.3374%" y="1583.50"></text></g><g><title>inline std::sys::pal::unix::fd::FileDesc::write [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="3.0874%" y="1557" width="0.1023%" height="15" fill="rgb(226,3,54)"/><text x="3.3374%" y="1567.50"></text></g><g><title>write [libpthread-2.31.so] (24 samples, 0.10%)</title><rect x="3.0874%" y="1541" width="0.1023%" height="15" fill="rgb(245,192,40)"/><text x="3.3374%" y="1551.50"></text></g><g><title>0x0000000000000001 (102 samples, 0.43%)</title><rect x="2.8017%" y="1669" width="0.4350%" height="15" fill="rgb(238,167,29)"/><text x="3.0517%" y="1679.50"></text></g><g><title>0x00007FFD7E331D40 (24 samples, 0.10%)</title><rect x="4.1834%" y="1669" width="0.1023%" height="15" fill="rgb(232,182,51)"/><text x="4.4334%" y="1679.50"></text></g><g><title>__close [libpthread-2.31.so] (24 samples, 0.10%)</title><rect x="4.1834%" y="1653" width="0.1023%" height="15" fill="rgb(231,60,39)"/><text x="4.4334%" y="1663.50"></text></g><g><title>0x010055A4E1B44AEF (84 samples, 0.36%)</title><rect x="4.4563%" y="1669" width="0.3582%" height="15" fill="rgb(208,69,12)"/><text x="4.7063%" y="1679.50"></text></g><g><title>__close [libpthread-2.31.so] (84 samples, 0.36%)</title><rect x="4.4563%" y="1653" width="0.3582%" height="15" fill="rgb(235,93,37)"/><text x="4.7063%" y="1663.50"></text></g><g><title>irq_entries_start [linux] (71 samples, 0.30%)</title><rect x="4.5117%" y="1637" width="0.3028%" height="15" fill="rgb(213,116,39)"/><text x="4.7617%" y="1647.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (71 samples, 0.30%)</title><rect x="4.5117%" y="1621" width="0.3028%" height="15" fill="rgb(222,207,29)"/><text x="4.7617%" y="1631.50"></text></g><g><title>tokio::runtime::context::budget [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="5.6034%" y="1173" width="0.1919%" height="15" fill="rgb(206,96,30)"/><text x="5.8534%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="5.6418%" y="1157" width="0.1535%" height="15" fill="rgb(218,138,4)"/><text x="5.8918%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="6.0213%" y="1125" width="0.1748%" height="15" fill="rgb(250,191,14)"/><text x="6.2713%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="6.0384%" y="1109" width="0.1578%" height="15" fill="rgb(239,60,40)"/><text x="6.2884%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="6.0853%" y="1093" width="0.1109%" height="15" fill="rgb(206,27,48)"/><text x="6.3353%" y="1103.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (85 samples, 0.36%)</title><rect x="7.0874%" y="869" width="0.3625%" height="15" fill="rgb(225,35,8)"/><text x="7.3374%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (25 samples, 0.11%)</title><rect x="7.8806%" y="757" width="0.1066%" height="15" fill="rgb(250,213,24)"/><text x="8.1306%" y="767.50"></text></g><g><title>memcg_kmem_get_cache [linux] (26 samples, 0.11%)</title><rect x="7.8806%" y="773" width="0.1109%" height="15" fill="rgb(247,123,22)"/><text x="8.1306%" y="783.50"></text></g><g><title>kmem_cache_alloc [linux] (46 samples, 0.20%)</title><rect x="7.8038%" y="789" width="0.1962%" height="15" fill="rgb(231,138,38)"/><text x="8.0538%" y="799.50"></text></g><g><title>ep_ptable_queue_proc [linux] (59 samples, 0.25%)</title><rect x="7.7569%" y="805" width="0.2516%" height="15" fill="rgb(231,145,46)"/><text x="8.0069%" y="815.50"></text></g><g><title>tcp_poll [linux] (74 samples, 0.32%)</title><rect x="7.7015%" y="821" width="0.3156%" height="15" fill="rgb(251,118,11)"/><text x="7.9515%" y="831.50"></text></g><g><title>ep_item_poll.isra.0 [linux] (99 samples, 0.42%)</title><rect x="7.6162%" y="853" width="0.4222%" height="15" fill="rgb(217,147,25)"/><text x="7.8662%" y="863.50"></text></g><g><title>sock_poll [linux] (96 samples, 0.41%)</title><rect x="7.6290%" y="837" width="0.4094%" height="15" fill="rgb(247,81,37)"/><text x="7.8790%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (29 samples, 0.12%)</title><rect x="8.1365%" y="821" width="0.1237%" height="15" fill="rgb(209,12,38)"/><text x="8.3865%" y="831.50"></text></g><g><title>kmem_cache_alloc [linux] (53 samples, 0.23%)</title><rect x="8.0384%" y="853" width="0.2260%" height="15" fill="rgb(227,1,9)"/><text x="8.2884%" y="863.50"></text></g><g><title>memcg_kmem_get_cache [linux] (30 samples, 0.13%)</title><rect x="8.1365%" y="837" width="0.1279%" height="15" fill="rgb(248,47,43)"/><text x="8.3865%" y="847.50"></text></g><g><title>ep_insert [linux] (177 samples, 0.75%)</title><rect x="7.5352%" y="869" width="0.7548%" height="15" fill="rgb(221,10,30)"/><text x="7.7852%" y="879.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (301 samples, 1.28%)</title><rect x="7.0874%" y="885" width="1.2836%" height="15" fill="rgb(210,229,1)"/><text x="7.3374%" y="895.50"></text></g><g><title>do_syscall_64 [linux] (319 samples, 1.36%)</title><rect x="7.0576%" y="901" width="1.3603%" height="15" fill="rgb(222,148,37)"/><text x="7.3076%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (326 samples, 1.39%)</title><rect x="7.0320%" y="917" width="1.3902%" height="15" fill="rgb(234,67,33)"/><text x="7.2820%" y="927.50"></text></g><g><title>epoll_ctl [libc-2.31.so] (337 samples, 1.44%)</title><rect x="7.0149%" y="933" width="1.4371%" height="15" fill="rgb(247,98,35)"/><text x="7.2649%" y="943.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::register [http_server_rust-tokio] (355 samples, 1.51%)</title><rect x="6.9936%" y="965" width="1.5139%" height="15" fill="rgb(247,138,52)"/><text x="7.2436%" y="975.50"></text></g><g><title>mio::sys::unix::selector::Selector::register [http_server_rust-tokio] (352 samples, 1.50%)</title><rect x="7.0064%" y="949" width="1.5011%" height="15" fill="rgb(213,79,30)"/><text x="7.2564%" y="959.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register [http_server_rust-tokio] (376 samples, 1.60%)</title><rect x="6.9211%" y="997" width="1.6034%" height="15" fill="rgb(246,177,23)"/><text x="7.1711%" y="1007.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::register [http_server_rust-tokio] (371 samples, 1.58%)</title><rect x="6.9424%" y="981" width="1.5821%" height="15" fill="rgb(230,62,27)"/><text x="7.1924%" y="991.50"></text></g><g><title>mio::poll::Registry::register [http_server_rust-tokio] (381 samples, 1.62%)</title><rect x="6.9041%" y="1013" width="1.6247%" height="15" fill="rgb(216,154,8)"/><text x="7.1541%" y="1023.50"></text></g><g><title>tokio::io::interest::Interest::to_mio [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="8.5288%" y="1013" width="0.1748%" height="15" fill="rgb(244,35,45)"/><text x="8.7788%" y="1023.50"></text></g><g><title>tokio::io::interest::Interest::to_mio::mio_add [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="8.5800%" y="997" width="0.1237%" height="15" fill="rgb(251,115,12)"/><text x="8.8300%" y="1007.50"></text></g><g><title>&lt;mio::interest::Interest as core::ops::bit::BitOrAssign&gt;::bitor_assign [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="8.5970%" y="981" width="0.1066%" height="15" fill="rgb(240,54,50)"/><text x="8.8470%" y="991.50"></text></g><g><title>&lt;mio::interest::Interest as core::ops::bit::BitOr&gt;::bitor [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="8.6013%" y="965" width="0.1023%" height="15" fill="rgb(233,84,52)"/><text x="8.8513%" y="975.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::ScheduledIo as core::default::Default&gt;::default [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="8.8102%" y="997" width="0.1109%" height="15" fill="rgb(207,117,47)"/><text x="9.0602%" y="1007.50"></text></g><g><title>0x00007F34449E2ADE [libc-2.31.so] (109 samples, 0.46%)</title><rect x="9.1215%" y="837" width="0.4648%" height="15" fill="rgb(249,43,39)"/><text x="9.3715%" y="847.50"></text></g><g><title>__rdl_alloc [http_server_rust-tokio] (166 samples, 0.71%)</title><rect x="8.9893%" y="901" width="0.7079%" height="15" fill="rgb(209,38,44)"/><text x="9.2393%" y="911.50"></text></g><g><title>inline std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc [http_server_rust-tokio] (160 samples, 0.68%)</title><rect x="9.0149%" y="885" width="0.6823%" height="15" fill="rgb(236,212,23)"/><text x="9.2649%" y="895.50"></text></g><g><title>inline std::sys::alloc::unix::aligned_malloc [http_server_rust-tokio] (156 samples, 0.67%)</title><rect x="9.0320%" y="869" width="0.6652%" height="15" fill="rgb(242,79,21)"/><text x="9.2820%" y="879.50"></text></g><g><title>posix_memalign [libc-2.31.so] (156 samples, 0.67%)</title><rect x="9.0320%" y="853" width="0.6652%" height="15" fill="rgb(211,96,35)"/><text x="9.2820%" y="863.50"></text></g><g><title>alloc::alloc::alloc [http_server_rust-tokio] (175 samples, 0.75%)</title><rect x="8.9851%" y="917" width="0.7463%" height="15" fill="rgb(253,215,40)"/><text x="9.2351%" y="927.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate [http_server_rust-tokio] (179 samples, 0.76%)</title><rect x="8.9765%" y="949" width="0.7633%" height="15" fill="rgb(211,81,21)"/><text x="9.2265%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl [http_server_rust-tokio] (179 samples, 0.76%)</title><rect x="8.9765%" y="933" width="0.7633%" height="15" fill="rgb(208,190,38)"/><text x="9.2265%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new [http_server_rust-tokio] (197 samples, 0.84%)</title><rect x="8.9211%" y="997" width="0.8401%" height="15" fill="rgb(235,213,38)"/><text x="9.1711%" y="1007.50"></text></g><g><title>inline alloc::boxed::Box&lt;T&gt;::new [http_server_rust-tokio] (194 samples, 0.83%)</title><rect x="8.9339%" y="981" width="0.8273%" height="15" fill="rgb(237,122,38)"/><text x="9.1839%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc [http_server_rust-tokio] (189 samples, 0.81%)</title><rect x="8.9552%" y="965" width="0.8060%" height="15" fill="rgb(244,218,35)"/><text x="9.2052%" y="975.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source [http_server_rust-tokio] (747 samples, 3.19%)</title><rect x="6.7377%" y="1029" width="3.1855%" height="15" fill="rgb(240,68,47)"/><text x="6.9877%" y="1039.50">tok..</text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate [http_server_rust-tokio] (275 samples, 1.17%)</title><rect x="8.7505%" y="1013" width="1.1727%" height="15" fill="rgb(210,16,53)"/><text x="9.0005%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="9.7612%" y="997" width="0.1620%" height="15" fill="rgb(235,124,12)"/><text x="10.0112%" y="1007.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle [http_server_rust-tokio] (804 samples, 3.43%)</title><rect x="6.5458%" y="1061" width="3.4286%" height="15" fill="rgb(224,169,11)"/><text x="6.7958%" y="1071.50">tok..</text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle [http_server_rust-tokio] (797 samples, 3.40%)</title><rect x="6.5757%" y="1045" width="3.3987%" height="15" fill="rgb(250,166,2)"/><text x="6.8257%" y="1055.50">tok..</text></g><g><title>core::option::Option&lt;T&gt;::map [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="10.1706%" y="997" width="0.1023%" height="15" fill="rgb(242,216,29)"/><text x="10.4206%" y="1007.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new [http_server_rust-tokio] (909 samples, 3.88%)</title><rect x="6.4307%" y="1109" width="3.8763%" height="15" fill="rgb(230,116,27)"/><text x="6.6807%" y="1119.50">toki..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new [http_server_rust-tokio] (899 samples, 3.83%)</title><rect x="6.4733%" y="1093" width="3.8337%" height="15" fill="rgb(228,99,48)"/><text x="6.7233%" y="1103.50">toki..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest [http_server_rust-tokio] (890 samples, 3.80%)</title><rect x="6.5117%" y="1077" width="3.7953%" height="15" fill="rgb(253,11,6)"/><text x="6.7617%" y="1087.50">toki..</text></g><g><title>tokio::runtime::scheduler::Handle::current [http_server_rust-tokio] (78 samples, 0.33%)</title><rect x="9.9744%" y="1061" width="0.3326%" height="15" fill="rgb(247,143,39)"/><text x="10.2244%" y="1071.50"></text></g><g><title>tokio::runtime::context::current::with_current [http_server_rust-tokio] (76 samples, 0.32%)</title><rect x="9.9829%" y="1045" width="0.3241%" height="15" fill="rgb(236,97,10)"/><text x="10.2329%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="10.0085%" y="1029" width="0.2985%" height="15" fill="rgb(233,208,19)"/><text x="10.2585%" y="1039.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="10.0938%" y="1013" width="0.2132%" height="15" fill="rgb(216,164,2)"/><text x="10.3438%" y="1023.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="10.7207%" y="1013" width="0.1066%" height="15" fill="rgb(220,129,5)"/><text x="10.9707%" y="1023.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (77 samples, 0.33%)</title><rect x="10.5117%" y="1093" width="0.3284%" height="15" fill="rgb(242,17,10)"/><text x="10.7617%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut [http_server_rust-tokio] (75 samples, 0.32%)</title><rect x="10.5203%" y="1077" width="0.3198%" height="15" fill="rgb(242,107,0)"/><text x="10.7703%" y="1087.50"></text></g><g><title>tokio::runtime::coop::poll_proceed [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="10.5416%" y="1061" width="0.2985%" height="15" fill="rgb(251,28,31)"/><text x="10.7916%" y="1071.50"></text></g><g><title>tokio::runtime::context::budget [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="10.6567%" y="1045" width="0.1834%" height="15" fill="rgb(233,223,10)"/><text x="10.9067%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="10.6738%" y="1029" width="0.1663%" height="15" fill="rgb(215,21,27)"/><text x="10.9238%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="10.9467%" y="1093" width="0.1066%" height="15" fill="rgb(232,23,21)"/><text x="11.1967%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="10.9467%" y="1077" width="0.1066%" height="15" fill="rgb(244,5,23)"/><text x="11.1967%" y="1087.50"></text></g><g><title>std::io::error::Error::kind [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="11.0533%" y="1093" width="0.1237%" height="15" fill="rgb(226,81,46)"/><text x="11.3033%" y="1103.50"></text></g><g><title>get_unused_fd_flags [linux] (40 samples, 0.17%)</title><rect x="11.7868%" y="917" width="0.1706%" height="15" fill="rgb(247,70,30)"/><text x="12.0368%" y="927.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (37 samples, 0.16%)</title><rect x="12.0213%" y="885" width="0.1578%" height="15" fill="rgb(212,68,19)"/><text x="12.2713%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (25 samples, 0.11%)</title><rect x="12.2644%" y="869" width="0.1066%" height="15" fill="rgb(240,187,13)"/><text x="12.5144%" y="879.50"></text></g><g><title>kmem_cache_free [linux] (39 samples, 0.17%)</title><rect x="12.2644%" y="885" width="0.1663%" height="15" fill="rgb(223,113,26)"/><text x="12.5144%" y="895.50"></text></g><g><title>inet_csk_accept [linux] (109 samples, 0.46%)</title><rect x="12.0213%" y="901" width="0.4648%" height="15" fill="rgb(206,192,2)"/><text x="12.2713%" y="911.50"></text></g><g><title>inet_accept [linux] (153 samples, 0.65%)</title><rect x="11.9574%" y="917" width="0.6525%" height="15" fill="rgb(241,108,4)"/><text x="12.2074%" y="927.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (24 samples, 0.10%)</title><rect x="13.1471%" y="837" width="0.1023%" height="15" fill="rgb(247,173,49)"/><text x="13.3971%" y="847.50"></text></g><g><title>__slab_alloc [linux] (26 samples, 0.11%)</title><rect x="13.2495%" y="837" width="0.1109%" height="15" fill="rgb(224,114,35)"/><text x="13.4995%" y="847.50"></text></g><g><title>___slab_alloc [linux] (26 samples, 0.11%)</title><rect x="13.2495%" y="821" width="0.1109%" height="15" fill="rgb(245,159,27)"/><text x="13.4995%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (26 samples, 0.11%)</title><rect x="13.2495%" y="805" width="0.1109%" height="15" fill="rgb(245,172,44)"/><text x="13.4995%" y="815.50"></text></g><g><title>memcg_kmem_get_cache [linux] (39 samples, 0.17%)</title><rect x="13.3689%" y="837" width="0.1663%" height="15" fill="rgb(236,23,11)"/><text x="13.6189%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (39 samples, 0.17%)</title><rect x="13.3689%" y="821" width="0.1663%" height="15" fill="rgb(205,117,38)"/><text x="13.6189%" y="831.50"></text></g><g><title>kmem_cache_alloc [linux] (97 samples, 0.41%)</title><rect x="13.1471%" y="853" width="0.4136%" height="15" fill="rgb(237,72,25)"/><text x="13.3971%" y="863.50"></text></g><g><title>alloc_inode [linux] (148 samples, 0.63%)</title><rect x="12.9382%" y="885" width="0.6311%" height="15" fill="rgb(244,70,9)"/><text x="13.1882%" y="895.50"></text></g><g><title>sock_alloc_inode [linux] (105 samples, 0.45%)</title><rect x="13.1215%" y="869" width="0.4478%" height="15" fill="rgb(217,125,39)"/><text x="13.3715%" y="879.50"></text></g><g><title>sock_alloc [linux] (173 samples, 0.74%)</title><rect x="12.8571%" y="917" width="0.7377%" height="15" fill="rgb(235,36,10)"/><text x="13.1071%" y="927.50"></text></g><g><title>new_inode_pseudo [linux] (155 samples, 0.66%)</title><rect x="12.9339%" y="901" width="0.6610%" height="15" fill="rgb(251,123,47)"/><text x="13.1839%" y="911.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (42 samples, 0.18%)</title><rect x="13.7996%" y="789" width="0.1791%" height="15" fill="rgb(221,13,13)"/><text x="14.0496%" y="799.50"></text></g><g><title>___slab_alloc [linux] (43 samples, 0.18%)</title><rect x="13.7996%" y="805" width="0.1834%" height="15" fill="rgb(238,131,9)"/><text x="14.0496%" y="815.50"></text></g><g><title>__slab_alloc [linux] (45 samples, 0.19%)</title><rect x="13.7953%" y="821" width="0.1919%" height="15" fill="rgb(211,50,8)"/><text x="14.0453%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (25 samples, 0.11%)</title><rect x="14.0000%" y="805" width="0.1066%" height="15" fill="rgb(245,182,24)"/><text x="14.2500%" y="815.50"></text></g><g><title>memcg_kmem_get_cache [linux] (26 samples, 0.11%)</title><rect x="14.0000%" y="821" width="0.1109%" height="15" fill="rgb(242,14,37)"/><text x="14.2500%" y="831.50"></text></g><g><title>kmem_cache_alloc [linux] (83 samples, 0.35%)</title><rect x="13.7612%" y="837" width="0.3539%" height="15" fill="rgb(246,228,12)"/><text x="14.0112%" y="847.50"></text></g><g><title>kmem_cache_alloc [linux] (25 samples, 0.11%)</title><rect x="14.2132%" y="821" width="0.1066%" height="15" fill="rgb(213,55,15)"/><text x="14.4632%" y="831.50"></text></g><g><title>__alloc_file [linux] (146 samples, 0.62%)</title><rect x="13.7058%" y="853" width="0.6226%" height="15" fill="rgb(209,9,3)"/><text x="13.9558%" y="863.50"></text></g><g><title>security_file_alloc [linux] (47 samples, 0.20%)</title><rect x="14.1279%" y="837" width="0.2004%" height="15" fill="rgb(230,59,30)"/><text x="14.3779%" y="847.50"></text></g><g><title>alloc_empty_file [linux] (160 samples, 0.68%)</title><rect x="13.6972%" y="869" width="0.6823%" height="15" fill="rgb(209,121,21)"/><text x="13.9472%" y="879.50"></text></g><g><title>alloc_file [linux] (173 samples, 0.74%)</title><rect x="13.6588%" y="885" width="0.7377%" height="15" fill="rgb(220,109,13)"/><text x="13.9088%" y="895.50"></text></g><g><title>___slab_alloc [linux] (27 samples, 0.12%)</title><rect x="14.5330%" y="821" width="0.1151%" height="15" fill="rgb(232,18,1)"/><text x="14.7830%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (27 samples, 0.12%)</title><rect x="14.5330%" y="805" width="0.1151%" height="15" fill="rgb(215,41,42)"/><text x="14.7830%" y="815.50"></text></g><g><title>__slab_alloc [linux] (28 samples, 0.12%)</title><rect x="14.5330%" y="837" width="0.1194%" height="15" fill="rgb(224,123,36)"/><text x="14.7830%" y="847.50"></text></g><g><title>kmem_cache_alloc [linux] (71 samples, 0.30%)</title><rect x="14.4776%" y="853" width="0.3028%" height="15" fill="rgb(240,125,3)"/><text x="14.7276%" y="863.50"></text></g><g><title>memcg_kmem_get_cache [linux] (27 samples, 0.12%)</title><rect x="14.6652%" y="837" width="0.1151%" height="15" fill="rgb(205,98,50)"/><text x="14.9152%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (27 samples, 0.12%)</title><rect x="14.6652%" y="821" width="0.1151%" height="15" fill="rgb(205,185,37)"/><text x="14.9152%" y="831.50"></text></g><g><title>__d_alloc [linux] (91 samples, 0.39%)</title><rect x="14.4051%" y="869" width="0.3881%" height="15" fill="rgb(238,207,15)"/><text x="14.6551%" y="879.50"></text></g><g><title>d_alloc_pseudo [linux] (97 samples, 0.41%)</title><rect x="14.3966%" y="885" width="0.4136%" height="15" fill="rgb(213,199,42)"/><text x="14.6466%" y="895.50"></text></g><g><title>alloc_file_pseudo [linux] (303 samples, 1.29%)</title><rect x="13.5991%" y="901" width="1.2921%" height="15" fill="rgb(235,201,11)"/><text x="13.8491%" y="911.50"></text></g><g><title>sock_alloc_file [linux] (314 samples, 1.34%)</title><rect x="13.5949%" y="917" width="1.3390%" height="15" fill="rgb(207,46,11)"/><text x="13.8449%" y="927.50"></text></g><g><title>__sys_accept4 [linux] (800 samples, 3.41%)</title><rect x="11.5736%" y="933" width="3.4115%" height="15" fill="rgb(241,35,35)"/><text x="11.8236%" y="943.50">__s..</text></g><g><title>__x64_sys_accept4 [linux] (823 samples, 3.51%)</title><rect x="11.5693%" y="949" width="3.5096%" height="15" fill="rgb(243,32,47)"/><text x="11.8193%" y="959.50">__x..</text></g><g><title>destroy_inode [linux] (34 samples, 0.14%)</title><rect x="15.3561%" y="805" width="0.1450%" height="15" fill="rgb(247,202,23)"/><text x="15.6061%" y="815.50"></text></g><g><title>evict [linux] (62 samples, 0.26%)</title><rect x="15.3305%" y="821" width="0.2644%" height="15" fill="rgb(219,102,11)"/><text x="15.5805%" y="831.50"></text></g><g><title>dentry_unlink_inode [linux] (76 samples, 0.32%)</title><rect x="15.2836%" y="853" width="0.3241%" height="15" fill="rgb(243,110,44)"/><text x="15.5336%" y="863.50"></text></g><g><title>iput [linux] (68 samples, 0.29%)</title><rect x="15.3177%" y="837" width="0.2900%" height="15" fill="rgb(222,74,54)"/><text x="15.5677%" y="847.50"></text></g><g><title>__dentry_kill [linux] (84 samples, 0.36%)</title><rect x="15.2537%" y="869" width="0.3582%" height="15" fill="rgb(216,99,12)"/><text x="15.5037%" y="879.50"></text></g><g><title>dput [linux] (91 samples, 0.39%)</title><rect x="15.2409%" y="885" width="0.3881%" height="15" fill="rgb(226,22,26)"/><text x="15.4909%" y="895.50"></text></g><g><title>__fput [linux] (131 samples, 0.56%)</title><rect x="15.1727%" y="901" width="0.5586%" height="15" fill="rgb(217,163,10)"/><text x="15.4227%" y="911.50"></text></g><g><title>____fput [linux] (147 samples, 0.63%)</title><rect x="15.1727%" y="917" width="0.6269%" height="15" fill="rgb(213,25,53)"/><text x="15.4227%" y="927.50"></text></g><g><title>exit_to_usermode_loop [linux] (168 samples, 0.72%)</title><rect x="15.0959%" y="949" width="0.7164%" height="15" fill="rgb(252,105,26)"/><text x="15.3459%" y="959.50"></text></g><g><title>task_work_run [linux] (154 samples, 0.66%)</title><rect x="15.1557%" y="933" width="0.6567%" height="15" fill="rgb(220,39,43)"/><text x="15.4057%" y="943.50"></text></g><g><title>do_syscall_64 [linux] (1,008 samples, 4.30%)</title><rect x="11.5352%" y="965" width="4.2985%" height="15" fill="rgb(229,68,48)"/><text x="11.7852%" y="975.50">do_sy..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (1,025 samples, 4.37%)</title><rect x="11.4797%" y="981" width="4.3710%" height="15" fill="rgb(252,8,32)"/><text x="11.7297%" y="991.50">entry..</text></g><g><title>accept4 [libc-2.31.so] (1,055 samples, 4.50%)</title><rect x="11.4243%" y="997" width="4.4989%" height="15" fill="rgb(223,20,43)"/><text x="11.6743%" y="1007.50">accep..</text></g><g><title>std::io::error::Error::last_os_error [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="16.0682%" y="997" width="0.1023%" height="15" fill="rgb(229,81,49)"/><text x="16.3182%" y="1007.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io [http_server_rust-tokio] (1,150 samples, 4.90%)</title><rect x="11.2793%" y="1045" width="4.9041%" height="15" fill="rgb(236,28,36)"/><text x="11.5293%" y="1055.50">mio::s..</text></g><g><title>mio::net::tcp::listener::TcpListener::accept::{{closure}} [http_server_rust-tokio] (1,146 samples, 4.89%)</title><rect x="11.2964%" y="1029" width="4.8870%" height="15" fill="rgb(249,185,26)"/><text x="11.5464%" y="1039.50">mio::n..</text></g><g><title>mio::sys::unix::tcp::accept [http_server_rust-tokio] (1,129 samples, 4.81%)</title><rect x="11.3689%" y="1013" width="4.8145%" height="15" fill="rgb(249,174,33)"/><text x="11.6189%" y="1023.50">mio::s..</text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}}::{{closure}} [http_server_rust-tokio] (1,175 samples, 5.01%)</title><rect x="11.1770%" y="1093" width="5.0107%" height="15" fill="rgb(233,201,37)"/><text x="11.4270%" y="1103.50">tokio:..</text></g><g><title>mio::net::tcp::listener::TcpListener::accept [http_server_rust-tokio] (1,167 samples, 4.98%)</title><rect x="11.2111%" y="1077" width="4.9765%" height="15" fill="rgb(221,78,26)"/><text x="11.4611%" y="1087.50">mio::n..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io [http_server_rust-tokio] (1,159 samples, 4.94%)</title><rect x="11.2452%" y="1061" width="4.9424%" height="15" fill="rgb(250,127,30)"/><text x="11.4952%" y="1071.50">mio::i..</text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="16.2090%" y="1093" width="0.1023%" height="15" fill="rgb(230,49,44)"/><text x="16.4590%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll [http_server_rust-tokio] (107 samples, 0.46%)</title><rect x="16.5629%" y="1061" width="0.4563%" height="15" fill="rgb(229,67,23)"/><text x="16.8129%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="17.0277%" y="1045" width="0.1663%" height="15" fill="rgb(249,83,47)"/><text x="17.2777%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="17.0192%" y="1061" width="0.2090%" height="15" fill="rgb(215,43,3)"/><text x="17.2692%" y="1071.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}} [http_server_rust-tokio] (2,598 samples, 11.08%)</title><rect x="6.2090%" y="1125" width="11.0789%" height="15" fill="rgb(238,154,13)"/><text x="6.4590%" y="1135.50">tokio::net::tcp:..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} [http_server_rust-tokio] (1,634 samples, 6.97%)</title><rect x="10.3198%" y="1109" width="6.9680%" height="15" fill="rgb(219,56,2)"/><text x="10.5698%" y="1119.50">tokio::ru..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} [http_server_rust-tokio] (224 samples, 0.96%)</title><rect x="16.3326%" y="1093" width="0.9552%" height="15" fill="rgb(233,0,4)"/><text x="16.5826%" y="1103.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} [http_server_rust-tokio] (189 samples, 0.81%)</title><rect x="16.4819%" y="1077" width="0.8060%" height="15" fill="rgb(235,30,7)"/><text x="16.7319%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="18.0554%" y="981" width="0.2388%" height="15" fill="rgb(250,79,13)"/><text x="18.3054%" y="991.50"></text></g><g><title>tokio::runtime::context::with_scheduler [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="18.0554%" y="965" width="0.2388%" height="15" fill="rgb(211,146,34)"/><text x="18.3054%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (48 samples, 0.20%)</title><rect x="18.0896%" y="949" width="0.2047%" height="15" fill="rgb(228,22,38)"/><text x="18.3396%" y="959.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="18.1109%" y="933" width="0.1834%" height="15" fill="rgb(235,168,5)"/><text x="18.3609%" y="943.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="18.1322%" y="917" width="0.1620%" height="15" fill="rgb(221,155,16)"/><text x="18.3822%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::{{closure}} [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="18.1620%" y="901" width="0.1322%" height="15" fill="rgb(215,215,53)"/><text x="18.4120%" y="911.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="18.5842%" y="917" width="0.1279%" height="15" fill="rgb(223,4,10)"/><text x="18.8342%" y="927.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front [http_server_rust-tokio] (55 samples, 0.23%)</title><rect x="18.5373%" y="933" width="0.2345%" height="15" fill="rgb(234,103,6)"/><text x="18.7873%" y="943.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push [http_server_rust-tokio] (100 samples, 0.43%)</title><rect x="18.4009%" y="949" width="0.4264%" height="15" fill="rgb(227,97,0)"/><text x="18.6509%" y="959.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner [http_server_rust-tokio] (173 samples, 0.74%)</title><rect x="18.3156%" y="965" width="0.7377%" height="15" fill="rgb(234,150,53)"/><text x="18.5656%" y="975.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard [http_server_rust-tokio] (53 samples, 0.23%)</title><rect x="18.8273%" y="949" width="0.2260%" height="15" fill="rgb(228,201,54)"/><text x="19.0773%" y="959.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="18.9211%" y="933" width="0.1322%" height="15" fill="rgb(222,22,37)"/><text x="19.1711%" y="943.50"></text></g><g><title>0x00007F34449E1C82 [libc-2.31.so] (38 samples, 0.16%)</title><rect x="19.6333%" y="757" width="0.1620%" height="15" fill="rgb(237,53,32)"/><text x="19.8833%" y="767.50"></text></g><g><title>0x00007F34449E2ADE [libc-2.31.so] (91 samples, 0.39%)</title><rect x="19.6247%" y="773" width="0.3881%" height="15" fill="rgb(233,25,53)"/><text x="19.8747%" y="783.50"></text></g><g><title>__rdl_alloc [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="19.6119%" y="837" width="0.4691%" height="15" fill="rgb(210,40,34)"/><text x="19.8619%" y="847.50"></text></g><g><title>inline std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="19.6119%" y="821" width="0.4691%" height="15" fill="rgb(241,220,44)"/><text x="19.8619%" y="831.50"></text></g><g><title>inline std::sys::alloc::unix::aligned_malloc [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="19.6119%" y="805" width="0.4691%" height="15" fill="rgb(235,28,35)"/><text x="19.8619%" y="815.50"></text></g><g><title>posix_memalign [libc-2.31.so] (110 samples, 0.47%)</title><rect x="19.6119%" y="789" width="0.4691%" height="15" fill="rgb(210,56,17)"/><text x="19.8619%" y="799.50"></text></g><g><title>alloc::alloc::alloc [http_server_rust-tokio] (118 samples, 0.50%)</title><rect x="19.6077%" y="853" width="0.5032%" height="15" fill="rgb(224,130,29)"/><text x="19.8577%" y="863.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate [http_server_rust-tokio] (130 samples, 0.55%)</title><rect x="19.5949%" y="885" width="0.5544%" height="15" fill="rgb(235,212,8)"/><text x="19.8449%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl [http_server_rust-tokio] (129 samples, 0.55%)</title><rect x="19.5991%" y="869" width="0.5501%" height="15" fill="rgb(223,33,50)"/><text x="19.8491%" y="879.50"></text></g><g><title>inline alloc::boxed::Box&lt;T&gt;::new [http_server_rust-tokio] (164 samples, 0.70%)</title><rect x="19.4584%" y="917" width="0.6994%" height="15" fill="rgb(219,149,13)"/><text x="19.7084%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc [http_server_rust-tokio] (145 samples, 0.62%)</title><rect x="19.5394%" y="901" width="0.6183%" height="15" fill="rgb(250,156,29)"/><text x="19.7894%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::new [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="20.1620%" y="917" width="0.1322%" height="15" fill="rgb(216,193,19)"/><text x="20.4120%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::check [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="20.3113%" y="917" width="0.1535%" height="15" fill="rgb(216,135,14)"/><text x="20.5613%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new [http_server_rust-tokio] (321 samples, 1.37%)</title><rect x="19.1684%" y="933" width="1.3689%" height="15" fill="rgb(241,47,5)"/><text x="19.4184%" y="943.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind [http_server_rust-tokio] (531 samples, 2.26%)</title><rect x="18.2942%" y="981" width="2.2644%" height="15" fill="rgb(233,42,35)"/><text x="18.5442%" y="991.50">t..</text></g><g><title>tokio::runtime::task::new_task [http_server_rust-tokio] (353 samples, 1.51%)</title><rect x="19.0533%" y="965" width="1.5053%" height="15" fill="rgb(231,13,6)"/><text x="19.3033%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new [http_server_rust-tokio] (345 samples, 1.47%)</title><rect x="19.0874%" y="949" width="1.4712%" height="15" fill="rgb(207,181,40)"/><text x="19.3374%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map [http_server_rust-tokio] (658 samples, 2.81%)</title><rect x="17.7697%" y="1045" width="2.8060%" height="15" fill="rgb(254,173,49)"/><text x="18.0197%" y="1055.50">co..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} [http_server_rust-tokio] (642 samples, 2.74%)</title><rect x="17.8380%" y="1029" width="2.7377%" height="15" fill="rgb(221,1,38)"/><text x="18.0880%" y="1039.50">to..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn [http_server_rust-tokio] (627 samples, 2.67%)</title><rect x="17.9019%" y="1013" width="2.6738%" height="15" fill="rgb(206,124,46)"/><text x="18.1519%" y="1023.50">to..</text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::spawn [http_server_rust-tokio] (623 samples, 2.66%)</title><rect x="17.9190%" y="997" width="2.6567%" height="15" fill="rgb(249,21,11)"/><text x="18.1690%" y="1007.50">to..</text></g><g><title>tokio::runtime::context::current::with_current [http_server_rust-tokio] (725 samples, 3.09%)</title><rect x="17.4968%" y="1093" width="3.0917%" height="15" fill="rgb(222,201,40)"/><text x="17.7468%" y="1103.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (706 samples, 3.01%)</title><rect x="17.5778%" y="1077" width="3.0107%" height="15" fill="rgb(235,61,29)"/><text x="17.8278%" y="1087.50">std..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} [http_server_rust-tokio] (683 samples, 2.91%)</title><rect x="17.6759%" y="1061" width="2.9126%" height="15" fill="rgb(219,207,3)"/><text x="17.9259%" y="1071.50">to..</text></g><g><title>http_server_rust_tokio::main::{{closure}} [http_server_rust-tokio] (3,495 samples, 14.90%)</title><rect x="5.8252%" y="1141" width="14.9041%" height="15" fill="rgb(222,56,46)"/><text x="6.0752%" y="1151.50">http_server_rust_tokio:..</text></g><g><title>tokio::task::spawn::spawn [http_server_rust-tokio] (807 samples, 3.44%)</title><rect x="17.2878%" y="1125" width="3.4414%" height="15" fill="rgb(239,76,54)"/><text x="17.5378%" y="1135.50">tok..</text></g><g><title>tokio::task::spawn::spawn_inner [http_server_rust-tokio] (784 samples, 3.34%)</title><rect x="17.3859%" y="1109" width="3.3433%" height="15" fill="rgb(231,124,27)"/><text x="17.6359%" y="1119.50">tok..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (3,510 samples, 14.97%)</title><rect x="5.8081%" y="1157" width="14.9680%" height="15" fill="rgb(249,195,6)"/><text x="6.0581%" y="1167.50">&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>inline tokio::runtime::coop::with_budget [http_server_rust-tokio] (3,583 samples, 15.28%)</title><rect x="5.5309%" y="1189" width="15.2793%" height="15" fill="rgb(237,174,47)"/><text x="5.7809%" y="1199.50">inline tokio::runtime::..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}}::{{closure}} [http_server_rust-tokio] (3,521 samples, 15.01%)</title><rect x="5.7953%" y="1173" width="15.0149%" height="15" fill="rgb(206,201,31)"/><text x="6.0453%" y="1183.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter [http_server_rust-tokio] (3,607 samples, 15.38%)</title><rect x="5.4371%" y="1237" width="15.3817%" height="15" fill="rgb(231,57,52)"/><text x="5.6871%" y="1247.50">tokio::runtime::schedule..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} [http_server_rust-tokio] (3,587 samples, 15.30%)</title><rect x="5.5224%" y="1221" width="15.2964%" height="15" fill="rgb(248,177,22)"/><text x="5.7724%" y="1231.50">tokio::runtime::schedul..</text></g><g><title>inline tokio::runtime::coop::budget [http_server_rust-tokio] (3,586 samples, 15.29%)</title><rect x="5.5267%" y="1205" width="15.2921%" height="15" fill="rgb(215,211,37)"/><text x="5.7767%" y="1215.50">inline tokio::runtime::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (74 samples, 0.32%)</title><rect x="21.4030%" y="1077" width="0.3156%" height="15" fill="rgb(241,128,51)"/><text x="21.6530%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="21.4115%" y="1061" width="0.3070%" height="15" fill="rgb(227,165,31)"/><text x="21.6615%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="21.4797%" y="1045" width="0.2388%" height="15" fill="rgb(228,167,24)"/><text x="21.7297%" y="1055.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::{{closure}} [http_server_rust-tokio] (55 samples, 0.23%)</title><rect x="21.4840%" y="1029" width="0.2345%" height="15" fill="rgb(228,143,12)"/><text x="21.7340%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="21.5011%" y="1013" width="0.2175%" height="15" fill="rgb(249,149,8)"/><text x="21.7511%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="21.5267%" y="997" width="0.1919%" height="15" fill="rgb(243,35,44)"/><text x="21.7767%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce [http_server_rust-tokio] (77 samples, 0.33%)</title><rect x="21.3987%" y="1093" width="0.3284%" height="15" fill="rgb(246,89,9)"/><text x="21.6487%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min [http_server_rust-tokio] (80 samples, 0.34%)</title><rect x="21.3902%" y="1125" width="0.3412%" height="15" fill="rgb(233,213,13)"/><text x="21.6402%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by [http_server_rust-tokio] (80 samples, 0.34%)</title><rect x="21.3902%" y="1109" width="0.3412%" height="15" fill="rgb(233,141,41)"/><text x="21.6402%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="22.4264%" y="1029" width="0.1151%" height="15" fill="rgb(239,167,4)"/><text x="22.6764%" y="1039.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans [http_server_rust-tokio] (130 samples, 0.55%)</title><rect x="22.0085%" y="1093" width="0.5544%" height="15" fill="rgb(209,217,16)"/><text x="22.2585%" y="1103.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans [http_server_rust-tokio] (128 samples, 0.55%)</title><rect x="22.0171%" y="1077" width="0.5458%" height="15" fill="rgb(219,88,35)"/><text x="22.2671%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="22.3795%" y="1061" width="0.1834%" height="15" fill="rgb(220,193,23)"/><text x="22.6295%" y="1071.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="22.4136%" y="1045" width="0.1493%" height="15" fill="rgb(230,90,52)"/><text x="22.6636%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="22.8699%" y="1029" width="0.1493%" height="15" fill="rgb(252,106,19)"/><text x="23.1199%" y="1039.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (91 samples, 0.39%)</title><rect x="22.7974%" y="1045" width="0.3881%" height="15" fill="rgb(206,74,20)"/><text x="23.0474%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="23.6588%" y="1013" width="0.1919%" height="15" fill="rgb(230,138,44)"/><text x="23.9088%" y="1023.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (25 samples, 0.11%)</title><rect x="24.1066%" y="917" width="0.1066%" height="15" fill="rgb(235,182,43)"/><text x="24.3566%" y="927.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (34 samples, 0.14%)</title><rect x="24.2985%" y="885" width="0.1450%" height="15" fill="rgb(242,16,51)"/><text x="24.5485%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (32 samples, 0.14%)</title><rect x="24.4478%" y="869" width="0.1365%" height="15" fill="rgb(248,9,4)"/><text x="24.6978%" y="879.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (45 samples, 0.19%)</title><rect x="24.6354%" y="853" width="0.1919%" height="15" fill="rgb(210,31,22)"/><text x="24.8854%" y="863.50"></text></g><g><title>sock_poll [linux] (66 samples, 0.28%)</title><rect x="24.6354%" y="869" width="0.2814%" height="15" fill="rgb(239,54,39)"/><text x="24.8854%" y="879.50"></text></g><g><title>ep_item_poll.isra.0 [linux] (111 samples, 0.47%)</title><rect x="24.4478%" y="885" width="0.4733%" height="15" fill="rgb(230,99,41)"/><text x="24.6978%" y="895.50"></text></g><g><title>ep_send_events_proc [linux] (158 samples, 0.67%)</title><rect x="24.2985%" y="901" width="0.6738%" height="15" fill="rgb(253,106,12)"/><text x="24.5485%" y="911.50"></text></g><g><title>ep_scan_ready_list.constprop.0 [linux] (197 samples, 0.84%)</title><rect x="24.2217%" y="917" width="0.8401%" height="15" fill="rgb(213,46,41)"/><text x="24.4717%" y="927.50"></text></g><g><title>ctx_sched_out [linux] (30 samples, 0.13%)</title><rect x="25.2708%" y="821" width="0.1279%" height="15" fill="rgb(215,133,35)"/><text x="25.5208%" y="831.50"></text></g><g><title>__perf_event_task_sched_out [linux] (54 samples, 0.23%)</title><rect x="25.1727%" y="853" width="0.2303%" height="15" fill="rgb(213,28,5)"/><text x="25.4227%" y="863.50"></text></g><g><title>task_ctx_sched_out [linux] (31 samples, 0.13%)</title><rect x="25.2708%" y="837" width="0.1322%" height="15" fill="rgb(215,77,49)"/><text x="25.5208%" y="847.50"></text></g><g><title>dequeue_entity [linux] (25 samples, 0.11%)</title><rect x="25.4456%" y="821" width="0.1066%" height="15" fill="rgb(248,100,22)"/><text x="25.6956%" y="831.50"></text></g><g><title>dequeue_task_fair [linux] (32 samples, 0.14%)</title><rect x="25.4286%" y="837" width="0.1365%" height="15" fill="rgb(208,67,9)"/><text x="25.6786%" y="847.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (26 samples, 0.11%)</title><rect x="25.5650%" y="821" width="0.1109%" height="15" fill="rgb(219,133,21)"/><text x="25.8150%" y="831.50"></text></g><g><title>deactivate_task [linux] (67 samples, 0.29%)</title><rect x="25.4072%" y="853" width="0.2857%" height="15" fill="rgb(246,46,29)"/><text x="25.6572%" y="863.50"></text></g><g><title>psi_task_change [linux] (30 samples, 0.13%)</title><rect x="25.5650%" y="837" width="0.1279%" height="15" fill="rgb(246,185,52)"/><text x="25.8150%" y="847.50"></text></g><g><title>finish_task_switch [linux] (65 samples, 0.28%)</title><rect x="25.7058%" y="853" width="0.2772%" height="15" fill="rgb(252,136,11)"/><text x="25.9558%" y="863.50"></text></g><g><title>pick_next_task_fair [linux] (46 samples, 0.20%)</title><rect x="26.0000%" y="853" width="0.1962%" height="15" fill="rgb(219,138,53)"/><text x="26.2500%" y="863.50"></text></g><g><title>newidle_balance [linux] (43 samples, 0.18%)</title><rect x="26.0128%" y="837" width="0.1834%" height="15" fill="rgb(211,51,23)"/><text x="26.2628%" y="847.50"></text></g><g><title>__sched_text_start [linux] (262 samples, 1.12%)</title><rect x="25.1343%" y="869" width="1.1173%" height="15" fill="rgb(247,221,28)"/><text x="25.3843%" y="879.50"></text></g><g><title>ep_poll [linux] (506 samples, 2.16%)</title><rect x="24.1066%" y="933" width="2.1578%" height="15" fill="rgb(251,222,45)"/><text x="24.3566%" y="943.50">e..</text></g><g><title>schedule_hrtimeout_range [linux] (272 samples, 1.16%)</title><rect x="25.1045%" y="917" width="1.1599%" height="15" fill="rgb(217,162,53)"/><text x="25.3545%" y="927.50"></text></g><g><title>schedule_hrtimeout_range_clock [linux] (268 samples, 1.14%)</title><rect x="25.1215%" y="901" width="1.1429%" height="15" fill="rgb(229,93,14)"/><text x="25.3715%" y="911.50"></text></g><g><title>schedule [linux] (265 samples, 1.13%)</title><rect x="25.1343%" y="885" width="1.1301%" height="15" fill="rgb(209,67,49)"/><text x="25.3843%" y="895.50"></text></g><g><title>__x64_sys_epoll_wait [linux] (528 samples, 2.25%)</title><rect x="24.0426%" y="965" width="2.2516%" height="15" fill="rgb(213,87,29)"/><text x="24.2926%" y="975.50">_..</text></g><g><title>do_epoll_wait [linux] (526 samples, 2.24%)</title><rect x="24.0512%" y="949" width="2.2431%" height="15" fill="rgb(205,151,52)"/><text x="24.3012%" y="959.50">d..</text></g><g><title>do_syscall_64 [linux] (552 samples, 2.35%)</title><rect x="24.0171%" y="981" width="2.3539%" height="15" fill="rgb(253,215,39)"/><text x="24.2671%" y="991.50">d..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (562 samples, 2.40%)</title><rect x="23.9829%" y="997" width="2.3966%" height="15" fill="rgb(221,220,41)"/><text x="24.2329%" y="1007.50">en..</text></g><g><title>mio::poll::Poll::poll [http_server_rust-tokio] (743 samples, 3.17%)</title><rect x="23.3390%" y="1045" width="3.1684%" height="15" fill="rgb(218,133,21)"/><text x="23.5890%" y="1055.50">mio..</text></g><g><title>mio::sys::unix::selector::Selector::select [http_server_rust-tokio] (739 samples, 3.15%)</title><rect x="23.3561%" y="1029" width="3.1514%" height="15" fill="rgb(221,193,43)"/><text x="23.6061%" y="1039.50">mio..</text></g><g><title>epoll_wait [libc-2.31.so] (623 samples, 2.66%)</title><rect x="23.8507%" y="1013" width="2.6567%" height="15" fill="rgb(240,128,52)"/><text x="24.1007%" y="1023.50">ep..</text></g><g><title>tokio::io::ready::Ready::from_mio [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="26.5160%" y="1045" width="0.2857%" height="15" fill="rgb(253,114,12)"/><text x="26.7660%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::runtime::io::scheduled_io::ScheduledIo,&amp;alloc::alloc::Global&gt;&gt; [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="26.9424%" y="965" width="0.1151%" height="15" fill="rgb(215,223,47)"/><text x="27.1924%" y="975.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="26.9552%" y="949" width="0.1023%" height="15" fill="rgb(248,225,23)"/><text x="27.2052%" y="959.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::ScheduledIo as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="27.0576%" y="949" width="0.1620%" height="15" fill="rgb(250,108,0)"/><text x="27.3076%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="27.0618%" y="933" width="0.1578%" height="15" fill="rgb(228,208,7)"/><text x="27.3118%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; [http_server_rust-tokio] (82 samples, 0.35%)</title><rect x="26.9211%" y="1013" width="0.3497%" height="15" fill="rgb(244,45,10)"/><text x="27.1711%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (81 samples, 0.35%)</title><rect x="26.9254%" y="997" width="0.3454%" height="15" fill="rgb(207,125,25)"/><text x="27.1754%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow [http_server_rust-tokio] (81 samples, 0.35%)</title><rect x="26.9254%" y="981" width="0.3454%" height="15" fill="rgb(210,195,18)"/><text x="27.1754%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt; [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="27.0576%" y="965" width="0.2132%" height="15" fill="rgb(249,80,12)"/><text x="27.3076%" y="975.50"></text></g><g><title>tokio::runtime::io::driver::Handle::release_pending_registrations [http_server_rust-tokio] (178 samples, 0.76%)</title><rect x="26.8443%" y="1045" width="0.7591%" height="15" fill="rgb(221,65,9)"/><text x="27.0943%" y="1055.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::release [http_server_rust-tokio] (169 samples, 0.72%)</title><rect x="26.8827%" y="1029" width="0.7207%" height="15" fill="rgb(235,49,36)"/><text x="27.1327%" y="1039.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::remove [http_server_rust-tokio] (61 samples, 0.26%)</title><rect x="27.3433%" y="1013" width="0.2601%" height="15" fill="rgb(225,32,20)"/><text x="27.5933%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove [http_server_rust-tokio] (53 samples, 0.23%)</title><rect x="27.3774%" y="997" width="0.2260%" height="15" fill="rgb(215,141,46)"/><text x="27.6274%" y="1007.50"></text></g><g><title>inline core::sync::atomic::AtomicUsize::load [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="27.7953%" y="1013" width="0.1578%" height="15" fill="rgb(250,160,47)"/><text x="28.0453%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="27.7953%" y="997" width="0.1578%" height="15" fill="rgb(216,222,40)"/><text x="28.0453%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update [http_server_rust-tokio] (96 samples, 0.41%)</title><rect x="27.6546%" y="1029" width="0.4094%" height="15" fill="rgb(234,217,39)"/><text x="27.9046%" y="1039.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness::{{closure}} [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="27.9531%" y="1013" width="0.1109%" height="15" fill="rgb(207,178,40)"/><text x="28.2031%" y="1023.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness [http_server_rust-tokio] (107 samples, 0.46%)</title><rect x="27.6119%" y="1045" width="0.4563%" height="15" fill="rgb(221,136,13)"/><text x="27.8619%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="28.3795%" y="1013" width="0.2090%" height="15" fill="rgb(249,199,10)"/><text x="28.6295%" y="1023.50"></text></g><g><title>&lt;tokio::util::linked_list::DrainFilter&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (97 samples, 0.41%)</title><rect x="28.2260%" y="1029" width="0.4136%" height="15" fill="rgb(249,222,13)"/><text x="28.4760%" y="1039.50"></text></g><g><title>core::mem::drop [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="28.6439%" y="1029" width="0.1493%" height="15" fill="rgb(244,185,38)"/><text x="28.8939%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="28.6610%" y="1013" width="0.1322%" height="15" fill="rgb(236,202,9)"/><text x="28.9110%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="29.1130%" y="981" width="0.1109%" height="15" fill="rgb(250,229,37)"/><text x="29.3630%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="29.0661%" y="997" width="0.1791%" height="15" fill="rgb(206,174,23)"/><text x="29.3161%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock [http_server_rust-tokio] (66 samples, 0.28%)</title><rect x="28.9979%" y="1013" width="0.2814%" height="15" fill="rgb(211,33,43)"/><text x="29.2479%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="28.9765%" y="1029" width="0.3070%" height="15" fill="rgb(245,58,50)"/><text x="29.2265%" y="1039.50"></text></g><g><title>tokio::util::wake_list::WakeList::new [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="29.3305%" y="1029" width="0.2985%" height="15" fill="rgb(244,68,36)"/><text x="29.5805%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList::wake_all::DropGuard&gt; [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="29.7186%" y="1013" width="0.1023%" height="15" fill="rgb(232,229,15)"/><text x="29.9686%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule [http_server_rust-tokio] (84 samples, 0.36%)</title><rect x="30.1450%" y="933" width="0.3582%" height="15" fill="rgb(254,30,23)"/><text x="30.3950%" y="943.50"></text></g><g><title>tokio::runtime::context::with_scheduler [http_server_rust-tokio] (76 samples, 0.32%)</title><rect x="30.1791%" y="917" width="0.3241%" height="15" fill="rgb(235,160,14)"/><text x="30.4291%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (62 samples, 0.26%)</title><rect x="30.2388%" y="901" width="0.2644%" height="15" fill="rgb(212,155,44)"/><text x="30.4888%" y="911.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="30.3156%" y="885" width="0.1876%" height="15" fill="rgb(226,2,50)"/><text x="30.5656%" y="895.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="30.3454%" y="869" width="0.1578%" height="15" fill="rgb(234,177,6)"/><text x="30.5954%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::{{closure}} [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="30.3710%" y="853" width="0.1322%" height="15" fill="rgb(217,24,9)"/><text x="30.6210%" y="863.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule [http_server_rust-tokio] (119 samples, 0.51%)</title><rect x="30.0810%" y="965" width="0.5075%" height="15" fill="rgb(220,13,46)"/><text x="30.3310%" y="975.50"></text></g><g><title>tokio::runtime::task::raw::schedule [http_server_rust-tokio] (115 samples, 0.49%)</title><rect x="30.0981%" y="949" width="0.4904%" height="15" fill="rgb(239,221,27)"/><text x="30.3481%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val [http_server_rust-tokio] (196 samples, 0.84%)</title><rect x="29.9872%" y="981" width="0.8358%" height="15" fill="rgb(222,198,25)"/><text x="30.2372%" y="991.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="30.6013%" y="965" width="0.2217%" height="15" fill="rgb(211,99,13)"/><text x="30.8513%" y="975.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="30.6013%" y="949" width="0.2217%" height="15" fill="rgb(232,111,31)"/><text x="30.8513%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val [http_server_rust-tokio] (214 samples, 0.91%)</title><rect x="29.9318%" y="997" width="0.9126%" height="15" fill="rgb(245,82,37)"/><text x="30.1818%" y="1007.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (36 samples, 0.15%)</title><rect x="31.3689%" y="709" width="0.1535%" height="15" fill="rgb(227,149,46)"/><text x="31.6189%" y="719.50"></text></g><g><title>__fget_light [linux] (37 samples, 0.16%)</title><rect x="31.3689%" y="725" width="0.1578%" height="15" fill="rgb(218,36,50)"/><text x="31.6189%" y="735.50"></text></g><g><title>__fdget_pos [linux] (39 samples, 0.17%)</title><rect x="31.3689%" y="741" width="0.1663%" height="15" fill="rgb(226,80,48)"/><text x="31.6189%" y="751.50"></text></g><g><title>__wake_up_common [linux] (26 samples, 0.11%)</title><rect x="31.6375%" y="677" width="0.1109%" height="15" fill="rgb(238,224,15)"/><text x="31.8875%" y="687.50"></text></g><g><title>__wake_up_locked_key [linux] (27 samples, 0.12%)</title><rect x="31.6375%" y="693" width="0.1151%" height="15" fill="rgb(241,136,10)"/><text x="31.8875%" y="703.50"></text></g><g><title>eventfd_write [linux] (44 samples, 0.19%)</title><rect x="31.6375%" y="709" width="0.1876%" height="15" fill="rgb(208,32,45)"/><text x="31.8875%" y="719.50"></text></g><g><title>__vfs_write [linux] (46 samples, 0.20%)</title><rect x="31.6333%" y="725" width="0.1962%" height="15" fill="rgb(207,135,9)"/><text x="31.8833%" y="735.50"></text></g><g><title>__x64_sys_write [linux] (139 samples, 0.59%)</title><rect x="31.3561%" y="773" width="0.5928%" height="15" fill="rgb(206,86,44)"/><text x="31.6061%" y="783.50"></text></g><g><title>ksys_write [linux] (138 samples, 0.59%)</title><rect x="31.3603%" y="757" width="0.5885%" height="15" fill="rgb(245,177,15)"/><text x="31.6103%" y="767.50"></text></g><g><title>vfs_write [linux] (86 samples, 0.37%)</title><rect x="31.5821%" y="741" width="0.3667%" height="15" fill="rgb(206,64,50)"/><text x="31.8321%" y="751.50"></text></g><g><title>do_syscall_64 [linux] (148 samples, 0.63%)</title><rect x="31.3348%" y="789" width="0.6311%" height="15" fill="rgb(234,36,40)"/><text x="31.5848%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (154 samples, 0.66%)</title><rect x="31.3220%" y="805" width="0.6567%" height="15" fill="rgb(213,64,8)"/><text x="31.5720%" y="815.50"></text></g><g><title>inline std::sys::pal::unix::fs::File::write [http_server_rust-tokio] (175 samples, 0.75%)</title><rect x="31.2495%" y="853" width="0.7463%" height="15" fill="rgb(210,75,36)"/><text x="31.4995%" y="863.50"></text></g><g><title>inline std::sys::pal::unix::fd::FileDesc::write [http_server_rust-tokio] (175 samples, 0.75%)</title><rect x="31.2495%" y="837" width="0.7463%" height="15" fill="rgb(229,88,21)"/><text x="31.4995%" y="847.50"></text></g><g><title>write [libpthread-2.31.so] (174 samples, 0.74%)</title><rect x="31.2537%" y="821" width="0.7420%" height="15" fill="rgb(252,204,47)"/><text x="31.5037%" y="831.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write [http_server_rust-tokio] (190 samples, 0.81%)</title><rect x="31.1940%" y="869" width="0.8102%" height="15" fill="rgb(208,77,27)"/><text x="31.4440%" y="879.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark [http_server_rust-tokio] (213 samples, 0.91%)</title><rect x="31.1002%" y="933" width="0.9083%" height="15" fill="rgb(221,76,26)"/><text x="31.3502%" y="943.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark [http_server_rust-tokio] (208 samples, 0.89%)</title><rect x="31.1215%" y="917" width="0.8870%" height="15" fill="rgb(225,139,18)"/><text x="31.3715%" y="927.50"></text></g><g><title>mio::waker::Waker::wake [http_server_rust-tokio] (198 samples, 0.84%)</title><rect x="31.1642%" y="901" width="0.8443%" height="15" fill="rgb(230,137,11)"/><text x="31.4142%" y="911.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake [http_server_rust-tokio] (194 samples, 0.83%)</title><rect x="31.1812%" y="885" width="0.8273%" height="15" fill="rgb(212,28,1)"/><text x="31.4312%" y="895.50"></text></g><g><title>&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake_by_ref [http_server_rust-tokio] (257 samples, 1.10%)</title><rect x="30.9211%" y="965" width="1.0959%" height="15" fill="rgb(248,164,17)"/><text x="31.1711%" y="975.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark [http_server_rust-tokio] (224 samples, 0.96%)</title><rect x="31.0618%" y="949" width="0.9552%" height="15" fill="rgb(222,171,42)"/><text x="31.3118%" y="959.50"></text></g><g><title>&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake [http_server_rust-tokio] (288 samples, 1.23%)</title><rect x="30.8699%" y="981" width="1.2281%" height="15" fill="rgb(243,84,45)"/><text x="31.1199%" y="991.50"></text></g><g><title>inline alloc::sync::data_offset_align [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="32.1535%" y="933" width="0.1237%" height="15" fill="rgb(252,49,23)"/><text x="32.4035%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="32.0981%" y="981" width="0.1834%" height="15" fill="rgb(215,19,7)"/><text x="32.3481%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::from_raw_in [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="32.1493%" y="965" width="0.1322%" height="15" fill="rgb(238,81,41)"/><text x="32.3993%" y="975.50"></text></g><g><title>alloc::sync::data_offset [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="32.1535%" y="949" width="0.1279%" height="15" fill="rgb(210,199,37)"/><text x="32.4035%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake [http_server_rust-tokio] (989 samples, 4.22%)</title><rect x="28.0682%" y="1045" width="4.2175%" height="15" fill="rgb(244,192,49)"/><text x="28.3182%" y="1055.50">tokio..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all [http_server_rust-tokio] (615 samples, 2.62%)</title><rect x="29.6631%" y="1029" width="2.6226%" height="15" fill="rgb(226,211,11)"/><text x="29.9131%" y="1039.50">to..</text></g><g><title>core::task::wake::Waker::wake [http_server_rust-tokio] (576 samples, 2.46%)</title><rect x="29.8294%" y="1013" width="2.4563%" height="15" fill="rgb(236,162,54)"/><text x="30.0794%" y="1023.50">co..</text></g><g><title>tokio::util::wake::wake_arc_raw [http_server_rust-tokio] (338 samples, 1.44%)</title><rect x="30.8443%" y="997" width="1.4414%" height="15" fill="rgb(220,229,9)"/><text x="31.0943%" y="1007.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park [http_server_rust-tokio] (2,279 samples, 9.72%)</title><rect x="22.5757%" y="1077" width="9.7186%" height="15" fill="rgb(250,87,22)"/><text x="22.8257%" y="1087.50">tokio::runtime..</text></g><g><title>tokio::runtime::io::driver::Driver::turn [http_server_rust-tokio] (2,269 samples, 9.68%)</title><rect x="22.6183%" y="1061" width="9.6759%" height="15" fill="rgb(239,43,17)"/><text x="22.8683%" y="1071.50">tokio::runtime..</text></g><g><title>tokio::runtime::driver::IoStack::park [http_server_rust-tokio] (2,424 samples, 10.34%)</title><rect x="21.9829%" y="1125" width="10.3369%" height="15" fill="rgb(231,177,25)"/><text x="22.2329%" y="1135.50">tokio::runtime:..</text></g><g><title>tokio::runtime::process::Driver::park [http_server_rust-tokio] (2,421 samples, 10.32%)</title><rect x="21.9957%" y="1109" width="10.3241%" height="15" fill="rgb(219,179,1)"/><text x="22.2457%" y="1119.50">tokio::runtime:..</text></g><g><title>tokio::runtime::signal::Driver::park [http_server_rust-tokio] (2,288 samples, 9.76%)</title><rect x="22.5629%" y="1093" width="9.7569%" height="15" fill="rgb(238,219,53)"/><text x="22.8129%" y="1103.50">tokio::runtime..</text></g><g><title>tokio::runtime::context::thread_rng_n [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="32.3412%" y="1109" width="0.1791%" height="15" fill="rgb(232,167,36)"/><text x="32.5912%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="32.3582%" y="1093" width="0.1620%" height="15" fill="rgb(244,19,51)"/><text x="32.6082%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="32.4009%" y="1077" width="0.1194%" height="15" fill="rgb(224,6,22)"/><text x="32.6509%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="33.0533%" y="917" width="0.1237%" height="15" fill="rgb(224,145,5)"/><text x="33.3033%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="33.0746%" y="901" width="0.1023%" height="15" fill="rgb(234,130,49)"/><text x="33.3246%" y="911.50"></text></g><g><title>core::mem::drop [http_server_rust-tokio] (48 samples, 0.20%)</title><rect x="32.9765%" y="933" width="0.2047%" height="15" fill="rgb(254,6,2)"/><text x="33.2265%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="33.2239%" y="901" width="0.1493%" height="15" fill="rgb(208,96,46)"/><text x="33.4739%" y="911.50"></text></g><g><title>inline parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="33.2324%" y="885" width="0.1407%" height="15" fill="rgb(239,3,39)"/><text x="33.4824%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="33.1983%" y="933" width="0.1876%" height="15" fill="rgb(233,210,1)"/><text x="33.4483%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="33.2068%" y="917" width="0.1791%" height="15" fill="rgb(244,137,37)"/><text x="33.4568%" y="927.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="33.3859%" y="933" width="0.1237%" height="15" fill="rgb(240,136,2)"/><text x="33.6359%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="33.7441%" y="901" width="0.1748%" height="15" fill="rgb(239,18,37)"/><text x="33.9941%" y="911.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="33.8081%" y="885" width="0.1109%" height="15" fill="rgb(218,185,22)"/><text x="34.0581%" y="895.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration [http_server_rust-tokio] (103 samples, 0.44%)</title><rect x="33.5480%" y="917" width="0.4392%" height="15" fill="rgb(225,218,4)"/><text x="33.7980%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll [http_server_rust-tokio] (136 samples, 0.58%)</title><rect x="33.5181%" y="933" width="0.5800%" height="15" fill="rgb(230,182,32)"/><text x="33.7681%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="34.0981%" y="933" width="0.1194%" height="15" fill="rgb(242,56,43)"/><text x="34.3481%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min [http_server_rust-tokio] (401 samples, 1.71%)</title><rect x="32.5714%" y="1093" width="1.7100%" height="15" fill="rgb(233,99,24)"/><text x="32.8214%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by [http_server_rust-tokio] (391 samples, 1.67%)</title><rect x="32.6141%" y="1077" width="1.6674%" height="15" fill="rgb(234,209,42)"/><text x="32.8641%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce [http_server_rust-tokio] (390 samples, 1.66%)</title><rect x="32.6183%" y="1061" width="1.6631%" height="15" fill="rgb(227,7,12)"/><text x="32.8683%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (388 samples, 1.65%)</title><rect x="32.6269%" y="1045" width="1.6546%" height="15" fill="rgb(245,203,43)"/><text x="32.8769%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map [http_server_rust-tokio] (384 samples, 1.64%)</title><rect x="32.6439%" y="1029" width="1.6375%" height="15" fill="rgb(238,205,33)"/><text x="32.8939%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold [http_server_rust-tokio] (378 samples, 1.61%)</title><rect x="32.6695%" y="1013" width="1.6119%" height="15" fill="rgb(231,56,7)"/><text x="32.9195%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} [http_server_rust-tokio] (344 samples, 1.47%)</title><rect x="32.8145%" y="997" width="1.4670%" height="15" fill="rgb(244,186,29)"/><text x="33.0645%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut [http_server_rust-tokio] (338 samples, 1.44%)</title><rect x="32.8401%" y="981" width="1.4414%" height="15" fill="rgb(234,111,31)"/><text x="33.0901%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::{{closure}} [http_server_rust-tokio] (326 samples, 1.39%)</title><rect x="32.8913%" y="965" width="1.3902%" height="15" fill="rgb(241,149,10)"/><text x="33.1413%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time [http_server_rust-tokio] (326 samples, 1.39%)</title><rect x="32.8913%" y="949" width="1.3902%" height="15" fill="rgb(249,206,44)"/><text x="33.1413%" y="959.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time [http_server_rust-tokio] (438 samples, 1.87%)</title><rect x="32.5245%" y="1109" width="1.8678%" height="15" fill="rgb(251,153,30)"/><text x="32.7745%" y="1119.50">t..</text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="34.4179%" y="1093" width="0.2473%" height="15" fill="rgb(239,152,38)"/><text x="34.6679%" y="1103.50"></text></g><g><title>__clock_gettime [libc-2.31.so] (45 samples, 0.19%)</title><rect x="34.7249%" y="1045" width="0.1919%" height="15" fill="rgb(249,139,47)"/><text x="34.9749%" y="1055.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="34.6994%" y="1061" width="0.2217%" height="15" fill="rgb(244,64,35)"/><text x="34.9494%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process [http_server_rust-tokio] (617 samples, 2.63%)</title><rect x="32.3198%" y="1125" width="2.6311%" height="15" fill="rgb(216,46,15)"/><text x="32.5698%" y="1135.50">to..</text></g><g><title>tokio::runtime::time::source::TimeSource::now [http_server_rust-tokio] (125 samples, 0.53%)</title><rect x="34.4179%" y="1109" width="0.5330%" height="15" fill="rgb(250,74,19)"/><text x="34.6679%" y="1119.50"></text></g><g><title>tokio::time::clock::Clock::now [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="34.6652%" y="1093" width="0.2857%" height="15" fill="rgb(249,42,33)"/><text x="34.9152%" y="1103.50"></text></g><g><title>tokio::time::clock::now [http_server_rust-tokio] (65 samples, 0.28%)</title><rect x="34.6738%" y="1077" width="0.2772%" height="15" fill="rgb(242,149,17)"/><text x="34.9238%" y="1087.50"></text></g><g><title>tokio::runtime::driver::Driver::park [http_server_rust-tokio] (3,243 samples, 13.83%)</title><rect x="21.2068%" y="1189" width="13.8294%" height="15" fill="rgb(244,29,21)"/><text x="21.4568%" y="1199.50">tokio::runtime::drive..</text></g><g><title>tokio::runtime::driver::TimeDriver::park [http_server_rust-tokio] (3,232 samples, 13.78%)</title><rect x="21.2537%" y="1173" width="13.7825%" height="15" fill="rgb(220,130,37)"/><text x="21.5037%" y="1183.50">tokio::runtime::drive..</text></g><g><title>tokio::runtime::time::Driver::park [http_server_rust-tokio] (3,226 samples, 13.76%)</title><rect x="21.2793%" y="1157" width="13.7569%" height="15" fill="rgb(211,67,2)"/><text x="21.5293%" y="1167.50">tokio::runtime::time:..</text></g><g><title>tokio::runtime::time::Driver::park_internal [http_server_rust-tokio] (3,220 samples, 13.73%)</title><rect x="21.3049%" y="1141" width="13.7313%" height="15" fill="rgb(235,68,52)"/><text x="21.5549%" y="1151.50">tokio::runtime::time:..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter [http_server_rust-tokio] (3,359 samples, 14.32%)</title><rect x="20.9552%" y="1221" width="14.3241%" height="15" fill="rgb(246,142,3)"/><text x="21.2052%" y="1231.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::{{closure}} [http_server_rust-tokio] (3,312 samples, 14.12%)</title><rect x="21.1557%" y="1205" width="14.1237%" height="15" fill="rgb(241,25,7)"/><text x="21.4057%" y="1215.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake [http_server_rust-tokio] (57 samples, 0.24%)</title><rect x="35.0362%" y="1189" width="0.2431%" height="15" fill="rgb(242,119,39)"/><text x="35.2862%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park [http_server_rust-tokio] (3,396 samples, 14.48%)</title><rect x="20.8188%" y="1237" width="14.4819%" height="15" fill="rgb(241,98,45)"/><text x="21.0688%" y="1247.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::context::budget [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="35.7271%" y="1157" width="0.1407%" height="15" fill="rgb(254,28,30)"/><text x="35.9771%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="35.7441%" y="1141" width="0.1237%" height="15" fill="rgb(241,142,54)"/><text x="35.9941%" y="1151.50"></text></g><g><title>std::panic::catch_unwind [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="36.1706%" y="1061" width="0.1493%" height="15" fill="rgb(222,85,15)"/><text x="36.4206%" y="1071.50"></text></g><g><title>inline std::panicking::try [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="36.1791%" y="1045" width="0.1407%" height="15" fill="rgb(210,85,47)"/><text x="36.4291%" y="1055.50"></text></g><g><title>__rust_try [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="36.1834%" y="1029" width="0.1365%" height="15" fill="rgb(224,206,25)"/><text x="36.4334%" y="1039.50"></text></g><g><title>std::panicking::try::do_call [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="36.1834%" y="1013" width="0.1365%" height="15" fill="rgb(243,201,19)"/><text x="36.4334%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="36.2090%" y="997" width="0.1109%" height="15" fill="rgb(236,59,4)"/><text x="36.4590%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="36.2175%" y="981" width="0.1023%" height="15" fill="rgb(254,179,45)"/><text x="36.4675%" y="991.50"></text></g><g><title>core::mem::drop [http_server_rust-tokio] (65 samples, 0.28%)</title><rect x="36.3539%" y="1045" width="0.2772%" height="15" fill="rgb(226,14,10)"/><text x="36.6039%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;http_server_rust_tokio::main::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;&gt;&gt; [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="36.3582%" y="1029" width="0.2729%" height="15" fill="rgb(244,27,41)"/><text x="36.6082%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;http_server_rust_tokio::main::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;&gt; [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="36.4648%" y="1013" width="0.1663%" height="15" fill="rgb(235,35,32)"/><text x="36.7148%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="36.5245%" y="997" width="0.1066%" height="15" fill="rgb(218,68,31)"/><text x="36.7745%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc [http_server_rust-tokio] (80 samples, 0.34%)</title><rect x="36.3198%" y="1061" width="0.3412%" height="15" fill="rgb(207,120,37)"/><text x="36.5698%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="37.1557%" y="965" width="0.1023%" height="15" fill="rgb(227,98,0)"/><text x="37.4057%" y="975.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="37.1258%" y="981" width="0.1493%" height="15" fill="rgb(207,7,3)"/><text x="37.3758%" y="991.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove [http_server_rust-tokio] (91 samples, 0.39%)</title><rect x="37.0235%" y="997" width="0.3881%" height="15" fill="rgb(206,98,19)"/><text x="37.2735%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::release [http_server_rust-tokio] (187 samples, 0.80%)</title><rect x="36.7122%" y="1045" width="0.7974%" height="15" fill="rgb(217,5,26)"/><text x="36.9622%" y="1055.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove [http_server_rust-tokio] (183 samples, 0.78%)</title><rect x="36.7292%" y="1029" width="0.7804%" height="15" fill="rgb(235,190,38)"/><text x="36.9792%" y="1039.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove [http_server_rust-tokio] (145 samples, 0.62%)</title><rect x="36.8913%" y="1013" width="0.6183%" height="15" fill="rgb(247,86,24)"/><text x="37.1413%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release [http_server_rust-tokio] (210 samples, 0.90%)</title><rect x="36.6610%" y="1061" width="0.8955%" height="15" fill="rgb(205,101,16)"/><text x="36.9110%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete [http_server_rust-tokio] (374 samples, 1.59%)</title><rect x="36.1066%" y="1077" width="1.5949%" height="15" fill="rgb(246,168,33)"/><text x="36.3566%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="38.4606%" y="901" width="0.1663%" height="15" fill="rgb(231,114,1)"/><text x="38.7106%" y="911.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="38.4904%" y="885" width="0.1365%" height="15" fill="rgb(207,184,53)"/><text x="38.7404%" y="895.50"></text></g><g><title>tokio::runtime::context::set_current_task_id [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="38.5117%" y="869" width="0.1151%" height="15" fill="rgb(224,95,51)"/><text x="38.7617%" y="879.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="39.5437%" y="725" width="0.1279%" height="15" fill="rgb(212,188,45)"/><text x="39.7937%" y="735.50"></text></g><g><title>core::cmp::PartialOrd::gt [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="39.7015%" y="709" width="0.1322%" height="15" fill="rgb(223,154,38)"/><text x="39.9515%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="39.8550%" y="709" width="0.1535%" height="15" fill="rgb(251,22,52)"/><text x="40.1050%" y="719.50"></text></g><g><title>__clock_gettime [libc-2.31.so] (31 samples, 0.13%)</title><rect x="39.8763%" y="693" width="0.1322%" height="15" fill="rgb(229,209,22)"/><text x="40.1263%" y="703.50"></text></g><g><title>hyper::common::date::update::{{closure}} [http_server_rust-tokio] (124 samples, 0.53%)</title><rect x="39.5096%" y="741" width="0.5288%" height="15" fill="rgb(234,138,34)"/><text x="39.7596%" y="751.50"></text></g><g><title>hyper::common::date::CachedDate::check [http_server_rust-tokio] (81 samples, 0.35%)</title><rect x="39.6930%" y="725" width="0.3454%" height="15" fill="rgb(212,95,11)"/><text x="39.9430%" y="735.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date [http_server_rust-tokio] (203 samples, 0.87%)</title><rect x="39.1770%" y="805" width="0.8657%" height="15" fill="rgb(240,179,47)"/><text x="39.4270%" y="815.50"></text></g><g><title>hyper::common::date::update [http_server_rust-tokio] (191 samples, 0.81%)</title><rect x="39.2281%" y="789" width="0.8145%" height="15" fill="rgb(240,163,11)"/><text x="39.4781%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [http_server_rust-tokio] (185 samples, 0.79%)</title><rect x="39.2537%" y="773" width="0.7889%" height="15" fill="rgb(236,37,12)"/><text x="39.5037%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (168 samples, 0.72%)</title><rect x="39.3262%" y="757" width="0.7164%" height="15" fill="rgb(232,164,16)"/><text x="39.5762%" y="767.50"></text></g><g><title>__wake_up_common [linux] (27 samples, 0.12%)</title><rect x="40.3710%" y="565" width="0.1151%" height="15" fill="rgb(244,205,15)"/><text x="40.6210%" y="575.50"></text></g><g><title>__wake_up_common_lock [linux] (41 samples, 0.17%)</title><rect x="40.3582%" y="581" width="0.1748%" height="15" fill="rgb(223,117,47)"/><text x="40.6082%" y="591.50"></text></g><g><title>__wake_up [linux] (43 samples, 0.18%)</title><rect x="40.3539%" y="597" width="0.1834%" height="15" fill="rgb(244,107,35)"/><text x="40.6039%" y="607.50"></text></g><g><title>sock_def_wakeup [linux] (44 samples, 0.19%)</title><rect x="40.3539%" y="613" width="0.1876%" height="15" fill="rgb(205,140,8)"/><text x="40.6039%" y="623.50"></text></g><g><title>__kmalloc_reserve.isra.0 [linux] (31 samples, 0.13%)</title><rect x="40.6354%" y="565" width="0.1322%" height="15" fill="rgb(228,84,46)"/><text x="40.8854%" y="575.50"></text></g><g><title>__alloc_skb [linux] (59 samples, 0.25%)</title><rect x="40.6311%" y="581" width="0.2516%" height="15" fill="rgb(254,188,9)"/><text x="40.8811%" y="591.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (70 samples, 0.30%)</title><rect x="41.4712%" y="309" width="0.2985%" height="15" fill="rgb(206,112,54)"/><text x="41.7212%" y="319.50"></text></g><g><title>virtqueue_notify [linux] (76 samples, 0.32%)</title><rect x="41.4712%" y="341" width="0.3241%" height="15" fill="rgb(216,84,49)"/><text x="41.7212%" y="351.50"></text></g><g><title>iowrite16 [linux] (76 samples, 0.32%)</title><rect x="41.4712%" y="325" width="0.3241%" height="15" fill="rgb(214,194,35)"/><text x="41.7212%" y="335.50"></text></g><g><title>start_xmit [linux:virtio_net] (117 samples, 0.50%)</title><rect x="41.3006%" y="357" width="0.4989%" height="15" fill="rgb(249,28,3)"/><text x="41.5506%" y="367.50"></text></g><g><title>dev_hard_start_xmit [linux] (137 samples, 0.58%)</title><rect x="41.2537%" y="373" width="0.5842%" height="15" fill="rgb(222,56,52)"/><text x="41.5037%" y="383.50"></text></g><g><title>__dev_queue_xmit [linux] (162 samples, 0.69%)</title><rect x="41.2196%" y="405" width="0.6908%" height="15" fill="rgb(245,217,50)"/><text x="41.4696%" y="415.50"></text></g><g><title>sch_direct_xmit [linux] (155 samples, 0.66%)</title><rect x="41.2495%" y="389" width="0.6610%" height="15" fill="rgb(213,201,24)"/><text x="41.4995%" y="399.50"></text></g><g><title>dev_queue_xmit [linux] (163 samples, 0.70%)</title><rect x="41.2196%" y="421" width="0.6951%" height="15" fill="rgb(248,116,28)"/><text x="41.4696%" y="431.50"></text></g><g><title>ip_finish_output2 [linux] (191 samples, 0.81%)</title><rect x="41.1045%" y="437" width="0.8145%" height="15" fill="rgb(219,72,43)"/><text x="41.3545%" y="447.50"></text></g><g><title>__ip_finish_output [linux] (199 samples, 0.85%)</title><rect x="41.0874%" y="453" width="0.8486%" height="15" fill="rgb(209,138,14)"/><text x="41.3374%" y="463.50"></text></g><g><title>ip_output [linux] (204 samples, 0.87%)</title><rect x="41.0746%" y="485" width="0.8699%" height="15" fill="rgb(222,18,33)"/><text x="41.3246%" y="495.50"></text></g><g><title>ip_finish_output [linux] (202 samples, 0.86%)</title><rect x="41.0832%" y="469" width="0.8614%" height="15" fill="rgb(213,199,7)"/><text x="41.3332%" y="479.50"></text></g><g><title>ip_local_out [linux] (226 samples, 0.96%)</title><rect x="41.0021%" y="501" width="0.9638%" height="15" fill="rgb(250,110,10)"/><text x="41.2521%" y="511.50"></text></g><g><title>__ip_queue_xmit [linux] (231 samples, 0.99%)</title><rect x="40.9851%" y="517" width="0.9851%" height="15" fill="rgb(248,123,6)"/><text x="41.2351%" y="527.50"></text></g><g><title>ip_queue_xmit [linux] (232 samples, 0.99%)</title><rect x="40.9851%" y="533" width="0.9893%" height="15" fill="rgb(206,91,31)"/><text x="41.2351%" y="543.50"></text></g><g><title>__tcp_transmit_skb [linux] (251 samples, 1.07%)</title><rect x="40.9467%" y="549" width="1.0704%" height="15" fill="rgb(211,154,13)"/><text x="41.1967%" y="559.50"></text></g><g><title>__tcp_push_pending_frames [linux] (321 samples, 1.37%)</title><rect x="40.8870%" y="581" width="1.3689%" height="15" fill="rgb(225,148,7)"/><text x="41.1370%" y="591.50"></text></g><g><title>tcp_write_xmit [linux] (315 samples, 1.34%)</title><rect x="40.9126%" y="565" width="1.3433%" height="15" fill="rgb(220,160,43)"/><text x="41.1626%" y="575.50"></text></g><g><title>tcp_send_fin [linux] (396 samples, 1.69%)</title><rect x="40.5970%" y="597" width="1.6887%" height="15" fill="rgb(213,52,39)"/><text x="40.8470%" y="607.50"></text></g><g><title>inet_shutdown [linux] (474 samples, 2.02%)</title><rect x="40.2729%" y="629" width="2.0213%" height="15" fill="rgb(243,137,7)"/><text x="40.5229%" y="639.50">i..</text></g><g><title>tcp_shutdown [linux] (407 samples, 1.74%)</title><rect x="40.5586%" y="613" width="1.7356%" height="15" fill="rgb(230,79,13)"/><text x="40.8086%" y="623.50"></text></g><g><title>__sys_shutdown [linux] (523 samples, 2.23%)</title><rect x="40.2559%" y="645" width="2.2303%" height="15" fill="rgb(247,105,23)"/><text x="40.5059%" y="655.50">_..</text></g><g><title>__x64_sys_shutdown [linux] (533 samples, 2.27%)</title><rect x="40.2559%" y="661" width="2.2729%" height="15" fill="rgb(223,179,41)"/><text x="40.5059%" y="671.50">_..</text></g><g><title>do_syscall_64 [linux] (539 samples, 2.30%)</title><rect x="40.2473%" y="677" width="2.2985%" height="15" fill="rgb(218,9,34)"/><text x="40.4973%" y="687.50">d..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (553 samples, 2.36%)</title><rect x="40.2175%" y="693" width="2.3582%" height="15" fill="rgb(222,106,8)"/><text x="40.4675%" y="703.50">e..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown [http_server_rust-tokio] (588 samples, 2.51%)</title><rect x="40.0938%" y="789" width="2.5075%" height="15" fill="rgb(211,220,0)"/><text x="40.3438%" y="799.50">&lt;t..</text></g><g><title>tokio::net::tcp::stream::TcpStream::shutdown_std [http_server_rust-tokio] (579 samples, 2.47%)</title><rect x="40.1322%" y="773" width="2.4691%" height="15" fill="rgb(229,52,16)"/><text x="40.3822%" y="783.50">to..</text></g><g><title>mio::net::tcp::stream::TcpStream::shutdown [http_server_rust-tokio] (573 samples, 2.44%)</title><rect x="40.1578%" y="757" width="2.4435%" height="15" fill="rgb(212,155,18)"/><text x="40.4078%" y="767.50">mi..</text></g><g><title>std::net::tcp::TcpStream::shutdown [http_server_rust-tokio] (570 samples, 2.43%)</title><rect x="40.1706%" y="741" width="2.4307%" height="15" fill="rgb(242,21,14)"/><text x="40.4206%" y="751.50">st..</text></g><g><title>inline std::sys::pal::unix::net::Socket::shutdown [http_server_rust-tokio] (567 samples, 2.42%)</title><rect x="40.1834%" y="725" width="2.4179%" height="15" fill="rgb(222,19,48)"/><text x="40.4334%" y="735.50">in..</text></g><g><title>shutdown [libc-2.31.so] (567 samples, 2.42%)</title><rect x="40.1834%" y="709" width="2.4179%" height="15" fill="rgb(232,45,27)"/><text x="40.4334%" y="719.50">sh..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_shutdown [http_server_rust-tokio] (606 samples, 2.58%)</title><rect x="40.0682%" y="805" width="2.5842%" height="15" fill="rgb(249,103,42)"/><text x="40.3182%" y="815.50">hy..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="43.1557%" y="757" width="0.1279%" height="15" fill="rgb(246,81,33)"/><text x="43.4057%" y="767.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="43.5522%" y="597" width="0.1237%" height="15" fill="rgb(252,33,42)"/><text x="43.8022%" y="607.50"></text></g><g><title>bytes::bytes::release_shared [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="43.5522%" y="581" width="0.1237%" height="15" fill="rgb(209,212,41)"/><text x="43.8022%" y="591.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="43.5394%" y="613" width="0.1407%" height="15" fill="rgb(207,154,6)"/><text x="43.7894%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="43.5267%" y="645" width="0.1578%" height="15" fill="rgb(223,64,47)"/><text x="43.7767%" y="655.50"></text></g><g><title>bytes::bytes::shared_drop [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="43.5394%" y="629" width="0.1450%" height="15" fill="rgb(211,161,38)"/><text x="43.7894%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt; [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="43.5011%" y="693" width="0.1876%" height="15" fill="rgb(219,138,40)"/><text x="43.7511%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::BufKind&lt;bytes::bytes::Bytes&gt;&gt; [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="43.5096%" y="677" width="0.1791%" height="15" fill="rgb(241,228,46)"/><text x="43.7596%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="43.5096%" y="661" width="0.1791%" height="15" fill="rgb(223,209,38)"/><text x="43.7596%" y="671.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::advance [http_server_rust-tokio] (69 samples, 0.29%)</title><rect x="43.3987%" y="725" width="0.2942%" height="15" fill="rgb(236,164,45)"/><text x="43.6487%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="43.4925%" y="709" width="0.2004%" height="15" fill="rgb(231,15,5)"/><text x="43.7425%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance [http_server_rust-tokio] (83 samples, 0.35%)</title><rect x="43.3945%" y="741" width="0.3539%" height="15" fill="rgb(252,35,15)"/><text x="43.6445%" y="751.50"></text></g><g><title>&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="43.8209%" y="709" width="0.1066%" height="15" fill="rgb(248,181,18)"/><text x="44.0709%" y="719.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="43.7527%" y="725" width="0.1791%" height="15" fill="rgb(233,39,42)"/><text x="44.0027%" y="735.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="43.7484%" y="741" width="0.2900%" height="15" fill="rgb(238,110,33)"/><text x="43.9984%" y="751.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="44.0426%" y="725" width="0.2217%" height="15" fill="rgb(233,195,10)"/><text x="44.2926%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="44.1279%" y="709" width="0.1365%" height="15" fill="rgb(254,105,3)"/><text x="44.3779%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="44.1365%" y="693" width="0.1279%" height="15" fill="rgb(221,225,9)"/><text x="44.3865%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="44.1407%" y="677" width="0.1237%" height="15" fill="rgb(224,227,45)"/><text x="44.3907%" y="687.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="44.1493%" y="661" width="0.1151%" height="15" fill="rgb(229,198,43)"/><text x="44.3993%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="44.1578%" y="645" width="0.1066%" height="15" fill="rgb(206,209,35)"/><text x="44.4078%" y="655.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining [http_server_rust-tokio] (62 samples, 0.26%)</title><rect x="44.0384%" y="741" width="0.2644%" height="15" fill="rgb(245,195,53)"/><text x="44.2884%" y="751.50"></text></g><g><title>_copy_from_iter_full [linux] (32 samples, 0.14%)</title><rect x="45.4243%" y="325" width="0.1365%" height="15" fill="rgb(240,92,26)"/><text x="45.6743%" y="335.50"></text></g><g><title>__kmalloc_node_track_caller [linux] (29 samples, 0.12%)</title><rect x="45.7058%" y="277" width="0.1237%" height="15" fill="rgb(207,40,23)"/><text x="45.9558%" y="287.50"></text></g><g><title>__kmalloc_reserve.isra.0 [linux] (44 samples, 0.19%)</title><rect x="45.7058%" y="293" width="0.1876%" height="15" fill="rgb(223,111,35)"/><text x="45.9558%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (26 samples, 0.11%)</title><rect x="45.9104%" y="277" width="0.1109%" height="15" fill="rgb(229,147,28)"/><text x="46.1604%" y="287.50"></text></g><g><title>kmem_cache_alloc_node [linux] (48 samples, 0.20%)</title><rect x="45.9104%" y="293" width="0.2047%" height="15" fill="rgb(211,29,28)"/><text x="46.1604%" y="303.50"></text></g><g><title>__alloc_skb [linux] (115 samples, 0.49%)</title><rect x="45.6930%" y="309" width="0.4904%" height="15" fill="rgb(228,72,33)"/><text x="45.9430%" y="319.50"></text></g><g><title>sk_stream_alloc_skb [linux] (121 samples, 0.52%)</title><rect x="45.6802%" y="325" width="0.5160%" height="15" fill="rgb(205,214,31)"/><text x="45.9302%" y="335.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (27 samples, 0.12%)</title><rect x="46.3838%" y="261" width="0.1151%" height="15" fill="rgb(224,111,15)"/><text x="46.6338%" y="271.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (36 samples, 0.15%)</title><rect x="46.7420%" y="149" width="0.1535%" height="15" fill="rgb(253,21,26)"/><text x="46.9920%" y="159.50"></text></g><g><title>ipt_do_table [linux:ip_tables] (37 samples, 0.16%)</title><rect x="46.7420%" y="165" width="0.1578%" height="15" fill="rgb(245,139,43)"/><text x="46.9920%" y="175.50"></text></g><g><title>iptable_filter_hook [linux:iptable_filter] (38 samples, 0.16%)</title><rect x="46.7420%" y="181" width="0.1620%" height="15" fill="rgb(252,170,7)"/><text x="46.9920%" y="191.50"></text></g><g><title>__ip_local_out [linux] (66 samples, 0.28%)</title><rect x="46.6311%" y="213" width="0.2814%" height="15" fill="rgb(231,118,14)"/><text x="46.8811%" y="223.50"></text></g><g><title>nf_hook_slow [linux] (47 samples, 0.20%)</title><rect x="46.7122%" y="197" width="0.2004%" height="15" fill="rgb(238,83,0)"/><text x="46.9622%" y="207.50"></text></g><g><title>__local_bh_enable_ip [linux] (26 samples, 0.11%)</title><rect x="47.1386%" y="149" width="0.1109%" height="15" fill="rgb(221,39,39)"/><text x="47.3886%" y="159.50"></text></g><g><title>do_softirq.part.0 [linux] (26 samples, 0.11%)</title><rect x="47.1386%" y="133" width="0.1109%" height="15" fill="rgb(222,119,46)"/><text x="47.3886%" y="143.50"></text></g><g><title>do_softirq_own_stack [linux] (26 samples, 0.11%)</title><rect x="47.1386%" y="117" width="0.1109%" height="15" fill="rgb(222,165,49)"/><text x="47.3886%" y="127.50"></text></g><g><title>__softirqentry_text_start [linux] (26 samples, 0.11%)</title><rect x="47.1386%" y="101" width="0.1109%" height="15" fill="rgb(219,113,52)"/><text x="47.3886%" y="111.50"></text></g><g><title>free_old_xmit_skbs [linux:virtio_net] (34 samples, 0.14%)</title><rect x="47.4797%" y="69" width="0.1450%" height="15" fill="rgb(214,7,15)"/><text x="47.7297%" y="79.50"></text></g><g><title>virtqueue_add_outbuf [linux] (35 samples, 0.15%)</title><rect x="47.7100%" y="69" width="0.1493%" height="15" fill="rgb(235,32,4)"/><text x="47.9600%" y="79.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (112 samples, 0.48%)</title><rect x="47.8891%" y="37" width="0.4776%" height="15" fill="rgb(238,90,54)"/><text x="48.1391%" y="47.50"></text></g><g><title>virtqueue_notify [linux] (118 samples, 0.50%)</title><rect x="47.8891%" y="69" width="0.5032%" height="15" fill="rgb(213,208,19)"/><text x="48.1391%" y="79.50"></text></g><g><title>iowrite16 [linux] (118 samples, 0.50%)</title><rect x="47.8891%" y="53" width="0.5032%" height="15" fill="rgb(233,156,4)"/><text x="48.1391%" y="63.50"></text></g><g><title>start_xmit [linux:virtio_net] (233 samples, 0.99%)</title><rect x="47.4030%" y="85" width="0.9936%" height="15" fill="rgb(207,194,5)"/><text x="47.6530%" y="95.50"></text></g><g><title>dev_hard_start_xmit [linux] (251 samples, 1.07%)</title><rect x="47.3689%" y="101" width="1.0704%" height="15" fill="rgb(206,111,30)"/><text x="47.6189%" y="111.50"></text></g><g><title>sch_direct_xmit [linux] (277 samples, 1.18%)</title><rect x="47.3475%" y="117" width="1.1812%" height="15" fill="rgb(243,70,54)"/><text x="47.5975%" y="127.50"></text></g><g><title>__dev_queue_xmit [linux] (302 samples, 1.29%)</title><rect x="47.2495%" y="133" width="1.2878%" height="15" fill="rgb(242,28,8)"/><text x="47.4995%" y="143.50"></text></g><g><title>ip_finish_output2 [linux] (349 samples, 1.49%)</title><rect x="47.0618%" y="165" width="1.4883%" height="15" fill="rgb(219,106,18)"/><text x="47.3118%" y="175.50"></text></g><g><title>dev_queue_xmit [linux] (305 samples, 1.30%)</title><rect x="47.2495%" y="149" width="1.3006%" height="15" fill="rgb(244,222,10)"/><text x="47.4995%" y="159.50"></text></g><g><title>ip_output [linux] (384 samples, 1.64%)</title><rect x="46.9168%" y="213" width="1.6375%" height="15" fill="rgb(236,179,52)"/><text x="47.1668%" y="223.50"></text></g><g><title>ip_finish_output [linux] (374 samples, 1.59%)</title><rect x="46.9595%" y="197" width="1.5949%" height="15" fill="rgb(213,23,39)"/><text x="47.2095%" y="207.50"></text></g><g><title>__ip_finish_output [linux] (359 samples, 1.53%)</title><rect x="47.0235%" y="181" width="1.5309%" height="15" fill="rgb(238,48,10)"/><text x="47.2735%" y="191.50"></text></g><g><title>ip_local_out [linux] (462 samples, 1.97%)</title><rect x="46.6311%" y="229" width="1.9701%" height="15" fill="rgb(251,196,23)"/><text x="46.8811%" y="239.50">i..</text></g><g><title>__ip_queue_xmit [linux] (480 samples, 2.05%)</title><rect x="46.5629%" y="245" width="2.0469%" height="15" fill="rgb(250,152,24)"/><text x="46.8129%" y="255.50">_..</text></g><g><title>ip_queue_xmit [linux] (484 samples, 2.06%)</title><rect x="46.5629%" y="261" width="2.0640%" height="15" fill="rgb(209,150,17)"/><text x="46.8129%" y="271.50">i..</text></g><g><title>__tcp_transmit_skb [linux] (543 samples, 2.32%)</title><rect x="46.3838%" y="277" width="2.3156%" height="15" fill="rgb(234,202,34)"/><text x="46.6338%" y="287.50">_..</text></g><g><title>tcp_event_new_data_sent [linux] (58 samples, 0.25%)</title><rect x="48.8273%" y="277" width="0.2473%" height="15" fill="rgb(253,148,53)"/><text x="49.0773%" y="287.50"></text></g><g><title>tcp_rearm_rto [linux] (52 samples, 0.22%)</title><rect x="48.8529%" y="261" width="0.2217%" height="15" fill="rgb(218,129,16)"/><text x="49.1029%" y="271.50"></text></g><g><title>sk_reset_timer [linux] (47 samples, 0.20%)</title><rect x="48.8742%" y="245" width="0.2004%" height="15" fill="rgb(216,85,19)"/><text x="49.1242%" y="255.50"></text></g><g><title>mod_timer [linux] (35 samples, 0.15%)</title><rect x="48.9254%" y="229" width="0.1493%" height="15" fill="rgb(235,228,7)"/><text x="49.1754%" y="239.50"></text></g><g><title>tcp_push [linux] (694 samples, 2.96%)</title><rect x="46.2431%" y="325" width="2.9595%" height="15" fill="rgb(245,175,0)"/><text x="46.4931%" y="335.50">tcp..</text></g><g><title>__tcp_push_pending_frames [linux] (694 samples, 2.96%)</title><rect x="46.2431%" y="309" width="2.9595%" height="15" fill="rgb(208,168,36)"/><text x="46.4931%" y="319.50">__t..</text></g><g><title>tcp_write_xmit [linux] (677 samples, 2.89%)</title><rect x="46.3156%" y="293" width="2.8870%" height="15" fill="rgb(246,171,24)"/><text x="46.5656%" y="303.50">tc..</text></g><g><title>tcp_send_mss [linux] (33 samples, 0.14%)</title><rect x="49.2154%" y="325" width="0.1407%" height="15" fill="rgb(215,142,24)"/><text x="49.4654%" y="335.50"></text></g><g><title>tcp_sendmsg_locked [linux] (959 samples, 4.09%)</title><rect x="45.2751%" y="341" width="4.0896%" height="15" fill="rgb(250,187,7)"/><text x="45.5251%" y="351.50">tcp_..</text></g><g><title>tcp_sendmsg [linux] (1,002 samples, 4.27%)</title><rect x="45.1002%" y="357" width="4.2729%" height="15" fill="rgb(228,66,33)"/><text x="45.3502%" y="367.50">tcp_s..</text></g><g><title>inet_sendmsg [linux] (1,017 samples, 4.34%)</title><rect x="45.0533%" y="373" width="4.3369%" height="15" fill="rgb(234,215,21)"/><text x="45.3033%" y="383.50">inet_..</text></g><g><title>__sock_sendmsg [linux] (1,058 samples, 4.51%)</title><rect x="44.9552%" y="389" width="4.5117%" height="15" fill="rgb(222,191,20)"/><text x="45.2052%" y="399.50">__soc..</text></g><g><title>do_iter_readv_writev [linux] (1,078 samples, 4.60%)</title><rect x="44.9041%" y="421" width="4.5970%" height="15" fill="rgb(245,79,54)"/><text x="45.1541%" y="431.50">do_it..</text></g><g><title>sock_write_iter [linux] (1,071 samples, 4.57%)</title><rect x="44.9339%" y="405" width="4.5672%" height="15" fill="rgb(240,10,37)"/><text x="45.1839%" y="415.50">sock_..</text></g><g><title>rw_verify_area [linux] (38 samples, 0.16%)</title><rect x="49.5565%" y="421" width="0.1620%" height="15" fill="rgb(214,192,32)"/><text x="49.8065%" y="431.50"></text></g><g><title>security_file_permission [linux] (28 samples, 0.12%)</title><rect x="49.5991%" y="405" width="0.1194%" height="15" fill="rgb(209,36,54)"/><text x="49.8491%" y="415.50"></text></g><g><title>do_iter_write [linux] (1,146 samples, 4.89%)</title><rect x="44.8699%" y="437" width="4.8870%" height="15" fill="rgb(220,10,11)"/><text x="45.1199%" y="447.50">do_ite..</text></g><g><title>import_iovec [linux] (33 samples, 0.14%)</title><rect x="49.7569%" y="437" width="0.1407%" height="15" fill="rgb(221,106,17)"/><text x="50.0069%" y="447.50"></text></g><g><title>do_writev [linux] (1,231 samples, 5.25%)</title><rect x="44.6823%" y="469" width="5.2495%" height="15" fill="rgb(251,142,44)"/><text x="44.9323%" y="479.50">do_wri..</text></g><g><title>vfs_writev [linux] (1,197 samples, 5.10%)</title><rect x="44.8273%" y="453" width="5.1045%" height="15" fill="rgb(238,13,15)"/><text x="45.0773%" y="463.50">vfs_wr..</text></g><g><title>__x64_sys_writev [linux] (1,238 samples, 5.28%)</title><rect x="44.6652%" y="485" width="5.2793%" height="15" fill="rgb(208,107,27)"/><text x="44.9152%" y="495.50">__x64_..</text></g><g><title>do_syscall_64 [linux] (1,256 samples, 5.36%)</title><rect x="44.6183%" y="501" width="5.3561%" height="15" fill="rgb(205,136,37)"/><text x="44.8683%" y="511.50">do_sysc..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (1,270 samples, 5.42%)</title><rect x="44.5629%" y="517" width="5.4158%" height="15" fill="rgb(250,205,27)"/><text x="44.8129%" y="527.50">entry_S..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored [http_server_rust-tokio] (1,326 samples, 5.65%)</title><rect x="44.4307%" y="645" width="5.6546%" height="15" fill="rgb(210,80,43)"/><text x="44.6807%" y="655.50">&lt;&amp;mio::..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io [http_server_rust-tokio] (1,320 samples, 5.63%)</title><rect x="44.4563%" y="629" width="5.6290%" height="15" fill="rgb(247,160,36)"/><text x="44.7063%" y="639.50">mio::io..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io [http_server_rust-tokio] (1,315 samples, 5.61%)</title><rect x="44.4776%" y="613" width="5.6077%" height="15" fill="rgb(234,13,49)"/><text x="44.7276%" y="623.50">mio::sy..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} [http_server_rust-tokio] (1,309 samples, 5.58%)</title><rect x="44.5032%" y="597" width="5.5821%" height="15" fill="rgb(234,122,0)"/><text x="44.7532%" y="607.50">&lt;&amp;mio::..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored [http_server_rust-tokio] (1,308 samples, 5.58%)</title><rect x="44.5075%" y="581" width="5.5778%" height="15" fill="rgb(207,146,38)"/><text x="44.7575%" y="591.50">&lt;&amp;std::..</text></g><g><title>inline std::sys::pal::unix::fs::File::write_vectored [http_server_rust-tokio] (1,305 samples, 5.57%)</title><rect x="44.5203%" y="565" width="5.5650%" height="15" fill="rgb(207,177,25)"/><text x="44.7703%" y="575.50">inline ..</text></g><g><title>inline std::sys::pal::unix::fd::FileDesc::write_vectored [http_server_rust-tokio] (1,305 samples, 5.57%)</title><rect x="44.5203%" y="549" width="5.5650%" height="15" fill="rgb(211,178,42)"/><text x="44.7703%" y="559.50">inline ..</text></g><g><title>writev [libc-2.31.so] (1,305 samples, 5.57%)</title><rect x="44.5203%" y="533" width="5.5650%" height="15" fill="rgb(230,69,54)"/><text x="44.7703%" y="543.50">writev ..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} [http_server_rust-tokio] (1,330 samples, 5.67%)</title><rect x="44.4222%" y="661" width="5.6716%" height="15" fill="rgb(214,135,41)"/><text x="44.6722%" y="671.50">tokio::..</text></g><g><title>tokio::runtime::coop::poll_proceed [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="50.1279%" y="645" width="0.1194%" height="15" fill="rgb(237,67,25)"/><text x="50.3779%" y="655.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored [http_server_rust-tokio] (1,411 samples, 6.02%)</title><rect x="44.3198%" y="741" width="6.0171%" height="15" fill="rgb(222,189,50)"/><text x="44.5698%" y="751.50">&lt;tokio::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv [http_server_rust-tokio] (1,399 samples, 5.97%)</title><rect x="44.3710%" y="725" width="5.9659%" height="15" fill="rgb(245,148,34)"/><text x="44.6210%" y="735.50">tokio::n..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored [http_server_rust-tokio] (1,396 samples, 5.95%)</title><rect x="44.3838%" y="709" width="5.9531%" height="15" fill="rgb(222,29,6)"/><text x="44.6338%" y="719.50">tokio::i..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io [http_server_rust-tokio] (1,395 samples, 5.95%)</title><rect x="44.3881%" y="693" width="5.9488%" height="15" fill="rgb(221,189,43)"/><text x="44.6381%" y="703.50">tokio::r..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io [http_server_rust-tokio] (1,392 samples, 5.94%)</title><rect x="44.4009%" y="677" width="5.9360%" height="15" fill="rgb(207,36,27)"/><text x="44.6509%" y="687.50">tokio::r..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready [http_server_rust-tokio] (57 samples, 0.24%)</title><rect x="50.0938%" y="661" width="0.2431%" height="15" fill="rgb(217,90,24)"/><text x="50.3438%" y="671.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush [http_server_rust-tokio] (1,668 samples, 7.11%)</title><rect x="43.2836%" y="757" width="7.1130%" height="15" fill="rgb(224,66,35)"/><text x="43.5336%" y="767.50">hyper::pro..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush [http_server_rust-tokio] (1,739 samples, 7.42%)</title><rect x="43.0277%" y="789" width="7.4158%" height="15" fill="rgb(221,13,50)"/><text x="43.2777%" y="799.50">hyper::pro..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush [http_server_rust-tokio] (1,731 samples, 7.38%)</title><rect x="43.0618%" y="773" width="7.3817%" height="15" fill="rgb(236,68,49)"/><text x="43.3118%" y="783.50">hyper::pro..</text></g><g><title>&lt;futures_channel::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="50.7676%" y="725" width="0.3070%" height="15" fill="rgb(229,146,28)"/><text x="51.0176%" y="735.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::drop_tx [http_server_rust-tokio] (57 samples, 0.24%)</title><rect x="50.8316%" y="709" width="0.2431%" height="15" fill="rgb(225,31,38)"/><text x="51.0816%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::oneshot::Sender&lt;http::header::map::HeaderMap&gt;&gt;&gt; [http_server_rust-tokio] (89 samples, 0.38%)</title><rect x="50.7249%" y="757" width="0.3795%" height="15" fill="rgb(250,208,3)"/><text x="50.9749%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;http::header::map::HeaderMap&gt;&gt; [http_server_rust-tokio] (85 samples, 0.36%)</title><rect x="50.7420%" y="741" width="0.3625%" height="15" fill="rgb(246,54,23)"/><text x="50.9920%" y="751.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="51.1855%" y="709" width="0.1493%" height="15" fill="rgb(243,76,11)"/><text x="51.4355%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="51.1045%" y="757" width="0.2857%" height="15" fill="rgb(245,21,50)"/><text x="51.3545%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt;&gt; [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="51.1173%" y="741" width="0.2729%" height="15" fill="rgb(228,9,43)"/><text x="51.3673%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; [http_server_rust-tokio] (54 samples, 0.23%)</title><rect x="51.1599%" y="725" width="0.2303%" height="15" fill="rgb(208,100,47)"/><text x="51.4099%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Sender&gt; [http_server_rust-tokio] (178 samples, 0.76%)</title><rect x="50.6908%" y="773" width="0.7591%" height="15" fill="rgb(232,26,8)"/><text x="50.9408%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="51.5181%" y="757" width="0.1535%" height="15" fill="rgb(216,166,38)"/><text x="51.7681%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="51.7697%" y="709" width="0.1450%" height="15" fill="rgb(251,202,51)"/><text x="52.0197%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="51.7910%" y="693" width="0.1237%" height="15" fill="rgb(254,216,34)"/><text x="52.0410%" y="703.50"></text></g><g><title>hyper::body::body::Sender::poll_want [http_server_rust-tokio] (90 samples, 0.38%)</title><rect x="51.6716%" y="757" width="0.3838%" height="15" fill="rgb(251,32,27)"/><text x="51.9216%" y="767.50"></text></g><g><title>hyper::common::watch::Receiver::load [http_server_rust-tokio] (84 samples, 0.36%)</title><rect x="51.6972%" y="741" width="0.3582%" height="15" fill="rgb(208,127,28)"/><text x="51.9472%" y="751.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="51.7484%" y="725" width="0.3070%" height="15" fill="rgb(224,137,22)"/><text x="51.9984%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="51.9232%" y="709" width="0.1322%" height="15" fill="rgb(254,70,32)"/><text x="52.1732%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="51.9318%" y="693" width="0.1237%" height="15" fill="rgb(229,75,37)"/><text x="52.1818%" y="703.50"></text></g><g><title>hyper::body::body::Sender::poll_ready [http_server_rust-tokio] (143 samples, 0.61%)</title><rect x="51.4499%" y="773" width="0.6098%" height="15" fill="rgb(252,64,23)"/><text x="51.6999%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::inc_num_messages [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="52.1620%" y="709" width="0.1109%" height="15" fill="rgb(232,162,48)"/><text x="52.4120%" y="719.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="52.4222%" y="693" width="0.2217%" height="15" fill="rgb(246,160,12)"/><text x="52.6722%" y="703.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::park [http_server_rust-tokio] (128 samples, 0.55%)</title><rect x="52.2729%" y="709" width="0.5458%" height="15" fill="rgb(247,166,0)"/><text x="52.5229%" y="719.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="52.6525%" y="693" width="0.1663%" height="15" fill="rgb(249,219,21)"/><text x="52.9025%" y="703.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="52.8316%" y="693" width="0.1279%" height="15" fill="rgb(205,209,3)"/><text x="53.0816%" y="703.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b [http_server_rust-tokio] (211 samples, 0.90%)</title><rect x="52.1194%" y="725" width="0.8998%" height="15" fill="rgb(243,44,1)"/><text x="52.3694%" y="735.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="52.8188%" y="709" width="0.2004%" height="15" fill="rgb(206,159,16)"/><text x="53.0688%" y="719.50"></text></g><g><title>hyper::body::body::Sender::try_send_data [http_server_rust-tokio] (226 samples, 0.96%)</title><rect x="52.0597%" y="773" width="0.9638%" height="15" fill="rgb(244,77,30)"/><text x="52.3097%" y="783.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send [http_server_rust-tokio] (218 samples, 0.93%)</title><rect x="52.0938%" y="757" width="0.9296%" height="15" fill="rgb(218,69,12)"/><text x="52.3438%" y="767.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send [http_server_rust-tokio] (216 samples, 0.92%)</title><rect x="52.1023%" y="741" width="0.9211%" height="15" fill="rgb(212,87,7)"/><text x="52.3523%" y="751.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_read_head [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="53.0362%" y="773" width="0.1109%" height="15" fill="rgb(245,114,25)"/><text x="53.2862%" y="783.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="53.5053%" y="741" width="0.2004%" height="15" fill="rgb(210,61,42)"/><text x="53.7553%" y="751.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode [http_server_rust-tokio] (86 samples, 0.37%)</title><rect x="53.3603%" y="757" width="0.3667%" height="15" fill="rgb(211,52,33)"/><text x="53.6103%" y="767.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body [http_server_rust-tokio] (149 samples, 0.64%)</title><rect x="53.1471%" y="773" width="0.6354%" height="15" fill="rgb(234,58,33)"/><text x="53.3971%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="54.1066%" y="629" width="0.1279%" height="15" fill="rgb(220,115,36)"/><text x="54.3566%" y="639.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="54.4520%" y="613" width="0.1279%" height="15" fill="rgb(243,153,54)"/><text x="54.7020%" y="623.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="54.4776%" y="597" width="0.1023%" height="15" fill="rgb(251,47,18)"/><text x="54.7276%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read [http_server_rust-tokio] (150 samples, 0.64%)</title><rect x="53.9659%" y="709" width="0.6397%" height="15" fill="rgb(242,102,42)"/><text x="54.2159%" y="719.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv [http_server_rust-tokio] (143 samples, 0.61%)</title><rect x="53.9957%" y="693" width="0.6098%" height="15" fill="rgb(234,31,38)"/><text x="54.2457%" y="703.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read [http_server_rust-tokio] (143 samples, 0.61%)</title><rect x="53.9957%" y="677" width="0.6098%" height="15" fill="rgb(221,117,51)"/><text x="54.2457%" y="687.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready [http_server_rust-tokio] (138 samples, 0.59%)</title><rect x="54.0171%" y="661" width="0.5885%" height="15" fill="rgb(212,20,18)"/><text x="54.2671%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready [http_server_rust-tokio] (136 samples, 0.58%)</title><rect x="54.0256%" y="645" width="0.5800%" height="15" fill="rgb(245,133,36)"/><text x="54.2756%" y="655.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness [http_server_rust-tokio] (87 samples, 0.37%)</title><rect x="54.2345%" y="629" width="0.3710%" height="15" fill="rgb(212,6,19)"/><text x="54.4845%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="54.7335%" y="677" width="0.1407%" height="15" fill="rgb(218,1,36)"/><text x="54.9835%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="54.7420%" y="661" width="0.1322%" height="15" fill="rgb(246,84,54)"/><text x="54.9920%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="54.9041%" y="613" width="0.3070%" height="15" fill="rgb(242,110,6)"/><text x="55.1541%" y="623.50"></text></g><g><title>__libc_malloc [libc-2.31.so] (71 samples, 0.30%)</title><rect x="54.9083%" y="597" width="0.3028%" height="15" fill="rgb(214,47,5)"/><text x="55.1583%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity [http_server_rust-tokio] (81 samples, 0.35%)</title><rect x="54.8785%" y="677" width="0.3454%" height="15" fill="rgb(218,159,25)"/><text x="55.1285%" y="687.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (79 samples, 0.34%)</title><rect x="54.8870%" y="661" width="0.3369%" height="15" fill="rgb(215,211,28)"/><text x="55.1370%" y="671.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (79 samples, 0.34%)</title><rect x="54.8870%" y="645" width="0.3369%" height="15" fill="rgb(238,59,32)"/><text x="55.1370%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in [http_server_rust-tokio] (79 samples, 0.34%)</title><rect x="54.8870%" y="629" width="0.3369%" height="15" fill="rgb(226,82,3)"/><text x="55.1370%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve [http_server_rust-tokio] (170 samples, 0.72%)</title><rect x="54.6098%" y="709" width="0.7249%" height="15" fill="rgb(240,164,32)"/><text x="54.8598%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner [http_server_rust-tokio] (168 samples, 0.72%)</title><rect x="54.6183%" y="693" width="0.7164%" height="15" fill="rgb(232,46,7)"/><text x="54.8683%" y="703.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read [http_server_rust-tokio] (337 samples, 1.44%)</title><rect x="53.9019%" y="741" width="1.4371%" height="15" fill="rgb(229,129,53)"/><text x="54.1519%" y="751.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io [http_server_rust-tokio] (336 samples, 1.43%)</title><rect x="53.9062%" y="725" width="1.4328%" height="15" fill="rgb(234,188,29)"/><text x="54.1562%" y="735.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive [http_server_rust-tokio] (373 samples, 1.59%)</title><rect x="53.7825%" y="773" width="1.5906%" height="15" fill="rgb(246,141,4)"/><text x="54.0325%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof [http_server_rust-tokio] (352 samples, 1.50%)</title><rect x="53.8721%" y="757" width="1.5011%" height="15" fill="rgb(229,23,39)"/><text x="54.1221%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_ready [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="55.5821%" y="757" width="0.1919%" height="15" fill="rgb(206,12,3)"/><text x="55.8321%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="56.1237%" y="741" width="0.1407%" height="15" fill="rgb(252,226,20)"/><text x="56.3737%" y="751.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="56.3156%" y="709" width="0.1151%" height="15" fill="rgb(216,123,35)"/><text x="56.5656%" y="719.50"></text></g><g><title>http::request::Request&lt;T&gt;::new [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="56.2644%" y="741" width="0.2132%" height="15" fill="rgb(212,68,40)"/><text x="56.5144%" y="751.50"></text></g><g><title>http::request::Parts::new [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="56.2900%" y="725" width="0.1876%" height="15" fill="rgb(254,125,32)"/><text x="56.5400%" y="735.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg [http_server_rust-tokio] (176 samples, 0.75%)</title><rect x="55.7740%" y="757" width="0.7505%" height="15" fill="rgb(253,97,22)"/><text x="56.0240%" y="767.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="56.9339%" y="661" width="0.1450%" height="15" fill="rgb(241,101,14)"/><text x="57.1839%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="56.9339%" y="645" width="0.1450%" height="15" fill="rgb(238,103,29)"/><text x="57.1839%" y="655.50"></text></g><g><title>alloc::alloc::alloc [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="56.9424%" y="629" width="0.1365%" height="15" fill="rgb(233,195,47)"/><text x="57.1924%" y="639.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::new [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="56.7974%" y="725" width="0.3070%" height="15" fill="rgb(246,218,30)"/><text x="57.0474%" y="735.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="56.8571%" y="709" width="0.2473%" height="15" fill="rgb(219,145,47)"/><text x="57.1071%" y="719.50"></text></g><g><title>inline alloc::boxed::Box&lt;T&gt;::new [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="56.9211%" y="693" width="0.1834%" height="15" fill="rgb(243,12,26)"/><text x="57.1711%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="56.9254%" y="677" width="0.1791%" height="15" fill="rgb(214,87,16)"/><text x="57.1754%" y="687.50"></text></g><g><title>futures_channel::mpsc::channel [http_server_rust-tokio] (135 samples, 0.58%)</title><rect x="56.5970%" y="741" width="0.5757%" height="15" fill="rgb(208,99,42)"/><text x="56.8470%" y="751.50"></text></g><g><title>futures_channel::oneshot::channel [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="57.1727%" y="741" width="0.1535%" height="15" fill="rgb(253,99,2)"/><text x="57.4227%" y="751.50"></text></g><g><title>hyper::body::body::Body::new_channel [http_server_rust-tokio] (214 samples, 0.91%)</title><rect x="56.5501%" y="757" width="0.9126%" height="15" fill="rgb(220,168,23)"/><text x="56.8001%" y="767.50"></text></g><g><title>hyper::common::watch::channel [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="57.3390%" y="741" width="0.1237%" height="15" fill="rgb(242,38,24)"/><text x="57.5890%" y="751.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="58.4307%" y="709" width="0.1748%" height="15" fill="rgb(225,182,9)"/><text x="58.6807%" y="719.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (32 samples, 0.14%)</title><rect x="59.2068%" y="405" width="0.1365%" height="15" fill="rgb(243,178,37)"/><text x="59.4568%" y="415.50"></text></g><g><title>__put_compound_page [linux] (26 samples, 0.11%)</title><rect x="59.4115%" y="341" width="0.1109%" height="15" fill="rgb(232,139,19)"/><text x="59.6615%" y="351.50"></text></g><g><title>__put_page [linux] (27 samples, 0.12%)</title><rect x="59.4115%" y="357" width="0.1151%" height="15" fill="rgb(225,201,24)"/><text x="59.6615%" y="367.50"></text></g><g><title>skb_release_data [linux] (56 samples, 0.24%)</title><rect x="59.4115%" y="373" width="0.2388%" height="15" fill="rgb(221,47,46)"/><text x="59.6615%" y="383.50"></text></g><g><title>skb_free_head [linux] (25 samples, 0.11%)</title><rect x="59.5437%" y="357" width="0.1066%" height="15" fill="rgb(249,23,13)"/><text x="59.7937%" y="367.50"></text></g><g><title>skb_release_all [linux] (69 samples, 0.29%)</title><rect x="59.3859%" y="389" width="0.2942%" height="15" fill="rgb(219,9,5)"/><text x="59.6359%" y="399.50"></text></g><g><title>__kfree_skb [linux] (80 samples, 0.34%)</title><rect x="59.3433%" y="405" width="0.3412%" height="15" fill="rgb(254,171,16)"/><text x="59.5933%" y="415.50"></text></g><g><title>copy_user_generic_string [linux] (25 samples, 0.11%)</title><rect x="59.9787%" y="341" width="0.1066%" height="15" fill="rgb(230,171,20)"/><text x="60.2287%" y="351.50"></text></g><g><title>_copy_to_iter [linux] (31 samples, 0.13%)</title><rect x="59.9616%" y="357" width="0.1322%" height="15" fill="rgb(210,71,41)"/><text x="60.2116%" y="367.50"></text></g><g><title>__skb_datagram_iter [linux] (77 samples, 0.33%)</title><rect x="59.7825%" y="389" width="0.3284%" height="15" fill="rgb(206,173,20)"/><text x="60.0325%" y="399.50"></text></g><g><title>simple_copy_to_iter [linux] (60 samples, 0.26%)</title><rect x="59.8550%" y="373" width="0.2559%" height="15" fill="rgb(233,88,34)"/><text x="60.1050%" y="383.50"></text></g><g><title>skb_copy_datagram_iter [linux] (80 samples, 0.34%)</title><rect x="59.7783%" y="405" width="0.3412%" height="15" fill="rgb(223,209,46)"/><text x="60.0283%" y="415.50"></text></g><g><title>tcp_rcv_space_adjust [linux] (27 samples, 0.12%)</title><rect x="60.1791%" y="405" width="0.1151%" height="15" fill="rgb(250,43,18)"/><text x="60.4291%" y="415.50"></text></g><g><title>inet_recvmsg [linux] (298 samples, 1.27%)</title><rect x="59.0362%" y="437" width="1.2708%" height="15" fill="rgb(208,13,10)"/><text x="59.2862%" y="447.50"></text></g><g><title>tcp_recvmsg [linux] (258 samples, 1.10%)</title><rect x="59.2068%" y="421" width="1.1002%" height="15" fill="rgb(212,200,36)"/><text x="59.4568%" y="431.50"></text></g><g><title>sock_recvmsg [linux] (324 samples, 1.38%)</title><rect x="58.9851%" y="453" width="1.3817%" height="15" fill="rgb(225,90,30)"/><text x="59.2351%" y="463.50"></text></g><g><title>__sys_recvfrom [linux] (355 samples, 1.51%)</title><rect x="58.9339%" y="469" width="1.5139%" height="15" fill="rgb(236,182,39)"/><text x="59.1839%" y="479.50"></text></g><g><title>__x64_sys_recvfrom [linux] (364 samples, 1.55%)</title><rect x="58.9339%" y="485" width="1.5522%" height="15" fill="rgb(212,144,35)"/><text x="59.1839%" y="495.50"></text></g><g><title>do_syscall_64 [linux] (374 samples, 1.59%)</title><rect x="58.8998%" y="501" width="1.5949%" height="15" fill="rgb(228,63,44)"/><text x="59.1498%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (385 samples, 1.64%)</title><rect x="58.8657%" y="517" width="1.6418%" height="15" fill="rgb(228,109,6)"/><text x="59.1157%" y="527.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} [http_server_rust-tokio] (403 samples, 1.72%)</title><rect x="58.7974%" y="613" width="1.7186%" height="15" fill="rgb(238,117,24)"/><text x="59.0474%" y="623.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read [http_server_rust-tokio] (402 samples, 1.71%)</title><rect x="58.8017%" y="597" width="1.7143%" height="15" fill="rgb(242,26,26)"/><text x="59.0517%" y="607.50"></text></g><g><title>inline std::sys_common::net::TcpStream::read [http_server_rust-tokio] (397 samples, 1.69%)</title><rect x="58.8230%" y="581" width="1.6930%" height="15" fill="rgb(221,92,48)"/><text x="59.0730%" y="591.50"></text></g><g><title>inline std::sys::pal::unix::net::Socket::read [http_server_rust-tokio] (397 samples, 1.69%)</title><rect x="58.8230%" y="565" width="1.6930%" height="15" fill="rgb(209,209,32)"/><text x="59.0730%" y="575.50"></text></g><g><title>inline std::sys::pal::unix::net::Socket::recv_with_flags [http_server_rust-tokio] (397 samples, 1.69%)</title><rect x="58.8230%" y="549" width="1.6930%" height="15" fill="rgb(221,70,22)"/><text x="59.0730%" y="559.50"></text></g><g><title>recv [libpthread-2.31.so] (395 samples, 1.68%)</title><rect x="58.8316%" y="533" width="1.6844%" height="15" fill="rgb(248,145,5)"/><text x="59.0816%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read [http_server_rust-tokio] (419 samples, 1.79%)</title><rect x="58.7335%" y="661" width="1.7868%" height="15" fill="rgb(226,116,26)"/><text x="58.9835%" y="671.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io [http_server_rust-tokio] (412 samples, 1.76%)</title><rect x="58.7633%" y="645" width="1.7569%" height="15" fill="rgb(244,5,17)"/><text x="59.0133%" y="655.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io [http_server_rust-tokio] (409 samples, 1.74%)</title><rect x="58.7761%" y="629" width="1.7441%" height="15" fill="rgb(252,159,33)"/><text x="59.0261%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="60.6738%" y="661" width="0.1066%" height="15" fill="rgb(206,71,0)"/><text x="60.9238%" y="671.50"></text></g><g><title>tokio::runtime::coop::poll_proceed [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="60.9552%" y="629" width="0.2175%" height="15" fill="rgb(233,118,54)"/><text x="61.2052%" y="639.50"></text></g><g><title>tokio::runtime::context::budget [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="61.0362%" y="613" width="0.1365%" height="15" fill="rgb(234,83,48)"/><text x="61.2862%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="61.0490%" y="597" width="0.1237%" height="15" fill="rgb(228,3,54)"/><text x="61.2990%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read [http_server_rust-tokio] (673 samples, 2.87%)</title><rect x="58.6055%" y="709" width="2.8699%" height="15" fill="rgb(226,155,13)"/><text x="58.8555%" y="719.50">&lt;t..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv [http_server_rust-tokio] (653 samples, 2.78%)</title><rect x="58.6908%" y="693" width="2.7846%" height="15" fill="rgb(241,28,37)"/><text x="58.9408%" y="703.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read [http_server_rust-tokio] (653 samples, 2.78%)</title><rect x="58.6908%" y="677" width="2.7846%" height="15" fill="rgb(233,93,10)"/><text x="58.9408%" y="687.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready [http_server_rust-tokio] (163 samples, 0.70%)</title><rect x="60.7804%" y="661" width="0.6951%" height="15" fill="rgb(225,113,19)"/><text x="61.0304%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready [http_server_rust-tokio] (150 samples, 0.64%)</title><rect x="60.8358%" y="645" width="0.6397%" height="15" fill="rgb(241,2,18)"/><text x="61.0858%" y="655.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness [http_server_rust-tokio] (71 samples, 0.30%)</title><rect x="61.1727%" y="629" width="0.3028%" height="15" fill="rgb(228,207,21)"/><text x="61.4227%" y="639.50"></text></g><g><title>__libc_malloc [libc-2.31.so] (30 samples, 0.13%)</title><rect x="61.5991%" y="629" width="0.1279%" height="15" fill="rgb(213,211,35)"/><text x="61.8491%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="61.5608%" y="677" width="0.1706%" height="15" fill="rgb(209,83,10)"/><text x="61.8108%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="61.5608%" y="661" width="0.1706%" height="15" fill="rgb(209,164,1)"/><text x="61.8108%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="61.5821%" y="645" width="0.1493%" height="15" fill="rgb(213,184,43)"/><text x="61.8321%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve [http_server_rust-tokio] (105 samples, 0.45%)</title><rect x="61.4797%" y="709" width="0.4478%" height="15" fill="rgb(231,61,34)"/><text x="61.7297%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner [http_server_rust-tokio] (102 samples, 0.43%)</title><rect x="61.4925%" y="693" width="0.4350%" height="15" fill="rgb(235,75,3)"/><text x="61.7425%" y="703.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io [http_server_rust-tokio] (885 samples, 3.77%)</title><rect x="58.3625%" y="725" width="3.7740%" height="15" fill="rgb(220,106,47)"/><text x="58.6125%" y="735.50">hype..</text></g><g><title>&lt;&amp;mut T as core::convert::AsRef&lt;U&gt;&gt;::as_ref [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="62.7974%" y="693" width="0.1194%" height="15" fill="rgb(210,196,33)"/><text x="63.0474%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="62.9168%" y="693" width="0.1023%" height="15" fill="rgb(229,154,42)"/><text x="63.1668%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone [http_server_rust-tokio] (46 samples, 0.20%)</title><rect x="63.4115%" y="677" width="0.1962%" height="15" fill="rgb(228,114,26)"/><text x="63.6615%" y="687.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="63.4542%" y="661" width="0.1535%" height="15" fill="rgb(208,144,1)"/><text x="63.7042%" y="671.50"></text></g><g><title>bytes::bytes::Bytes::slice [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="63.3177%" y="693" width="0.2985%" height="15" fill="rgb(239,112,37)"/><text x="63.5677%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="63.8209%" y="661" width="0.1578%" height="15" fill="rgb(210,96,50)"/><text x="64.0709%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to [http_server_rust-tokio] (74 samples, 0.32%)</title><rect x="63.6716%" y="693" width="0.3156%" height="15" fill="rgb(222,178,2)"/><text x="63.9216%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="63.7953%" y="677" width="0.1919%" height="15" fill="rgb(226,74,18)"/><text x="64.0453%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="64.1109%" y="645" width="0.1493%" height="15" fill="rgb(225,67,54)"/><text x="64.3609%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else [http_server_rust-tokio] (55 samples, 0.23%)</title><rect x="64.0426%" y="693" width="0.2345%" height="15" fill="rgb(251,92,32)"/><text x="64.2926%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="64.0682%" y="677" width="0.2090%" height="15" fill="rgb(228,149,22)"/><text x="64.3182%" y="687.50"></text></g><g><title>http::header::map::HeaderMap::new [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="64.0768%" y="661" width="0.2004%" height="15" fill="rgb(243,54,13)"/><text x="64.3268%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="64.4392%" y="629" width="0.2388%" height="15" fill="rgb(243,180,28)"/><text x="64.6892%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="64.4861%" y="613" width="0.1919%" height="15" fill="rgb(208,167,24)"/><text x="64.7361%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="64.7761%" y="517" width="0.1237%" height="15" fill="rgb(245,73,45)"/><text x="65.0261%" y="527.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="64.7335%" y="565" width="0.1706%" height="15" fill="rgb(237,203,48)"/><text x="64.9835%" y="575.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="64.7335%" y="549" width="0.1706%" height="15" fill="rgb(211,197,16)"/><text x="64.9835%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="64.7335%" y="533" width="0.1706%" height="15" fill="rgb(243,99,51)"/><text x="64.9835%" y="543.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice [http_server_rust-tokio] (126 samples, 0.54%)</title><rect x="64.4136%" y="645" width="0.5373%" height="15" fill="rgb(215,123,29)"/><text x="64.6636%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="64.6780%" y="629" width="0.2729%" height="15" fill="rgb(239,186,37)"/><text x="64.9280%" y="639.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec_in [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="64.7036%" y="613" width="0.2473%" height="15" fill="rgb(252,136,39)"/><text x="64.9536%" y="623.50"></text></g><g><title>inline alloc::slice::hack::to_vec [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="64.7036%" y="597" width="0.2473%" height="15" fill="rgb(223,213,32)"/><text x="64.9536%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="64.7036%" y="581" width="0.2473%" height="15" fill="rgb(233,115,5)"/><text x="64.9536%" y="591.50"></text></g><g><title>http::uri::authority::Authority::empty [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="65.2239%" y="629" width="0.1322%" height="15" fill="rgb(207,226,44)"/><text x="65.4739%" y="639.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="65.5096%" y="613" width="0.1023%" height="15" fill="rgb(208,126,0)"/><text x="65.7596%" y="623.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared [http_server_rust-tokio] (91 samples, 0.39%)</title><rect x="65.3561%" y="629" width="0.3881%" height="15" fill="rgb(244,66,21)"/><text x="65.6061%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse [http_server_rust-tokio] (326 samples, 1.39%)</title><rect x="64.3838%" y="693" width="1.3902%" height="15" fill="rgb(222,97,12)"/><text x="64.6338%" y="703.50"></text></g><g><title>&lt;http::uri::Uri as core::str::traits::FromStr&gt;::from_str [http_server_rust-tokio] (323 samples, 1.38%)</title><rect x="64.3966%" y="677" width="1.3774%" height="15" fill="rgb(219,213,19)"/><text x="64.6466%" y="687.50"></text></g><g><title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from [http_server_rust-tokio] (321 samples, 1.37%)</title><rect x="64.4051%" y="661" width="1.3689%" height="15" fill="rgb(252,169,30)"/><text x="64.6551%" y="671.50"></text></g><g><title>http::uri::Uri::from_shared [http_server_rust-tokio] (193 samples, 0.82%)</title><rect x="64.9510%" y="645" width="0.8230%" height="15" fill="rgb(206,32,51)"/><text x="65.2010%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="66.2942%" y="629" width="0.1151%" height="15" fill="rgb(250,172,42)"/><text x="66.5442%" y="639.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="66.4094%" y="629" width="0.1450%" height="15" fill="rgb(209,34,43)"/><text x="66.6594%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="66.8358%" y="501" width="0.1322%" height="15" fill="rgb(223,11,35)"/><text x="67.0858%" y="511.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="66.7932%" y="581" width="0.1834%" height="15" fill="rgb(251,219,26)"/><text x="67.0432%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="66.8017%" y="565" width="0.1748%" height="15" fill="rgb(231,119,3)"/><text x="67.0517%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="66.8017%" y="549" width="0.1748%" height="15" fill="rgb(216,97,11)"/><text x="67.0517%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="66.8017%" y="533" width="0.1748%" height="15" fill="rgb(223,59,9)"/><text x="67.0517%" y="543.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="66.8060%" y="517" width="0.1706%" height="15" fill="rgb(233,93,31)"/><text x="67.0560%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="67.1173%" y="517" width="0.1365%" height="15" fill="rgb(239,81,33)"/><text x="67.3673%" y="527.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="67.0490%" y="533" width="0.2857%" height="15" fill="rgb(213,120,34)"/><text x="67.2990%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="67.0320%" y="549" width="0.3070%" height="15" fill="rgb(243,49,53)"/><text x="67.2820%" y="559.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash [http_server_rust-tokio] (141 samples, 0.60%)</title><rect x="66.7420%" y="597" width="0.6013%" height="15" fill="rgb(247,216,33)"/><text x="66.9920%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash [http_server_rust-tokio] (86 samples, 0.37%)</title><rect x="66.9765%" y="581" width="0.3667%" height="15" fill="rgb(226,26,14)"/><text x="67.2265%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize [http_server_rust-tokio] (78 samples, 0.33%)</title><rect x="67.0107%" y="565" width="0.3326%" height="15" fill="rgb(215,49,53)"/><text x="67.2607%" y="575.50"></text></g><g><title>http::header::map::hash_elem_using [http_server_rust-tokio] (171 samples, 0.73%)</title><rect x="66.6183%" y="629" width="0.7292%" height="15" fill="rgb(245,162,40)"/><text x="66.8683%" y="639.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash [http_server_rust-tokio] (149 samples, 0.64%)</title><rect x="66.7122%" y="613" width="0.6354%" height="15" fill="rgb(229,68,17)"/><text x="66.9622%" y="623.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append [http_server_rust-tokio] (338 samples, 1.44%)</title><rect x="65.9232%" y="677" width="1.4414%" height="15" fill="rgb(213,182,10)"/><text x="66.1732%" y="687.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append [http_server_rust-tokio] (328 samples, 1.40%)</title><rect x="65.9659%" y="661" width="1.3987%" height="15" fill="rgb(245,125,30)"/><text x="66.2159%" y="671.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 [http_server_rust-tokio] (320 samples, 1.36%)</title><rect x="66.0000%" y="645" width="1.3646%" height="15" fill="rgb(232,202,2)"/><text x="66.2500%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append [http_server_rust-tokio] (374 samples, 1.59%)</title><rect x="65.7740%" y="693" width="1.5949%" height="15" fill="rgb(237,140,51)"/><text x="66.0240%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="67.7484%" y="629" width="0.2004%" height="15" fill="rgb(236,157,25)"/><text x="67.9984%" y="639.50"></text></g><g><title>inline core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="67.8337%" y="613" width="0.1151%" height="15" fill="rgb(219,209,0)"/><text x="68.0837%" y="623.50"></text></g><g><title>inline &lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="67.8337%" y="597" width="0.1151%" height="15" fill="rgb(240,116,54)"/><text x="68.0837%" y="607.50"></text></g><g><title>alloc::vec::from_elem [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="67.7100%" y="661" width="0.3070%" height="15" fill="rgb(216,10,36)"/><text x="67.9600%" y="671.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="67.7313%" y="645" width="0.2857%" height="15" fill="rgb(222,72,44)"/><text x="67.9813%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve [http_server_rust-tokio] (191 samples, 0.81%)</title><rect x="67.4158%" y="677" width="0.8145%" height="15" fill="rgb(232,159,9)"/><text x="67.6658%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve [http_server_rust-tokio] (203 samples, 0.87%)</title><rect x="67.3689%" y="693" width="0.8657%" height="15" fill="rgb(210,39,32)"/><text x="67.6189%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="68.7463%" y="613" width="0.1023%" height="15" fill="rgb(216,194,45)"/><text x="68.9963%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="68.8742%" y="613" width="0.2004%" height="15" fill="rgb(218,18,35)"/><text x="69.1242%" y="623.50"></text></g><g><title>http::header::name::parse_hdr::{{closure}} [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="68.9211%" y="597" width="0.1535%" height="15" fill="rgb(207,83,51)"/><text x="69.1711%" y="607.50"></text></g><g><title>inline core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="69.0746%" y="613" width="0.1109%" height="15" fill="rgb(225,63,43)"/><text x="69.3246%" y="623.50"></text></g><g><title>inline &lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="69.0746%" y="597" width="0.1109%" height="15" fill="rgb(207,57,36)"/><text x="69.3246%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold [http_server_rust-tokio] (136 samples, 0.58%)</title><rect x="68.6141%" y="645" width="0.5800%" height="15" fill="rgb(216,99,33)"/><text x="68.8641%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold [http_server_rust-tokio] (128 samples, 0.55%)</title><rect x="68.6482%" y="629" width="0.5458%" height="15" fill="rgb(225,42,16)"/><text x="68.8982%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each [http_server_rust-tokio] (143 samples, 0.61%)</title><rect x="68.5928%" y="661" width="0.6098%" height="15" fill="rgb(220,201,45)"/><text x="68.8428%" y="671.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="69.2878%" y="613" width="0.1194%" height="15" fill="rgb(225,33,4)"/><text x="69.5378%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip [http_server_rust-tokio] (69 samples, 0.29%)</title><rect x="69.2026%" y="661" width="0.2942%" height="15" fill="rgb(224,33,50)"/><text x="69.4526%" y="671.50"></text></g><g><title>inline core::iter::adapters::zip::Zip&lt;A,B&gt;::new [http_server_rust-tokio] (53 samples, 0.23%)</title><rect x="69.2708%" y="645" width="0.2260%" height="15" fill="rgb(246,198,51)"/><text x="69.5208%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new [http_server_rust-tokio] (53 samples, 0.23%)</title><rect x="69.2708%" y="629" width="0.2260%" height="15" fill="rgb(205,22,4)"/><text x="69.5208%" y="639.50"></text></g><g><title>http::header::name::parse_hdr [http_server_rust-tokio] (378 samples, 1.61%)</title><rect x="68.3838%" y="677" width="1.6119%" height="15" fill="rgb(206,3,8)"/><text x="68.6338%" y="687.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes [http_server_rust-tokio] (104 samples, 0.44%)</title><rect x="69.5522%" y="661" width="0.4435%" height="15" fill="rgb(251,23,15)"/><text x="69.8022%" y="671.50"></text></g><g><title>http::header::name::HeaderName::from_bytes [http_server_rust-tokio] (430 samples, 1.83%)</title><rect x="68.2345%" y="693" width="1.8337%" height="15" fill="rgb(252,88,28)"/><text x="68.4845%" y="703.50">h..</text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="70.2004%" y="661" width="0.1834%" height="15" fill="rgb(212,127,14)"/><text x="70.4504%" y="671.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="70.2175%" y="645" width="0.1663%" height="15" fill="rgb(247,145,37)"/><text x="70.4675%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="70.7079%" y="629" width="0.1194%" height="15" fill="rgb(209,117,53)"/><text x="70.9579%" y="639.50"></text></g><g><title>http::header::value::HeaderValue::from_shared [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="70.4989%" y="661" width="0.4691%" height="15" fill="rgb(212,90,42)"/><text x="70.7489%" y="671.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="70.4989%" y="645" width="0.4691%" height="15" fill="rgb(218,164,37)"/><text x="70.7489%" y="655.50"></text></g><g><title>http::header::value::is_valid [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="70.8657%" y="629" width="0.1023%" height="15" fill="rgb(246,65,34)"/><text x="71.1157%" y="639.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared [http_server_rust-tokio] (199 samples, 0.85%)</title><rect x="70.1237%" y="677" width="0.8486%" height="15" fill="rgb(231,100,33)"/><text x="70.3737%" y="687.50"></text></g><g><title>http::header::value::HeaderValue::from_maybe_shared_unchecked [http_server_rust-tokio] (213 samples, 0.91%)</title><rect x="70.0682%" y="693" width="0.9083%" height="15" fill="rgb(228,126,14)"/><text x="70.3182%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="71.7697%" y="645" width="0.1194%" height="15" fill="rgb(215,173,21)"/><text x="72.0197%" y="655.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="71.8977%" y="645" width="0.1151%" height="15" fill="rgb(210,6,40)"/><text x="72.1477%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;httparse::parse_headers_iter_uninit::ShrinkOnDrop&gt; [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="72.0171%" y="645" width="0.1450%" height="15" fill="rgb(212,48,18)"/><text x="72.2671%" y="655.50"></text></g><g><title>&lt;httparse::parse_headers_iter_uninit::ShrinkOnDrop as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="72.0299%" y="629" width="0.1322%" height="15" fill="rgb(230,214,11)"/><text x="72.2799%" y="639.50"></text></g><g><title>httparse::iter::Bytes::peek_n [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="72.3966%" y="613" width="0.1109%" height="15" fill="rgb(254,105,39)"/><text x="72.6466%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="72.7122%" y="581" width="0.1151%" height="15" fill="rgb(245,158,5)"/><text x="72.9622%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (48 samples, 0.20%)</title><rect x="72.6354%" y="597" width="0.2047%" height="15" fill="rgb(249,208,11)"/><text x="72.8854%" y="607.50"></text></g><g><title>httparse::is_header_name_token [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="72.8657%" y="581" width="0.1279%" height="15" fill="rgb(210,39,28)"/><text x="73.1157%" y="591.50"></text></g><g><title>core::ops::function::Fn::call [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="72.8486%" y="597" width="0.1493%" height="15" fill="rgb(211,56,53)"/><text x="73.0986%" y="607.50"></text></g><g><title>httparse::simd::runtime::match_header_name_vectored [http_server_rust-tokio] (153 samples, 0.65%)</title><rect x="72.3667%" y="645" width="0.6525%" height="15" fill="rgb(226,201,30)"/><text x="72.6167%" y="655.50"></text></g><g><title>httparse::simd::swar::match_header_name_vectored [http_server_rust-tokio] (152 samples, 0.65%)</title><rect x="72.3710%" y="629" width="0.6482%" height="15" fill="rgb(239,101,34)"/><text x="72.6210%" y="639.50"></text></g><g><title>inline httparse::simd::swar::match_block [http_server_rust-tokio] (120 samples, 0.51%)</title><rect x="72.5075%" y="613" width="0.5117%" height="15" fill="rgb(226,209,5)"/><text x="72.7575%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_andnot_si256 [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="73.1727%" y="597" width="0.1407%" height="15" fill="rgb(250,105,47)"/><text x="73.4227%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="73.3134%" y="597" width="0.1706%" height="15" fill="rgb(230,72,3)"/><text x="73.5634%" y="607.50"></text></g><g><title>httparse::simd::avx2::match_header_value_vectored [http_server_rust-tokio] (200 samples, 0.85%)</title><rect x="73.0235%" y="629" width="0.8529%" height="15" fill="rgb(232,218,39)"/><text x="73.2735%" y="639.50"></text></g><g><title>inline httparse::simd::avx2::match_header_value_char_32_avx [http_server_rust-tokio] (187 samples, 0.80%)</title><rect x="73.0789%" y="613" width="0.7974%" height="15" fill="rgb(248,166,6)"/><text x="73.3289%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="73.6887%" y="597" width="0.1876%" height="15" fill="rgb(247,89,20)"/><text x="73.9387%" y="607.50"></text></g><g><title>inline core::core_arch::x86::avx::_mm256_setr_epi8 [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="73.7484%" y="581" width="0.1279%" height="15" fill="rgb(248,130,54)"/><text x="73.9984%" y="591.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored [http_server_rust-tokio] (216 samples, 0.92%)</title><rect x="73.0192%" y="645" width="0.9211%" height="15" fill="rgb(234,196,4)"/><text x="73.2692%" y="655.50"></text></g><g><title>httparse::parse_headers_iter_uninit [http_server_rust-tokio] (589 samples, 2.51%)</title><rect x="71.4499%" y="661" width="2.5117%" height="15" fill="rgb(250,143,31)"/><text x="71.6999%" y="671.50">ht..</text></g><g><title>httparse::iter::Bytes::peek_n [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="74.0853%" y="645" width="0.2132%" height="15" fill="rgb(211,110,34)"/><text x="74.3353%" y="655.50"></text></g><g><title>httparse::parse_method [http_server_rust-tokio] (87 samples, 0.37%)</title><rect x="73.9616%" y="661" width="0.3710%" height="15" fill="rgb(215,124,48)"/><text x="74.2116%" y="671.50"></text></g><g><title>httparse::simd::avx2::match_uri_vectored [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="74.4606%" y="629" width="0.2985%" height="15" fill="rgb(216,46,13)"/><text x="74.7106%" y="639.50"></text></g><g><title>inline httparse::simd::avx2::match_url_char_32_avx [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="74.5416%" y="613" width="0.2175%" height="15" fill="rgb(205,184,25)"/><text x="74.7916%" y="623.50"></text></g><g><title>httparse::parse_uri [http_server_rust-tokio] (115 samples, 0.49%)</title><rect x="74.3326%" y="661" width="0.4904%" height="15" fill="rgb(228,1,10)"/><text x="74.5826%" y="671.50"></text></g><g><title>httparse::simd::runtime::match_uri_vectored [http_server_rust-tokio] (91 samples, 0.39%)</title><rect x="74.4350%" y="645" width="0.3881%" height="15" fill="rgb(213,116,27)"/><text x="74.6850%" y="655.50"></text></g><g><title>httparse::parse_version [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="74.8230%" y="661" width="0.1151%" height="15" fill="rgb(241,95,50)"/><text x="75.0730%" y="671.50"></text></g><g><title>httparse::skip_empty_lines [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="74.9382%" y="661" width="0.1237%" height="15" fill="rgb(238,48,32)"/><text x="75.1882%" y="671.50"></text></g><g><title>httparse::Request::parse_with_uninit_headers [http_server_rust-tokio] (935 samples, 3.99%)</title><rect x="71.0789%" y="693" width="3.9872%" height="15" fill="rgb(235,113,49)"/><text x="71.3289%" y="703.50">http..</text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers [http_server_rust-tokio] (918 samples, 3.91%)</title><rect x="71.1514%" y="677" width="3.9147%" height="15" fill="rgb(205,127,43)"/><text x="71.4014%" y="687.50">http..</text></g><g><title>hyper::headers::content_length_parse [http_server_rust-tokio] (57 samples, 0.24%)</title><rect x="75.0917%" y="693" width="0.2431%" height="15" fill="rgb(250,162,2)"/><text x="75.3417%" y="703.50"></text></g><g><title>hyper::headers::from_digits [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="75.1642%" y="677" width="0.1706%" height="15" fill="rgb(220,13,41)"/><text x="75.4142%" y="687.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="75.6077%" y="629" width="0.1450%" height="15" fill="rgb(249,221,25)"/><text x="75.8577%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip [http_server_rust-tokio] (62 samples, 0.26%)</title><rect x="75.5394%" y="677" width="0.2644%" height="15" fill="rgb(215,208,19)"/><text x="75.7894%" y="687.50"></text></g><g><title>inline core::iter::adapters::zip::Zip&lt;A,B&gt;::new [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="75.5906%" y="661" width="0.2132%" height="15" fill="rgb(236,175,2)"/><text x="75.8406%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="75.5949%" y="645" width="0.2090%" height="15" fill="rgb(241,52,2)"/><text x="75.8449%" y="655.50"></text></g><g><title>hyper::proto::h1::role::record_header_indices [http_server_rust-tokio] (131 samples, 0.56%)</title><rect x="75.3348%" y="693" width="0.5586%" height="15" fill="rgb(248,140,14)"/><text x="75.5848%" y="703.50"></text></g><g><title>inline core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init [http_server_rust-tokio] (69 samples, 0.29%)</title><rect x="75.9275%" y="693" width="0.2942%" height="15" fill="rgb(253,22,42)"/><text x="76.1775%" y="703.50"></text></g><g><title>inline core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="76.1109%" y="677" width="0.1109%" height="15" fill="rgb(234,61,47)"/><text x="76.3609%" y="687.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse [http_server_rust-tokio] (3,296 samples, 14.06%)</title><rect x="62.2516%" y="709" width="14.0554%" height="15" fill="rgb(208,226,15)"/><text x="62.5016%" y="719.50">&lt;hyper::proto::h1::ro..</text></g><g><title>hyper::proto::h1::role::parse_headers [http_server_rust-tokio] (3,387 samples, 14.44%)</title><rect x="62.1663%" y="725" width="14.4435%" height="15" fill="rgb(217,221,4)"/><text x="62.4163%" y="735.50">hyper::proto::h1::role..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse [http_server_rust-tokio] (4,377 samples, 18.67%)</title><rect x="58.0000%" y="741" width="18.6652%" height="15" fill="rgb(212,174,34)"/><text x="58.2500%" y="751.50">hyper::proto::h1::io::Buffere..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head [http_server_rust-tokio] (4,543 samples, 19.37%)</title><rect x="57.4925%" y="757" width="19.3731%" height="15" fill="rgb(253,83,4)"/><text x="57.7425%" y="767.50">hyper::proto::h1::conn::Conn&lt;I..</text></g><g><title>inline tracing_core::metadata::LevelFilter::current [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="76.7335%" y="741" width="0.1322%" height="15" fill="rgb(250,195,49)"/><text x="76.9835%" y="751.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head [http_server_rust-tokio] (5,041 samples, 21.50%)</title><rect x="55.3731%" y="773" width="21.4968%" height="15" fill="rgb(241,192,25)"/><text x="55.6231%" y="783.50">hyper::proto::h1::dispatch::Dispat..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read [http_server_rust-tokio] (6,199 samples, 26.43%)</title><rect x="50.4435%" y="789" width="26.4350%" height="15" fill="rgb(208,124,10)"/><text x="50.6935%" y="799.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,B..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string [http_server_rust-tokio] (54 samples, 0.23%)</title><rect x="77.4115%" y="741" width="0.2303%" height="15" fill="rgb(222,33,0)"/><text x="77.6615%" y="751.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="77.4584%" y="725" width="0.1834%" height="15" fill="rgb(234,209,28)"/><text x="77.7084%" y="735.50"></text></g><g><title>inline &lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="709" width="0.1663%" height="15" fill="rgb(224,11,23)"/><text x="77.7255%" y="719.50"></text></g><g><title>inline alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="693" width="0.1663%" height="15" fill="rgb(232,99,1)"/><text x="77.7255%" y="703.50"></text></g><g><title>inline alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="677" width="0.1663%" height="15" fill="rgb(237,95,45)"/><text x="77.7255%" y="687.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="661" width="0.1663%" height="15" fill="rgb(208,109,11)"/><text x="77.7255%" y="671.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec_in [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="645" width="0.1663%" height="15" fill="rgb(216,190,48)"/><text x="77.7255%" y="655.50"></text></g><g><title>inline alloc::slice::hack::to_vec [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="629" width="0.1663%" height="15" fill="rgb(251,171,36)"/><text x="77.7255%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.4755%" y="613" width="0.1663%" height="15" fill="rgb(230,62,22)"/><text x="77.7255%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;I&gt;&gt;::index [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="77.6887%" y="725" width="0.1663%" height="15" fill="rgb(225,114,35)"/><text x="77.9387%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq [http_server_rust-tokio] (71 samples, 0.30%)</title><rect x="77.6418%" y="741" width="0.3028%" height="15" fill="rgb(215,118,42)"/><text x="77.8918%" y="751.50"></text></g><g><title>&lt;hyper::body::body::Body as core::convert::From&lt;alloc::string::String&gt;&gt;::from [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="78.0426%" y="741" width="0.1066%" height="15" fill="rgb(243,119,21)"/><text x="78.2926%" y="751.50"></text></g><g><title>core::mem::drop [http_server_rust-tokio] (60 samples, 0.26%)</title><rect x="78.2047%" y="645" width="0.2559%" height="15" fill="rgb(252,177,53)"/><text x="78.4547%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="78.2431%" y="629" width="0.2175%" height="15" fill="rgb(237,209,29)"/><text x="78.4931%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="78.2772%" y="613" width="0.1834%" height="15" fill="rgb(212,65,23)"/><text x="78.5272%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="78.2814%" y="597" width="0.1791%" height="15" fill="rgb(230,222,46)"/><text x="78.5314%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="78.2900%" y="581" width="0.1706%" height="15" fill="rgb(215,135,32)"/><text x="78.5400%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; [http_server_rust-tokio] (77 samples, 0.33%)</title><rect x="78.1493%" y="741" width="0.3284%" height="15" fill="rgb(246,101,22)"/><text x="78.3993%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (75 samples, 0.32%)</title><rect x="78.1578%" y="725" width="0.3198%" height="15" fill="rgb(206,107,13)"/><text x="78.4078%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop [http_server_rust-tokio] (73 samples, 0.31%)</title><rect x="78.1663%" y="709" width="0.3113%" height="15" fill="rgb(250,100,44)"/><text x="78.4163%" y="719.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut [http_server_rust-tokio] (71 samples, 0.30%)</title><rect x="78.1748%" y="693" width="0.3028%" height="15" fill="rgb(231,147,38)"/><text x="78.4248%" y="703.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} [http_server_rust-tokio] (71 samples, 0.30%)</title><rect x="78.1748%" y="677" width="0.3028%" height="15" fill="rgb(229,8,40)"/><text x="78.4248%" y="687.50"></text></g><g><title>bytes::bytes_mut::release_shared [http_server_rust-tokio] (69 samples, 0.29%)</title><rect x="78.1834%" y="661" width="0.2942%" height="15" fill="rgb(221,135,30)"/><text x="78.4334%" y="671.50"></text></g><g><title>http::header::value::HeaderValue::from_str::{{closure}} [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="78.7846%" y="677" width="0.1365%" height="15" fill="rgb(249,193,18)"/><text x="79.0346%" y="687.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="78.7846%" y="661" width="0.1365%" height="15" fill="rgb(209,133,39)"/><text x="79.0346%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse [http_server_rust-tokio] (89 samples, 0.38%)</title><rect x="78.5714%" y="741" width="0.3795%" height="15" fill="rgb(232,100,14)"/><text x="78.8214%" y="751.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::str::traits::FromStr&gt;::from_str [http_server_rust-tokio] (88 samples, 0.38%)</title><rect x="78.5757%" y="725" width="0.3753%" height="15" fill="rgb(224,185,1)"/><text x="78.8257%" y="735.50"></text></g><g><title>http::header::value::HeaderValue::from_str [http_server_rust-tokio] (82 samples, 0.35%)</title><rect x="78.6013%" y="709" width="0.3497%" height="15" fill="rgb(223,139,8)"/><text x="78.8513%" y="719.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic [http_server_rust-tokio] (77 samples, 0.33%)</title><rect x="78.6226%" y="693" width="0.3284%" height="15" fill="rgb(232,213,38)"/><text x="78.8726%" y="703.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="79.1087%" y="677" width="0.1876%" height="15" fill="rgb(207,94,22)"/><text x="79.3587%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert [http_server_rust-tokio] (129 samples, 0.55%)</title><rect x="78.9510%" y="741" width="0.5501%" height="15" fill="rgb(219,183,54)"/><text x="79.2010%" y="751.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert [http_server_rust-tokio] (120 samples, 0.51%)</title><rect x="78.9893%" y="725" width="0.5117%" height="15" fill="rgb(216,185,54)"/><text x="79.2393%" y="735.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_insert [http_server_rust-tokio] (118 samples, 0.50%)</title><rect x="78.9979%" y="709" width="0.5032%" height="15" fill="rgb(254,217,39)"/><text x="79.2479%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert2 [http_server_rust-tokio] (114 samples, 0.49%)</title><rect x="79.0149%" y="693" width="0.4861%" height="15" fill="rgb(240,178,23)"/><text x="79.2649%" y="703.50"></text></g><g><title>http::header::map::hash_elem_using [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="79.3220%" y="677" width="0.1791%" height="15" fill="rgb(218,11,47)"/><text x="79.5720%" y="687.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="79.3475%" y="661" width="0.1535%" height="15" fill="rgb(218,51,51)"/><text x="79.5975%" y="671.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="79.3603%" y="645" width="0.1407%" height="15" fill="rgb(238,126,27)"/><text x="79.6103%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="79.5991%" y="677" width="0.1407%" height="15" fill="rgb(249,202,22)"/><text x="79.8491%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="79.5991%" y="661" width="0.1407%" height="15" fill="rgb(254,195,49)"/><text x="79.8491%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="79.6290%" y="645" width="0.1109%" height="15" fill="rgb(208,123,14)"/><text x="79.8790%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="79.5991%" y="693" width="0.1620%" height="15" fill="rgb(224,200,8)"/><text x="79.8491%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; [http_server_rust-tokio] (50 samples, 0.21%)</title><rect x="79.5522%" y="709" width="0.2132%" height="15" fill="rgb(217,61,36)"/><text x="79.8022%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::path::PathAndQuery&gt; [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="79.7825%" y="693" width="0.1407%" height="15" fill="rgb(206,35,45)"/><text x="80.0325%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="79.7868%" y="677" width="0.1365%" height="15" fill="rgb(217,65,33)"/><text x="80.0368%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="79.7868%" y="661" width="0.1365%" height="15" fill="rgb(222,158,48)"/><text x="80.0368%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="79.7868%" y="645" width="0.1365%" height="15" fill="rgb(254,2,54)"/><text x="80.0368%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_drop [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="79.7910%" y="629" width="0.1322%" height="15" fill="rgb(250,143,38)"/><text x="80.0410%" y="639.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="79.7996%" y="613" width="0.1237%" height="15" fill="rgb(248,25,0)"/><text x="80.0496%" y="623.50"></text></g><g><title>http::request::Request&lt;T&gt;::into_body [http_server_rust-tokio] (102 samples, 0.43%)</title><rect x="79.5011%" y="741" width="0.4350%" height="15" fill="rgb(206,152,27)"/><text x="79.7511%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; [http_server_rust-tokio] (99 samples, 0.42%)</title><rect x="79.5139%" y="725" width="0.4222%" height="15" fill="rgb(240,77,30)"/><text x="79.7639%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="79.7740%" y="709" width="0.1620%" height="15" fill="rgb(231,5,3)"/><text x="80.0240%" y="719.50"></text></g><g><title>http::response::Response&lt;T&gt;::new [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="79.9403%" y="741" width="0.1535%" height="15" fill="rgb(207,226,32)"/><text x="80.1903%" y="751.50"></text></g><g><title>http::response::Parts::new [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="79.9744%" y="725" width="0.1194%" height="15" fill="rgb(222,207,47)"/><text x="80.2244%" y="735.50"></text></g><g><title>http::uri::Uri::path [http_server_rust-tokio] (48 samples, 0.20%)</title><rect x="80.0938%" y="741" width="0.2047%" height="15" fill="rgb(229,115,45)"/><text x="80.3438%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::copy_to_bytes [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="80.4478%" y="725" width="0.1066%" height="15" fill="rgb(224,191,6)"/><text x="80.6978%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt;&gt;&gt; [http_server_rust-tokio] (58 samples, 0.25%)</title><rect x="80.9808%" y="597" width="0.2473%" height="15" fill="rgb(230,227,24)"/><text x="81.2308%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt;&gt; [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="80.9893%" y="581" width="0.2388%" height="15" fill="rgb(228,80,19)"/><text x="81.2393%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="80.9893%" y="565" width="0.2388%" height="15" fill="rgb(247,229,0)"/><text x="81.2393%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow [http_server_rust-tokio] (55 samples, 0.23%)</title><rect x="80.9936%" y="549" width="0.2345%" height="15" fill="rgb(237,194,15)"/><text x="81.2436%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="81.0576%" y="533" width="0.1706%" height="15" fill="rgb(219,203,20)"/><text x="81.3076%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;,&amp;alloc::alloc::Global&gt;&gt; [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="81.2878%" y="533" width="0.1023%" height="15" fill="rgb(234,128,8)"/><text x="81.5378%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="81.2708%" y="565" width="0.1450%" height="15" fill="rgb(248,202,8)"/><text x="81.5208%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="81.2793%" y="549" width="0.1365%" height="15" fill="rgb(206,104,37)"/><text x="81.5293%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt; [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="81.2665%" y="581" width="0.1535%" height="15" fill="rgb(223,8,27)"/><text x="81.5165%" y="591.50"></text></g><g><title>core::mem::drop [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="81.5352%" y="549" width="0.1023%" height="15" fill="rgb(216,217,28)"/><text x="81.7852%" y="559.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="81.4584%" y="581" width="0.2516%" height="15" fill="rgb(249,199,1)"/><text x="81.7084%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop [http_server_rust-tokio] (52 samples, 0.22%)</title><rect x="81.4883%" y="565" width="0.2217%" height="15" fill="rgb(240,85,17)"/><text x="81.7383%" y="575.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one [http_server_rust-tokio] (120 samples, 0.51%)</title><rect x="81.2409%" y="597" width="0.5117%" height="15" fill="rgb(206,108,45)"/><text x="81.4909%" y="607.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next [http_server_rust-tokio] (298 samples, 1.27%)</title><rect x="80.8145%" y="629" width="1.2708%" height="15" fill="rgb(245,210,41)"/><text x="81.0645%" y="639.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message [http_server_rust-tokio] (276 samples, 1.18%)</title><rect x="80.9083%" y="613" width="1.1770%" height="15" fill="rgb(206,13,37)"/><text x="81.1583%" y="623.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin [http_server_rust-tokio] (73 samples, 0.31%)</title><rect x="81.7740%" y="597" width="0.3113%" height="15" fill="rgb(250,61,18)"/><text x="82.0240%" y="607.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop [http_server_rust-tokio] (69 samples, 0.29%)</title><rect x="81.7910%" y="581" width="0.2942%" height="15" fill="rgb(235,172,48)"/><text x="82.0410%" y="591.50"></text></g><g><title>hyper::body::body::Body::poll_inner [http_server_rust-tokio] (341 samples, 1.45%)</title><rect x="80.6866%" y="645" width="1.4542%" height="15" fill="rgb(249,201,17)"/><text x="80.9366%" y="655.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data [http_server_rust-tokio] (365 samples, 1.56%)</title><rect x="80.6269%" y="677" width="1.5565%" height="15" fill="rgb(219,208,6)"/><text x="80.8769%" y="687.50"></text></g><g><title>hyper::body::body::Body::poll_eof [http_server_rust-tokio] (358 samples, 1.53%)</title><rect x="80.6567%" y="661" width="1.5267%" height="15" fill="rgb(248,31,23)"/><text x="80.9067%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::poll_data [http_server_rust-tokio] (372 samples, 1.59%)</title><rect x="80.6183%" y="693" width="1.5864%" height="15" fill="rgb(245,15,42)"/><text x="80.8683%" y="703.50"></text></g><g><title>&lt;&amp;mut T as http_body::Body&gt;::poll_data [http_server_rust-tokio] (380 samples, 1.62%)</title><rect x="80.5928%" y="709" width="1.6205%" height="15" fill="rgb(222,217,39)"/><text x="80.8428%" y="719.50"></text></g><g><title>&lt;http_body::next::Data&lt;T&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (384 samples, 1.64%)</title><rect x="80.5800%" y="725" width="1.6375%" height="15" fill="rgb(210,219,27)"/><text x="80.8300%" y="735.50"></text></g><g><title>&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="82.3539%" y="677" width="0.1834%" height="15" fill="rgb(252,166,36)"/><text x="82.6039%" y="687.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::drop_rx [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="82.3710%" y="661" width="0.1663%" height="15" fill="rgb(245,132,34)"/><text x="82.6210%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="82.5544%" y="645" width="0.1322%" height="15" fill="rgb(236,54,3)"/><text x="82.8044%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Receiver&lt;http::header::map::HeaderMap&gt;&gt; [http_server_rust-tokio] (83 samples, 0.35%)</title><rect x="82.3412%" y="693" width="0.3539%" height="15" fill="rgb(241,173,43)"/><text x="82.5912%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_channel::oneshot::Inner&lt;http::header::map::HeaderMap&gt;&gt;&gt; [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="82.5373%" y="677" width="0.1578%" height="15" fill="rgb(215,190,9)"/><text x="82.7873%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="82.5458%" y="661" width="0.1493%" height="15" fill="rgb(242,101,16)"/><text x="82.7958%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="82.7420%" y="597" width="0.1365%" height="15" fill="rgb(223,190,21)"/><text x="82.9920%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="82.7505%" y="581" width="0.1279%" height="15" fill="rgb(215,228,25)"/><text x="83.0005%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="82.7505%" y="565" width="0.1279%" height="15" fill="rgb(225,36,22)"/><text x="83.0005%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="82.7292%" y="629" width="0.1620%" height="15" fill="rgb(251,106,46)"/><text x="82.9792%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="82.7377%" y="613" width="0.1535%" height="15" fill="rgb(208,90,1)"/><text x="82.9877%" y="623.50"></text></g><g><title>&lt;hyper::common::watch::Sender as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="82.6994%" y="677" width="0.2004%" height="15" fill="rgb(243,10,4)"/><text x="82.9494%" y="687.50"></text></g><g><title>hyper::common::watch::Sender::send [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="82.6994%" y="661" width="0.2004%" height="15" fill="rgb(212,137,27)"/><text x="82.9494%" y="671.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="82.7079%" y="645" width="0.1919%" height="15" fill="rgb(231,220,49)"/><text x="82.9579%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; [http_server_rust-tokio] (175 samples, 0.75%)</title><rect x="82.2303%" y="725" width="0.7463%" height="15" fill="rgb(237,96,20)"/><text x="82.4803%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Kind&gt; [http_server_rust-tokio] (168 samples, 0.72%)</title><rect x="82.2601%" y="709" width="0.7164%" height="15" fill="rgb(239,229,30)"/><text x="82.5101%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::watch::Sender&gt; [http_server_rust-tokio] (66 samples, 0.28%)</title><rect x="82.6951%" y="693" width="0.2814%" height="15" fill="rgb(219,65,33)"/><text x="82.9451%" y="703.50"></text></g><g><title>hyper::body::to_bytes::to_bytes::{{closure}} [http_server_rust-tokio] (630 samples, 2.69%)</title><rect x="80.3028%" y="741" width="2.6866%" height="15" fill="rgb(243,134,7)"/><text x="80.5528%" y="751.50">hy..</text></g><g><title>core::ops::function::FnOnce::call_once [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="83.7569%" y="533" width="0.1066%" height="15" fill="rgb(216,177,54)"/><text x="84.0069%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="84.1322%" y="517" width="0.1791%" height="15" fill="rgb(211,160,20)"/><text x="84.3822%" y="527.50"></text></g><g><title>inline core::slice::iter::ChunksExact&lt;T&gt;::new [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="84.1578%" y="501" width="0.1535%" height="15" fill="rgb(239,85,39)"/><text x="84.4078%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="84.1748%" y="485" width="0.1365%" height="15" fill="rgb(232,125,22)"/><text x="84.4248%" y="495.50"></text></g><g><title>inline core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="84.3198%" y="517" width="0.1194%" height="15" fill="rgb(244,57,34)"/><text x="84.5698%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="84.3284%" y="501" width="0.1109%" height="15" fill="rgb(214,203,32)"/><text x="84.5784%" y="511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str [http_server_rust-tokio] (203 samples, 0.87%)</title><rect x="83.5949%" y="565" width="0.8657%" height="15" fill="rgb(207,58,43)"/><text x="83.8449%" y="575.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes [http_server_rust-tokio] (189 samples, 0.81%)</title><rect x="83.6546%" y="549" width="0.8060%" height="15" fill="rgb(215,193,15)"/><text x="83.9046%" y="559.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape [http_server_rust-tokio] (133 samples, 0.57%)</title><rect x="83.8934%" y="533" width="0.5672%" height="15" fill="rgb(232,15,44)"/><text x="84.1434%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize [http_server_rust-tokio] (260 samples, 1.11%)</title><rect x="83.5096%" y="629" width="1.1087%" height="15" fill="rgb(212,3,48)"/><text x="83.7596%" y="639.50"></text></g><g><title>&lt;http_server_rust_tokio::_::&lt;impl serde::de::Deserialize for http_server_rust_tokio::JsonBody&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize [http_server_rust-tokio] (257 samples, 1.10%)</title><rect x="83.5224%" y="613" width="1.0959%" height="15" fill="rgb(218,128,7)"/><text x="83.7724%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier [http_server_rust-tokio] (256 samples, 1.09%)</title><rect x="83.5267%" y="597" width="1.0917%" height="15" fill="rgb(226,216,39)"/><text x="83.7767%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any [http_server_rust-tokio] (252 samples, 1.07%)</title><rect x="83.5437%" y="581" width="1.0746%" height="15" fill="rgb(243,47,51)"/><text x="83.7937%" y="591.50"></text></g><g><title>serde::de::MapAccess::next_key [http_server_rust-tokio] (311 samples, 1.33%)</title><rect x="83.4328%" y="661" width="1.3262%" height="15" fill="rgb(241,183,40)"/><text x="83.6828%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed [http_server_rust-tokio] (306 samples, 1.30%)</title><rect x="83.4542%" y="645" width="1.3049%" height="15" fill="rgb(231,217,32)"/><text x="83.7042%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="84.6183%" y="629" width="0.1407%" height="15" fill="rgb(229,61,38)"/><text x="84.8683%" y="639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="84.6482%" y="613" width="0.1109%" height="15" fill="rgb(225,210,5)"/><text x="84.8982%" y="623.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="84.9382%" y="565" width="0.1578%" height="15" fill="rgb(231,79,45)"/><text x="85.1882%" y="575.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="84.9424%" y="549" width="0.1535%" height="15" fill="rgb(224,100,7)"/><text x="85.1924%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="84.9552%" y="533" width="0.1407%" height="15" fill="rgb(241,198,18)"/><text x="85.2052%" y="543.50"></text></g><g><title>inline alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="84.9638%" y="517" width="0.1322%" height="15" fill="rgb(252,97,53)"/><text x="85.2138%" y="527.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="84.9638%" y="501" width="0.1322%" height="15" fill="rgb(220,88,7)"/><text x="85.2138%" y="511.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec_in [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="84.9638%" y="485" width="0.1322%" height="15" fill="rgb(213,176,14)"/><text x="85.2138%" y="495.50"></text></g><g><title>inline alloc::slice::hack::to_vec [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="84.9638%" y="469" width="0.1322%" height="15" fill="rgb(246,73,7)"/><text x="85.2138%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="84.9638%" y="453" width="0.1322%" height="15" fill="rgb(245,64,36)"/><text x="85.2138%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize [http_server_rust-tokio] (70 samples, 0.30%)</title><rect x="84.8102%" y="613" width="0.2985%" height="15" fill="rgb(245,80,10)"/><text x="85.0602%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="84.8230%" y="597" width="0.2857%" height="15" fill="rgb(232,107,50)"/><text x="85.0730%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="84.8230%" y="581" width="0.2857%" height="15" fill="rgb(253,3,0)"/><text x="85.0730%" y="591.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="85.1642%" y="565" width="0.1535%" height="15" fill="rgb(212,99,53)"/><text x="85.4142%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize [http_server_rust-tokio] (131 samples, 0.56%)</title><rect x="84.8060%" y="629" width="0.5586%" height="15" fill="rgb(249,111,54)"/><text x="85.0560%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize [http_server_rust-tokio] (60 samples, 0.26%)</title><rect x="85.1087%" y="613" width="0.2559%" height="15" fill="rgb(249,55,30)"/><text x="85.3587%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="85.1130%" y="597" width="0.2516%" height="15" fill="rgb(237,47,42)"/><text x="85.3630%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_number [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="85.1258%" y="581" width="0.2388%" height="15" fill="rgb(211,20,18)"/><text x="85.3758%" y="591.50"></text></g><g><title>&lt;http_server_rust_tokio::_::&lt;impl serde::de::Deserialize for http_server_rust_tokio::JsonBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map [http_server_rust-tokio] (511 samples, 2.18%)</title><rect x="83.2324%" y="677" width="2.1791%" height="15" fill="rgb(231,203,46)"/><text x="83.4824%" y="687.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value [http_server_rust-tokio] (153 samples, 0.65%)</title><rect x="84.7591%" y="661" width="0.6525%" height="15" fill="rgb(237,142,3)"/><text x="85.0091%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed [http_server_rust-tokio] (150 samples, 0.64%)</title><rect x="84.7719%" y="645" width="0.6397%" height="15" fill="rgb(241,107,1)"/><text x="85.0219%" y="655.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="85.4499%" y="677" width="0.1151%" height="15" fill="rgb(229,83,13)"/><text x="85.6999%" y="687.50"></text></g><g><title>http_server_rust_tokio::_::&lt;impl serde::de::Deserialize for http_server_rust_tokio::JsonBody&gt;::deserialize [http_server_rust-tokio] (584 samples, 2.49%)</title><rect x="83.0789%" y="709" width="2.4904%" height="15" fill="rgb(241,91,40)"/><text x="83.3289%" y="719.50">ht..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct [http_server_rust-tokio] (584 samples, 2.49%)</title><rect x="83.0789%" y="693" width="2.4904%" height="15" fill="rgb(225,3,45)"/><text x="83.3289%" y="703.50">&lt;&amp;..</text></g><g><title>serde_json::de::from_trait [http_server_rust-tokio] (613 samples, 2.61%)</title><rect x="83.0192%" y="725" width="2.6141%" height="15" fill="rgb(244,223,14)"/><text x="83.2692%" y="735.50">se..</text></g><g><title>serde_json::de::from_slice [http_server_rust-tokio] (623 samples, 2.66%)</title><rect x="83.0107%" y="741" width="2.6567%" height="15" fill="rgb(224,124,37)"/><text x="83.2607%" y="751.50">se..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="85.7740%" y="677" width="0.2516%" height="15" fill="rgb(251,171,30)"/><text x="86.0240%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map [http_server_rust-tokio] (57 samples, 0.24%)</title><rect x="85.7825%" y="661" width="0.2431%" height="15" fill="rgb(236,46,54)"/><text x="86.0325%" y="671.50"></text></g><g><title>serde_json::ser::Formatter::begin_object [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="85.8380%" y="645" width="0.1876%" height="15" fill="rgb(245,213,5)"/><text x="86.0880%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="85.8380%" y="629" width="0.1876%" height="15" fill="rgb(230,144,27)"/><text x="86.0880%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="85.8550%" y="613" width="0.1706%" height="15" fill="rgb(220,86,6)"/><text x="86.1050%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice [http_server_rust-tokio] (38 samples, 0.16%)</title><rect x="85.8635%" y="597" width="0.1620%" height="15" fill="rgb(240,20,13)"/><text x="86.1135%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="85.8806%" y="581" width="0.1450%" height="15" fill="rgb(217,89,34)"/><text x="86.1306%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="86.3753%" y="549" width="0.1066%" height="15" fill="rgb(229,13,5)"/><text x="86.6253%" y="559.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str [http_server_rust-tokio] (108 samples, 0.46%)</title><rect x="86.1834%" y="613" width="0.4606%" height="15" fill="rgb(244,67,35)"/><text x="86.4334%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str [http_server_rust-tokio] (106 samples, 0.45%)</title><rect x="86.1919%" y="597" width="0.4520%" height="15" fill="rgb(221,40,2)"/><text x="86.4419%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str [http_server_rust-tokio] (106 samples, 0.45%)</title><rect x="86.1919%" y="581" width="0.4520%" height="15" fill="rgb(237,157,21)"/><text x="86.4419%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents [http_server_rust-tokio] (77 samples, 0.33%)</title><rect x="86.3156%" y="565" width="0.3284%" height="15" fill="rgb(222,94,11)"/><text x="86.5656%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize [http_server_rust-tokio] (110 samples, 0.47%)</title><rect x="86.1791%" y="629" width="0.4691%" height="15" fill="rgb(249,113,6)"/><text x="86.4291%" y="639.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key [http_server_rust-tokio] (135 samples, 0.58%)</title><rect x="86.1279%" y="645" width="0.5757%" height="15" fill="rgb(238,137,36)"/><text x="86.3779%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="86.7249%" y="613" width="0.1109%" height="15" fill="rgb(210,102,26)"/><text x="86.9749%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="86.7292%" y="597" width="0.1066%" height="15" fill="rgb(218,30,30)"/><text x="86.9792%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="86.7207%" y="629" width="0.1706%" height="15" fill="rgb(214,67,26)"/><text x="86.9707%" y="639.50"></text></g><g><title>itoa::Buffer::format [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="86.9083%" y="581" width="0.1237%" height="15" fill="rgb(251,9,53)"/><text x="87.1583%" y="591.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u32&gt;::write [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="86.9211%" y="565" width="0.1109%" height="15" fill="rgb(228,204,25)"/><text x="87.1711%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="86.8913%" y="629" width="0.2004%" height="15" fill="rgb(207,153,8)"/><text x="87.1413%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="86.8913%" y="613" width="0.2004%" height="15" fill="rgb(242,9,16)"/><text x="87.1413%" y="623.50"></text></g><g><title>serde_json::ser::Formatter::write_u32 [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="86.9041%" y="597" width="0.1876%" height="15" fill="rgb(217,211,10)"/><text x="87.1541%" y="607.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field [http_server_rust-tokio] (246 samples, 1.05%)</title><rect x="86.0896%" y="677" width="1.0490%" height="15" fill="rgb(219,228,52)"/><text x="86.3396%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry [http_server_rust-tokio] (241 samples, 1.03%)</title><rect x="86.1109%" y="661" width="1.0277%" height="15" fill="rgb(231,92,29)"/><text x="86.3609%" y="671.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value [http_server_rust-tokio] (102 samples, 0.43%)</title><rect x="86.7036%" y="645" width="0.4350%" height="15" fill="rgb(232,8,23)"/><text x="86.9536%" y="655.50"></text></g><g><title>http_server_rust_tokio::_::&lt;impl serde::ser::Serialize for http_server_rust_tokio::JsonBody&gt;::serialize [http_server_rust-tokio] (325 samples, 1.39%)</title><rect x="85.7569%" y="693" width="1.3859%" height="15" fill="rgb(216,211,34)"/><text x="86.0069%" y="703.50"></text></g><g><title>http_server_rust_tokio::handle_request::{{closure}} [http_server_rust-tokio] (2,339 samples, 9.97%)</title><rect x="77.1770%" y="757" width="9.9744%" height="15" fill="rgb(236,151,0)"/><text x="77.4270%" y="767.50">http_server_ru..</text></g><g><title>serde_json::ser::to_string [http_server_rust-tokio] (348 samples, 1.48%)</title><rect x="85.6674%" y="741" width="1.4840%" height="15" fill="rgb(209,168,3)"/><text x="85.9174%" y="751.50"></text></g><g><title>serde_json::ser::to_vec [http_server_rust-tokio] (340 samples, 1.45%)</title><rect x="85.7015%" y="725" width="1.4499%" height="15" fill="rgb(208,129,28)"/><text x="85.9515%" y="735.50"></text></g><g><title>serde_json::ser::to_writer [http_server_rust-tokio] (330 samples, 1.41%)</title><rect x="85.7441%" y="709" width="1.4072%" height="15" fill="rgb(229,78,22)"/><text x="85.9941%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg [http_server_rust-tokio] (2,387 samples, 10.18%)</title><rect x="77.0405%" y="773" width="10.1791%" height="15" fill="rgb(228,187,13)"/><text x="77.2905%" y="783.50">&lt;hyper::proto::..</text></g><g><title>&lt;dyn core::any::Any&gt;::is [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="87.5224%" y="741" width="0.1109%" height="15" fill="rgb(240,119,24)"/><text x="87.7724%" y="751.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_mut [http_server_rust-tokio] (34 samples, 0.14%)</title><rect x="87.4925%" y="757" width="0.1450%" height="15" fill="rgb(209,194,42)"/><text x="87.7425%" y="767.50"></text></g><g><title>hyper::body::take_full_data [http_server_rust-tokio] (72 samples, 0.31%)</title><rect x="87.4243%" y="773" width="0.3070%" height="15" fill="rgb(247,200,46)"/><text x="87.6743%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_buffer_body [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="87.7313%" y="773" width="0.1023%" height="15" fill="rgb(218,76,16)"/><text x="87.9813%" y="783.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="87.9360%" y="709" width="0.1023%" height="15" fill="rgb(225,21,48)"/><text x="88.1860%" y="719.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining [http_server_rust-tokio] (54 samples, 0.23%)</title><rect x="87.9019%" y="741" width="0.2303%" height="15" fill="rgb(239,223,50)"/><text x="88.1519%" y="751.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="87.9147%" y="725" width="0.2175%" height="15" fill="rgb(244,45,21)"/><text x="88.1647%" y="735.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="87.8849%" y="757" width="0.2516%" height="15" fill="rgb(232,33,43)"/><text x="88.1349%" y="767.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="87.8507%" y="773" width="0.2900%" height="15" fill="rgb(209,8,3)"/><text x="88.1007%" y="783.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="88.2729%" y="741" width="0.1322%" height="15" fill="rgb(214,25,53)"/><text x="88.5229%" y="751.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="88.3028%" y="725" width="0.1023%" height="15" fill="rgb(254,186,54)"/><text x="88.5528%" y="735.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get [http_server_rust-tokio] (46 samples, 0.20%)</title><rect x="88.4648%" y="709" width="0.1962%" height="15" fill="rgb(208,174,49)"/><text x="88.7148%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="88.4861%" y="693" width="0.1748%" height="15" fill="rgb(233,191,51)"/><text x="88.7361%" y="703.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="88.5288%" y="677" width="0.1322%" height="15" fill="rgb(222,134,10)"/><text x="88.7788%" y="687.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::enforce_version [http_server_rust-tokio] (66 samples, 0.28%)</title><rect x="88.4051%" y="741" width="0.2814%" height="15" fill="rgb(230,226,20)"/><text x="88.6551%" y="751.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::fix_keep_alive [http_server_rust-tokio] (64 samples, 0.27%)</title><rect x="88.4136%" y="725" width="0.2729%" height="15" fill="rgb(251,111,25)"/><text x="88.6636%" y="735.50"></text></g><g><title>http::extensions::Extensions::get [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="89.1940%" y="709" width="0.1023%" height="15" fill="rgb(224,40,46)"/><text x="89.4440%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::drain [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="90.1322%" y="677" width="0.1663%" height="15" fill="rgb(236,108,47)"/><text x="90.3822%" y="687.50"></text></g><g><title>hyper::common::date::extend [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="90.3454%" y="677" width="0.2900%" height="15" fill="rgb(234,93,0)"/><text x="90.5954%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [http_server_rust-tokio] (67 samples, 0.29%)</title><rect x="90.3497%" y="661" width="0.2857%" height="15" fill="rgb(224,213,32)"/><text x="90.5997%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="90.3838%" y="645" width="0.2516%" height="15" fill="rgb(251,11,48)"/><text x="90.6338%" y="655.50"></text></g><g><title>hyper::common::date::extend::{{closure}} [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="90.4563%" y="629" width="0.1791%" height="15" fill="rgb(236,173,5)"/><text x="90.7063%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="90.7420%" y="645" width="0.1066%" height="15" fill="rgb(230,95,12)"/><text x="90.9920%" y="655.50"></text></g><g><title>hyper::proto::h1::role::extend [http_server_rust-tokio] (29 samples, 0.12%)</title><rect x="90.7292%" y="677" width="0.1237%" height="15" fill="rgb(232,209,1)"/><text x="90.9792%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="90.7335%" y="661" width="0.1194%" height="15" fill="rgb(232,6,1)"/><text x="90.9835%" y="671.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case [http_server_rust-tokio] (339 samples, 1.45%)</title><rect x="89.5053%" y="709" width="1.4456%" height="15" fill="rgb(210,224,50)"/><text x="89.7553%" y="719.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers [http_server_rust-tokio] (336 samples, 1.43%)</title><rect x="89.5181%" y="693" width="1.4328%" height="15" fill="rgb(228,127,35)"/><text x="89.7681%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="90.9765%" y="661" width="0.1407%" height="15" fill="rgb(245,102,45)"/><text x="91.2265%" y="671.50"></text></g><g><title>inline core::intrinsics::copy_nonoverlapping [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="90.9851%" y="645" width="0.1322%" height="15" fill="rgb(214,1,49)"/><text x="91.2351%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="90.9680%" y="677" width="0.1748%" height="15" fill="rgb(226,163,40)"/><text x="91.2180%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="90.9595%" y="693" width="0.1876%" height="15" fill="rgb(239,212,28)"/><text x="91.2095%" y="703.50"></text></g><g><title>hyper::proto::h1::role::extend [http_server_rust-tokio] (47 samples, 0.20%)</title><rect x="90.9510%" y="709" width="0.2004%" height="15" fill="rgb(220,20,13)"/><text x="91.2010%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode [http_server_rust-tokio] (571 samples, 2.43%)</title><rect x="88.7633%" y="725" width="2.4350%" height="15" fill="rgb(210,164,35)"/><text x="89.0133%" y="735.50">&lt;h..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head [http_server_rust-tokio] (734 samples, 3.13%)</title><rect x="88.1962%" y="757" width="3.1301%" height="15" fill="rgb(248,109,41)"/><text x="88.4462%" y="767.50">hyp..</text></g><g><title>hyper::proto::h1::role::encode_headers [http_server_rust-tokio] (610 samples, 2.60%)</title><rect x="88.7249%" y="741" width="2.6013%" height="15" fill="rgb(238,23,50)"/><text x="88.9749%" y="751.50">hy..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="91.5821%" y="677" width="0.1365%" height="15" fill="rgb(211,48,49)"/><text x="91.8321%" y="687.50"></text></g><g><title>inline alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="91.5864%" y="661" width="0.1322%" height="15" fill="rgb(223,36,21)"/><text x="91.8364%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="91.6034%" y="645" width="0.1151%" height="15" fill="rgb(207,123,46)"/><text x="91.8534%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow [http_server_rust-tokio] (42 samples, 0.18%)</title><rect x="91.5437%" y="693" width="0.1791%" height="15" fill="rgb(240,218,32)"/><text x="91.7937%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="91.5267%" y="709" width="0.2175%" height="15" fill="rgb(252,5,43)"/><text x="91.7767%" y="719.50"></text></g><g><title>hyper::common::buf::BufList&lt;T&gt;::push [http_server_rust-tokio] (65 samples, 0.28%)</title><rect x="91.5139%" y="725" width="0.2772%" height="15" fill="rgb(252,84,19)"/><text x="91.7639%" y="735.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer [http_server_rust-tokio] (103 samples, 0.44%)</title><rect x="91.3987%" y="741" width="0.4392%" height="15" fill="rgb(243,152,39)"/><text x="91.6487%" y="751.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::danger_full_buf [http_server_rust-tokio] (121 samples, 0.52%)</title><rect x="91.3262%" y="757" width="0.5160%" height="15" fill="rgb(234,160,15)"/><text x="91.5762%" y="767.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg [http_server_rust-tokio] (870 samples, 3.71%)</title><rect x="88.1407%" y="773" width="3.7100%" height="15" fill="rgb(237,34,20)"/><text x="88.3907%" y="783.50">hype..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop [http_server_rust-tokio] (11,518 samples, 49.12%)</title><rect x="42.7548%" y="805" width="49.1173%" height="15" fill="rgb(229,97,13)"/><text x="43.0048%" y="815.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop [http_server_rust-tok..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write [http_server_rust-tokio] (3,516 samples, 14.99%)</title><rect x="76.8785%" y="789" width="14.9936%" height="15" fill="rgb(234,71,50)"/><text x="77.1285%" y="799.50">hyper::proto::h1::dispa..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (12,420 samples, 52.96%)</title><rect x="38.9126%" y="853" width="52.9638%" height="15" fill="rgb(253,155,4)"/><text x="39.1626%" y="863.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::pol..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch [http_server_rust-tokio] (12,407 samples, 52.91%)</title><rect x="38.9680%" y="837" width="52.9083%" height="15" fill="rgb(222,185,37)"/><text x="39.2180%" y="847.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch [http_server_rust-tokio]</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner [http_server_rust-tokio] (12,393 samples, 52.85%)</title><rect x="39.0277%" y="821" width="52.8486%" height="15" fill="rgb(251,177,13)"/><text x="39.2777%" y="831.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner [http_server_rust-tokio]</text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (12,433 samples, 53.02%)</title><rect x="38.8827%" y="869" width="53.0192%" height="15" fill="rgb(250,179,40)"/><text x="39.1327%" y="879.50">&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll [http..</text></g><g><title>&lt;hyper::server::conn::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll [http_server_rust-tokio] (12,456 samples, 53.12%)</title><rect x="38.8358%" y="885" width="53.1173%" height="15" fill="rgb(242,44,2)"/><text x="39.0858%" y="895.50">&lt;hyper::server::conn::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll [http_ser..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::map::HeaderMap&gt;&gt; [http_server_rust-tokio] (54 samples, 0.23%)</title><rect x="92.1194%" y="789" width="0.2303%" height="15" fill="rgb(216,177,13)"/><text x="92.3694%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; [http_server_rust-tokio] (51 samples, 0.22%)</title><rect x="92.1322%" y="773" width="0.2175%" height="15" fill="rgb(216,106,43)"/><text x="92.3822%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::State&gt; [http_server_rust-tokio] (73 samples, 0.31%)</title><rect x="92.0853%" y="805" width="0.3113%" height="15" fill="rgb(216,183,2)"/><text x="92.3353%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="92.5117%" y="757" width="0.1365%" height="15" fill="rgb(249,75,3)"/><text x="92.7617%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="92.5373%" y="741" width="0.1109%" height="15" fill="rgb(219,67,39)"/><text x="92.7873%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; [http_server_rust-tokio] (59 samples, 0.25%)</title><rect x="92.4009%" y="789" width="0.2516%" height="15" fill="rgb(253,228,2)"/><text x="92.6509%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="92.4136%" y="773" width="0.2388%" height="15" fill="rgb(235,138,27)"/><text x="92.6636%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::buf::BufList&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; [http_server_rust-tokio] (28 samples, 0.12%)</title><rect x="92.6525%" y="773" width="0.1194%" height="15" fill="rgb(236,97,51)"/><text x="92.9025%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="92.6610%" y="757" width="0.1109%" height="15" fill="rgb(240,80,30)"/><text x="92.9110%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::io::WriteBuf&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="92.6525%" y="789" width="0.2090%" height="15" fill="rgb(230,178,19)"/><text x="92.9025%" y="799.50"></text></g><g><title>filp_close [linux] (24 samples, 0.10%)</title><rect x="93.1301%" y="533" width="0.1023%" height="15" fill="rgb(210,190,27)"/><text x="93.3801%" y="543.50"></text></g><g><title>__close_fd [linux] (31 samples, 0.13%)</title><rect x="93.1130%" y="549" width="0.1322%" height="15" fill="rgb(222,107,31)"/><text x="93.3630%" y="559.50"></text></g><g><title>__x64_sys_close [linux] (36 samples, 0.15%)</title><rect x="93.1130%" y="565" width="0.1535%" height="15" fill="rgb(216,127,34)"/><text x="93.3630%" y="575.50"></text></g><g><title>destroy_inode [linux] (35 samples, 0.15%)</title><rect x="93.6375%" y="421" width="0.1493%" height="15" fill="rgb(234,116,52)"/><text x="93.8875%" y="431.50"></text></g><g><title>evict [linux] (62 samples, 0.26%)</title><rect x="93.6162%" y="437" width="0.2644%" height="15" fill="rgb(222,124,15)"/><text x="93.8662%" y="447.50"></text></g><g><title>iput [linux] (89 samples, 0.38%)</title><rect x="93.5565%" y="453" width="0.3795%" height="15" fill="rgb(231,179,28)"/><text x="93.8065%" y="463.50"></text></g><g><title>dentry_unlink_inode [linux] (100 samples, 0.43%)</title><rect x="93.5267%" y="469" width="0.4264%" height="15" fill="rgb(226,93,45)"/><text x="93.7767%" y="479.50"></text></g><g><title>__dentry_kill [linux] (133 samples, 0.57%)</title><rect x="93.4030%" y="485" width="0.5672%" height="15" fill="rgb(215,8,51)"/><text x="93.6530%" y="495.50"></text></g><g><title>dput [linux] (142 samples, 0.61%)</title><rect x="93.3902%" y="501" width="0.6055%" height="15" fill="rgb(223,106,5)"/><text x="93.6402%" y="511.50"></text></g><g><title>__tcp_close [linux] (27 samples, 0.12%)</title><rect x="94.2175%" y="437" width="0.1151%" height="15" fill="rgb(250,191,5)"/><text x="94.4675%" y="447.50"></text></g><g><title>inet_release [linux] (53 samples, 0.23%)</title><rect x="94.1748%" y="469" width="0.2260%" height="15" fill="rgb(242,132,44)"/><text x="94.4248%" y="479.50"></text></g><g><title>tcp_close [linux] (45 samples, 0.19%)</title><rect x="94.2090%" y="453" width="0.1919%" height="15" fill="rgb(251,152,29)"/><text x="94.4590%" y="463.50"></text></g><g><title>__sock_release [linux] (65 samples, 0.28%)</title><rect x="94.1578%" y="485" width="0.2772%" height="15" fill="rgb(218,179,5)"/><text x="94.4078%" y="495.50"></text></g><g><title>__fput [linux] (264 samples, 1.13%)</title><rect x="93.3348%" y="517" width="1.1258%" height="15" fill="rgb(227,67,19)"/><text x="93.5848%" y="527.50"></text></g><g><title>sock_close [linux] (71 samples, 0.30%)</title><rect x="94.1578%" y="501" width="0.3028%" height="15" fill="rgb(233,119,31)"/><text x="94.4078%" y="511.50"></text></g><g><title>____fput [linux] (277 samples, 1.18%)</title><rect x="93.3348%" y="533" width="1.1812%" height="15" fill="rgb(241,120,22)"/><text x="93.5848%" y="543.50"></text></g><g><title>exit_to_usermode_loop [linux] (293 samples, 1.25%)</title><rect x="93.2878%" y="565" width="1.2495%" height="15" fill="rgb(224,102,30)"/><text x="93.5378%" y="575.50"></text></g><g><title>task_work_run [linux] (284 samples, 1.21%)</title><rect x="93.3262%" y="549" width="1.2111%" height="15" fill="rgb(210,164,37)"/><text x="93.5762%" y="559.50"></text></g><g><title>do_syscall_64 [linux] (347 samples, 1.48%)</title><rect x="93.0746%" y="581" width="1.4797%" height="15" fill="rgb(226,191,16)"/><text x="93.3246%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (359 samples, 1.53%)</title><rect x="93.0362%" y="597" width="1.5309%" height="15" fill="rgb(214,40,45)"/><text x="93.2862%" y="607.50"></text></g><g><title>__close [libpthread-2.31.so] (368 samples, 1.57%)</title><rect x="93.0149%" y="613" width="1.5693%" height="15" fill="rgb(244,29,26)"/><text x="93.2649%" y="623.50"></text></g><g><title>do_syscall_64 [linux] (36 samples, 0.15%)</title><rect x="94.7633%" y="533" width="0.1535%" height="15" fill="rgb(216,16,5)"/><text x="95.0133%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (44 samples, 0.19%)</title><rect x="94.7463%" y="549" width="0.1876%" height="15" fill="rgb(249,76,35)"/><text x="94.9963%" y="559.50"></text></g><g><title>0x00007F3444A5D664 [libc-2.31.so] (51 samples, 0.22%)</title><rect x="94.7292%" y="565" width="0.2175%" height="15" fill="rgb(207,11,44)"/><text x="94.9792%" y="575.50"></text></g><g><title>__fcntl [libpthread-2.31.so] (89 samples, 0.38%)</title><rect x="94.5928%" y="597" width="0.3795%" height="15" fill="rgb(228,190,49)"/><text x="94.8428%" y="607.50"></text></g><g><title>__libc_fcntl64 [libc-2.31.so] (74 samples, 0.32%)</title><rect x="94.6567%" y="581" width="0.3156%" height="15" fill="rgb(214,173,12)"/><text x="94.9067%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; [http_server_rust-tokio] (476 samples, 2.03%)</title><rect x="92.9467%" y="693" width="2.0299%" height="15" fill="rgb(218,26,35)"/><text x="93.1967%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::net::Socket&gt; [http_server_rust-tokio] (473 samples, 2.02%)</title><rect x="92.9595%" y="677" width="2.0171%" height="15" fill="rgb(220,200,19)"/><text x="93.2095%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fd::FileDesc&gt; [http_server_rust-tokio] (468 samples, 2.00%)</title><rect x="92.9808%" y="661" width="1.9957%" height="15" fill="rgb(239,95,49)"/><text x="93.2308%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; [http_server_rust-tokio] (468 samples, 2.00%)</title><rect x="92.9808%" y="645" width="1.9957%" height="15" fill="rgb(235,85,53)"/><text x="93.2308%" y="655.50">c..</text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (465 samples, 1.98%)</title><rect x="92.9936%" y="629" width="1.9829%" height="15" fill="rgb(233,133,31)"/><text x="93.2436%" y="639.50">&lt;..</text></g><g><title>std::sys::pal::unix::fs::debug_assert_fd_is_open [http_server_rust-tokio] (92 samples, 0.39%)</title><rect x="94.5842%" y="613" width="0.3923%" height="15" fill="rgb(218,25,20)"/><text x="94.8342%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::net::tcp::stream::TcpStream&gt; [http_server_rust-tokio] (482 samples, 2.06%)</title><rect x="92.9254%" y="741" width="2.0554%" height="15" fill="rgb(252,210,38)"/><text x="93.1754%" y="751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;mio::io_source::IoSource&lt;std::net::tcp::TcpStream&gt;&gt; [http_server_rust-tokio] (479 samples, 2.04%)</title><rect x="92.9382%" y="725" width="2.0426%" height="15" fill="rgb(242,134,21)"/><text x="93.1882%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; [http_server_rust-tokio] (479 samples, 2.04%)</title><rect x="92.9382%" y="709" width="2.0426%" height="15" fill="rgb(213,28,48)"/><text x="93.1882%" y="719.50">c..</text></g><g><title>0xFFFFFFFFFFFFFF80 (32 samples, 0.14%)</title><rect x="95.3092%" y="565" width="0.1365%" height="15" fill="rgb(250,196,2)"/><text x="95.5592%" y="575.50"></text></g><g><title>ep_unregister_pollwait.isra.0 [linux] (24 samples, 0.10%)</title><rect x="95.5693%" y="549" width="0.1023%" height="15" fill="rgb(227,5,17)"/><text x="95.8193%" y="559.50"></text></g><g><title>ep_remove [linux] (44 samples, 0.19%)</title><rect x="95.5053%" y="565" width="0.1876%" height="15" fill="rgb(221,226,24)"/><text x="95.7553%" y="575.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (119 samples, 0.51%)</title><rect x="95.3092%" y="581" width="0.5075%" height="15" fill="rgb(211,5,48)"/><text x="95.5592%" y="591.50"></text></g><g><title>do_syscall_64 [linux] (142 samples, 0.61%)</title><rect x="95.2921%" y="597" width="0.6055%" height="15" fill="rgb(219,150,6)"/><text x="95.5421%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (145 samples, 0.62%)</title><rect x="95.2836%" y="613" width="0.6183%" height="15" fill="rgb(251,46,16)"/><text x="95.5336%" y="623.50"></text></g><g><title>epoll_ctl [libc-2.31.so] (153 samples, 0.65%)</title><rect x="95.2751%" y="629" width="0.6525%" height="15" fill="rgb(220,204,40)"/><text x="95.5251%" y="639.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::deregister [http_server_rust-tokio] (171 samples, 0.73%)</title><rect x="95.2026%" y="661" width="0.7292%" height="15" fill="rgb(211,85,2)"/><text x="95.4526%" y="671.50"></text></g><g><title>mio::sys::unix::selector::Selector::deregister [http_server_rust-tokio] (168 samples, 0.72%)</title><rect x="95.2154%" y="645" width="0.7164%" height="15" fill="rgb(229,17,7)"/><text x="95.4654%" y="655.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister [http_server_rust-tokio] (193 samples, 0.82%)</title><rect x="95.1173%" y="693" width="0.8230%" height="15" fill="rgb(239,72,28)"/><text x="95.3673%" y="703.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::deregister [http_server_rust-tokio] (189 samples, 0.81%)</title><rect x="95.1343%" y="677" width="0.8060%" height="15" fill="rgb(230,47,54)"/><text x="95.3843%" y="687.50"></text></g><g><title>mio::poll::Registry::deregister [http_server_rust-tokio] (197 samples, 0.84%)</title><rect x="95.1087%" y="709" width="0.8401%" height="15" fill="rgb(214,50,8)"/><text x="95.3587%" y="719.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock [http_server_rust-tokio] (27 samples, 0.12%)</title><rect x="95.9616%" y="693" width="0.1151%" height="15" fill="rgb(216,198,43)"/><text x="96.2116%" y="703.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="95.9531%" y="709" width="0.1279%" height="15" fill="rgb(234,20,35)"/><text x="96.2031%" y="719.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source [http_server_rust-tokio] (301 samples, 1.28%)</title><rect x="94.9851%" y="725" width="1.2836%" height="15" fill="rgb(254,45,19)"/><text x="95.2351%" y="735.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::deregister [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="96.0938%" y="709" width="0.1748%" height="15" fill="rgb(219,14,44)"/><text x="96.3438%" y="719.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (803 samples, 3.42%)</title><rect x="92.8913%" y="757" width="3.4243%" height="15" fill="rgb(217,220,26)"/><text x="93.1413%" y="767.50">&lt;to..</text></g><g><title>tokio::runtime::io::registration::Registration::deregister [http_server_rust-tokio] (313 samples, 1.33%)</title><rect x="94.9808%" y="741" width="1.3348%" height="15" fill="rgb(213,158,28)"/><text x="95.2308%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (25 samples, 0.11%)</title><rect x="96.4520%" y="677" width="0.1066%" height="15" fill="rgb(252,51,52)"/><text x="96.7020%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; [http_server_rust-tokio] (37 samples, 0.16%)</title><rect x="96.4264%" y="709" width="0.1578%" height="15" fill="rgb(246,89,16)"/><text x="96.6764%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; [http_server_rust-tokio] (36 samples, 0.15%)</title><rect x="96.4307%" y="693" width="0.1535%" height="15" fill="rgb(216,158,49)"/><text x="96.6807%" y="703.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop [http_server_rust-tokio] (84 samples, 0.36%)</title><rect x="96.3582%" y="741" width="0.3582%" height="15" fill="rgb(236,107,19)"/><text x="96.6082%" y="751.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_wakers [http_server_rust-tokio] (84 samples, 0.36%)</title><rect x="96.3582%" y="725" width="0.3582%" height="15" fill="rgb(228,185,30)"/><text x="96.6082%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; [http_server_rust-tokio] (116 samples, 0.49%)</title><rect x="96.3284%" y="757" width="0.4947%" height="15" fill="rgb(246,134,8)"/><text x="96.5784%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; [http_server_rust-tokio] (930 samples, 3.97%)</title><rect x="92.8614%" y="789" width="3.9659%" height="15" fill="rgb(214,143,50)"/><text x="93.1114%" y="799.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;&gt; [http_server_rust-tokio] (927 samples, 3.95%)</title><rect x="92.8742%" y="773" width="3.9531%" height="15" fill="rgb(228,75,8)"/><text x="93.1242%" y="783.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::io::Buffered&lt;tokio::net::tcp::stream::TcpStream,hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; [http_server_rust-tokio] (1,040 samples, 4.43%)</title><rect x="92.3966%" y="805" width="4.4350%" height="15" fill="rgb(207,175,4)"/><text x="92.6466%" y="815.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::Conn&lt;tokio::net::tcp::stream::TcpStream,bytes::bytes::Bytes,hyper::proto::h1::role::Server&gt;&gt; [http_server_rust-tokio] (1,116 samples, 4.76%)</title><rect x="92.0768%" y="821" width="4.7591%" height="15" fill="rgb(205,108,24)"/><text x="92.3268%" y="831.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::server::conn::ProtoServer&lt;tokio::net::tcp::stream::TcpStream,hyper::body::body::Body,hyper::service::util::ServiceFn&lt;http_server_rust_tokio::handle_request,hyper::body::body::Body&gt;&gt;&gt;&gt; [http_server_rust-tokio] (1,161 samples, 4.95%)</title><rect x="91.9829%" y="869" width="4.9510%" height="15" fill="rgb(244,120,49)"/><text x="92.2329%" y="879.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::server::conn::ProtoServer&lt;tokio::net::tcp::stream::TcpStream,hyper::body::body::Body,hyper::service::util::ServiceFn&lt;http_server_rust_tokio::handle_request,hyper::body::body::Body&gt;&gt;&gt; [http_server_rust-tokio] (1,154 samples, 4.92%)</title><rect x="92.0128%" y="853" width="4.9211%" height="15" fill="rgb(223,47,38)"/><text x="92.2628%" y="863.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::Dispatcher&lt;hyper::proto::h1::dispatch::Server&lt;hyper::service::util::ServiceFn&lt;http_server_rust_tokio::handle_request,hyper::body::body::Body&gt;,hyper::body::body::Body&gt;,hyper::body::body::Body,tokio::net::tcp::stream::TcpStream,hyper::proto::h1::role::Server&gt;&gt; [http_server_rust-tokio] (1,152 samples, 4.91%)</title><rect x="92.0213%" y="837" width="4.9126%" height="15" fill="rgb(229,179,11)"/><text x="92.2713%" y="847.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::server::conn::Connection&lt;tokio::net::tcp::stream::TcpStream,hyper::service::util::ServiceFn&lt;http_server_rust_tokio::handle_request,hyper::body::body::Body&gt;&gt;&gt; [http_server_rust-tokio] (1,169 samples, 4.99%)</title><rect x="91.9616%" y="885" width="4.9851%" height="15" fill="rgb(231,122,1)"/><text x="92.2116%" y="895.50">core::..</text></g><g><title>hyper::server::conn::Http::new [http_server_rust-tokio] (24 samples, 0.10%)</title><rect x="96.9552%" y="885" width="0.1023%" height="15" fill="rgb(245,119,9)"/><text x="97.2052%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity [http_server_rust-tokio] (49 samples, 0.21%)</title><rect x="97.4456%" y="837" width="0.2090%" height="15" fill="rgb(241,163,25)"/><text x="97.6956%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec [http_server_rust-tokio] (40 samples, 0.17%)</title><rect x="97.4840%" y="821" width="0.1706%" height="15" fill="rgb(217,214,3)"/><text x="97.7340%" y="831.50"></text></g><g><title>__libc_malloc [libc-2.31.so] (45 samples, 0.19%)</title><rect x="97.7484%" y="741" width="0.1919%" height="15" fill="rgb(240,86,28)"/><text x="97.9984%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in [http_server_rust-tokio] (56 samples, 0.24%)</title><rect x="97.7313%" y="757" width="0.2388%" height="15" fill="rgb(215,47,9)"/><text x="97.9813%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity [http_server_rust-tokio] (78 samples, 0.33%)</title><rect x="97.6631%" y="821" width="0.3326%" height="15" fill="rgb(252,25,45)"/><text x="97.9131%" y="831.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="97.7058%" y="805" width="0.2900%" height="15" fill="rgb(251,164,9)"/><text x="97.9558%" y="815.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="97.7058%" y="789" width="0.2900%" height="15" fill="rgb(233,194,0)"/><text x="97.9558%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="97.7058%" y="773" width="0.2900%" height="15" fill="rgb(249,111,24)"/><text x="97.9558%" y="783.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new [http_server_rust-tokio] (150 samples, 0.64%)</title><rect x="97.3774%" y="853" width="0.6397%" height="15" fill="rgb(250,223,3)"/><text x="97.6274%" y="863.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::new [http_server_rust-tokio] (85 samples, 0.36%)</title><rect x="97.6546%" y="837" width="0.3625%" height="15" fill="rgb(236,178,37)"/><text x="97.9046%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::new [http_server_rust-tokio] (161 samples, 0.69%)</title><rect x="97.3348%" y="869" width="0.6866%" height="15" fill="rgb(241,158,50)"/><text x="97.5848%" y="879.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining [http_server_rust-tokio] (31 samples, 0.13%)</title><rect x="98.1023%" y="805" width="0.1322%" height="15" fill="rgb(213,121,41)"/><text x="98.3523%" y="815.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining [http_server_rust-tokio] (46 samples, 0.20%)</title><rect x="98.0810%" y="837" width="0.1962%" height="15" fill="rgb(240,92,3)"/><text x="98.3310%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining [http_server_rust-tokio] (44 samples, 0.19%)</title><rect x="98.0896%" y="821" width="0.1876%" height="15" fill="rgb(205,123,3)"/><text x="98.3396%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::set_flush_pipeline [http_server_rust-tokio] (61 samples, 0.26%)</title><rect x="98.0213%" y="869" width="0.2601%" height="15" fill="rgb(205,97,47)"/><text x="98.2713%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::set_flush_pipeline [http_server_rust-tokio] (55 samples, 0.23%)</title><rect x="98.0469%" y="853" width="0.2345%" height="15" fill="rgb(247,152,14)"/><text x="98.2969%" y="863.50"></text></g><g><title>__libc_malloc [libc-2.31.so] (26 samples, 0.11%)</title><rect x="98.4051%" y="757" width="0.1109%" height="15" fill="rgb(248,195,53)"/><text x="98.6551%" y="767.50"></text></g><g><title>alloc::alloc::alloc [http_server_rust-tokio] (30 samples, 0.13%)</title><rect x="98.4051%" y="773" width="0.1279%" height="15" fill="rgb(226,201,16)"/><text x="98.6551%" y="783.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="98.4051%" y="805" width="0.1365%" height="15" fill="rgb(205,98,0)"/><text x="98.6551%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl [http_server_rust-tokio] (32 samples, 0.14%)</title><rect x="98.4051%" y="789" width="0.1365%" height="15" fill="rgb(214,191,48)"/><text x="98.6551%" y="799.50"></text></g><g><title>hyper::proto::h1::dispatch::Server&lt;S,B&gt;::new [http_server_rust-tokio] (41 samples, 0.17%)</title><rect x="98.3710%" y="869" width="0.1748%" height="15" fill="rgb(237,112,39)"/><text x="98.6210%" y="879.50"></text></g><g><title>inline alloc::boxed::Box&lt;T&gt;::pin [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="98.3795%" y="853" width="0.1663%" height="15" fill="rgb(247,203,27)"/><text x="98.6295%" y="863.50"></text></g><g><title>inline alloc::boxed::Box&lt;T&gt;::new [http_server_rust-tokio] (39 samples, 0.17%)</title><rect x="98.3795%" y="837" width="0.1663%" height="15" fill="rgb(235,124,28)"/><text x="98.6295%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc [http_server_rust-tokio] (33 samples, 0.14%)</title><rect x="98.4051%" y="821" width="0.1407%" height="15" fill="rgb(208,207,46)"/><text x="98.6551%" y="831.50"></text></g><g><title>http_server_rust_tokio::main::{{closure}}::{{closure}} [http_server_rust-tokio] (14,052 samples, 59.92%)</title><rect x="38.6269%" y="901" width="59.9232%" height="15" fill="rgb(234,176,4)"/><text x="38.8769%" y="911.50">http_server_rust_tokio::main::{{closure}}::{{closure}} [http_server_rust-tokio]</text></g><g><title>hyper::server::conn::Http&lt;E&gt;::serve_connection [http_server_rust-tokio] (350 samples, 1.49%)</title><rect x="97.0576%" y="885" width="1.4925%" height="15" fill="rgb(230,133,28)"/><text x="97.3076%" y="895.50"></text></g><g><title>inline tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut [http_server_rust-tokio] (14,123 samples, 60.23%)</title><rect x="38.4179%" y="933" width="60.2260%" height="15" fill="rgb(211,137,40)"/><text x="38.6679%" y="943.50">inline tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} [http_server_rust-tokio] (14,116 samples, 60.20%)</title><rect x="38.4478%" y="917" width="60.1962%" height="15" fill="rgb(254,35,13)"/><text x="38.6978%" y="927.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll [http_server_rust-tokio] (14,176 samples, 60.45%)</title><rect x="38.3838%" y="949" width="60.4520%" height="15" fill="rgb(225,49,51)"/><text x="38.6338%" y="959.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="98.6439%" y="933" width="0.1919%" height="15" fill="rgb(251,10,15)"/><text x="98.8939%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage [http_server_rust-tokio] (43 samples, 0.18%)</title><rect x="98.6525%" y="917" width="0.1834%" height="15" fill="rgb(228,207,15)"/><text x="98.9025%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once [http_server_rust-tokio] (14,207 samples, 60.58%)</title><rect x="38.2942%" y="981" width="60.5842%" height="15" fill="rgb(241,99,19)"/><text x="38.5442%" y="991.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once [http_..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} [http_server_rust-tokio] (14,196 samples, 60.54%)</title><rect x="38.3412%" y="965" width="60.5373%" height="15" fill="rgb(207,104,49)"/><text x="38.5912%" y="975.50">tokio::runtime::task::harness::poll_future::{{closure}} [http_server_rust-tokio]</text></g><g><title>__rust_try [http_server_rust-tokio] (14,240 samples, 60.72%)</title><rect x="38.1706%" y="1013" width="60.7249%" height="15" fill="rgb(234,99,18)"/><text x="38.4206%" y="1023.50">__rust_try [http_server_rust-tokio]</text></g><g><title>std::panicking::try::do_call [http_server_rust-tokio] (14,231 samples, 60.69%)</title><rect x="38.2090%" y="997" width="60.6866%" height="15" fill="rgb(213,191,49)"/><text x="38.4590%" y="1007.50">std::panicking::try::do_call [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::harness::poll_future [http_server_rust-tokio] (14,271 samples, 60.86%)</title><rect x="38.0469%" y="1061" width="60.8571%" height="15" fill="rgb(210,226,19)"/><text x="38.2969%" y="1071.50">tokio::runtime::task::harness::poll_future [http_server_rust-tokio]</text></g><g><title>std::panic::catch_unwind [http_server_rust-tokio] (14,247 samples, 60.75%)</title><rect x="38.1493%" y="1045" width="60.7548%" height="15" fill="rgb(229,97,18)"/><text x="38.3993%" y="1055.50">std::panic::catch_unwind [http_server_rust-tokio]</text></g><g><title>inline std::panicking::try [http_server_rust-tokio] (14,246 samples, 60.75%)</title><rect x="38.1535%" y="1029" width="60.7505%" height="15" fill="rgb(211,167,15)"/><text x="38.4035%" y="1039.50">inline std::panicking::try [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::state::State::transition_to_running [http_server_rust-tokio] (68 samples, 0.29%)</title><rect x="98.9893%" y="1061" width="0.2900%" height="15" fill="rgb(210,169,34)"/><text x="99.2393%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action [http_server_rust-tokio] (62 samples, 0.26%)</title><rect x="99.0149%" y="1045" width="0.2644%" height="15" fill="rgb(241,121,31)"/><text x="99.2649%" y="1055.50"></text></g><g><title>inline tokio::runtime::coop::with_budget [http_server_rust-tokio] (14,936 samples, 63.69%)</title><rect x="35.6247%" y="1173" width="63.6930%" height="15" fill="rgb(232,40,11)"/><text x="35.8747%" y="1183.50">inline tokio::runtime::coop::with_budget [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} [http_server_rust-tokio] (14,879 samples, 63.45%)</title><rect x="35.8678%" y="1157" width="63.4499%" height="15" fill="rgb(205,86,26)"/><text x="36.1178%" y="1167.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} [http_server_rus..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run [http_server_rust-tokio] (14,869 samples, 63.41%)</title><rect x="35.9104%" y="1141" width="63.4072%" height="15" fill="rgb(231,126,28)"/><text x="36.1604%" y="1151.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::raw::RawTask::poll [http_server_rust-tokio] (14,864 samples, 63.39%)</title><rect x="35.9318%" y="1125" width="63.3859%" height="15" fill="rgb(219,221,18)"/><text x="36.1818%" y="1135.50">tokio::runtime::task::raw::RawTask::poll [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::raw::poll [http_server_rust-tokio] (14,857 samples, 63.36%)</title><rect x="35.9616%" y="1109" width="63.3561%" height="15" fill="rgb(211,40,0)"/><text x="36.2116%" y="1119.50">tokio::runtime::task::raw::poll [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll [http_server_rust-tokio] (14,838 samples, 63.28%)</title><rect x="36.0426%" y="1093" width="63.2751%" height="15" fill="rgb(239,85,43)"/><text x="36.2926%" y="1103.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner [http_server_rust-tokio] (14,449 samples, 61.62%)</title><rect x="37.7015%" y="1077" width="61.6162%" height="15" fill="rgb(231,55,21)"/><text x="37.9515%" y="1087.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task [http_server_rust-tokio] (15,015 samples, 64.03%)</title><rect x="35.3006%" y="1237" width="64.0299%" height="15" fill="rgb(225,184,43)"/><text x="35.5506%" y="1247.50">tokio::runtime::scheduler::current_thread::Context::run_task [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter [http_server_rust-tokio] (15,001 samples, 63.97%)</title><rect x="35.3603%" y="1221" width="63.9701%" height="15" fill="rgb(251,158,41)"/><text x="35.6103%" y="1231.50">tokio::runtime::scheduler::current_thread::Context::enter [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task::{{closure}} [http_server_rust-tokio] (14,947 samples, 63.74%)</title><rect x="35.5906%" y="1205" width="63.7399%" height="15" fill="rgb(234,159,37)"/><text x="35.8406%" y="1215.50">tokio::runtime::scheduler::current_thread::Context::run_task::{{closure}} [http_server_rust-tokio]</text></g><g><title>inline tokio::runtime::coop::budget [http_server_rust-tokio] (14,941 samples, 63.71%)</title><rect x="35.6162%" y="1189" width="63.7143%" height="15" fill="rgb(216,204,22)"/><text x="35.8662%" y="1199.50">inline tokio::runtime::coop::budget [http_server_rust-tokio]</text></g><g><title>core::option::Option&lt;T&gt;::or_else [http_server_rust-tokio] (35 samples, 0.15%)</title><rect x="99.3561%" y="1221" width="0.1493%" height="15" fill="rgb(214,17,3)"/><text x="99.6061%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_local_task [http_server_rust-tokio] (26 samples, 0.11%)</title><rect x="99.5053%" y="1221" width="0.1109%" height="15" fill="rgb(212,111,17)"/><text x="99.7553%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task [http_server_rust-tokio] (71 samples, 0.30%)</title><rect x="99.3305%" y="1237" width="0.3028%" height="15" fill="rgb(221,157,24)"/><text x="99.5805%" y="1247.50"></text></g><g><title>_start [http_server_rust-tokio] (23,010 samples, 98.12%)</title><rect x="1.8124%" y="1733" width="98.1237%" height="15" fill="rgb(252,16,13)"/><text x="2.0624%" y="1743.50">_start [http_server_rust-tokio]</text></g><g><title>__libc_start_main [libc-2.31.so] (23,010 samples, 98.12%)</title><rect x="1.8124%" y="1717" width="98.1237%" height="15" fill="rgb(221,62,2)"/><text x="2.0624%" y="1727.50">__libc_start_main [libc-2.31.so]</text></g><g><title>main [http_server_rust-tokio] (23,010 samples, 98.12%)</title><rect x="1.8124%" y="1701" width="98.1237%" height="15" fill="rgb(247,87,22)"/><text x="2.0624%" y="1711.50">main [http_server_rust-tokio]</text></g><g><title>std::rt::lang_start [http_server_rust-tokio] (23,010 samples, 98.12%)</title><rect x="1.8124%" y="1685" width="98.1237%" height="15" fill="rgb(215,73,9)"/><text x="2.0624%" y="1695.50">std::rt::lang_start [http_server_rust-tokio]</text></g><g><title>std::rt::lang_start_internal [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1669" width="94.9211%" height="15" fill="rgb(207,175,33)"/><text x="5.2649%" y="1679.50">std::rt::lang_start_internal [http_server_rust-tokio]</text></g><g><title>inline std::panic::catch_unwind [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1653" width="94.9211%" height="15" fill="rgb(243,129,54)"/><text x="5.2649%" y="1663.50">inline std::panic::catch_unwind [http_server_rust-tokio]</text></g><g><title>inline std::panicking::try [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1637" width="94.9211%" height="15" fill="rgb(227,119,45)"/><text x="5.2649%" y="1647.50">inline std::panicking::try [http_server_rust-tokio]</text></g><g><title>inline std::panicking::try::do_call [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1621" width="94.9211%" height="15" fill="rgb(205,109,36)"/><text x="5.2649%" y="1631.50">inline std::panicking::try::do_call [http_server_rust-tokio]</text></g><g><title>inline std::rt::lang_start_internal::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1605" width="94.9211%" height="15" fill="rgb(205,6,39)"/><text x="5.2649%" y="1615.50">inline std::rt::lang_start_internal::{{closure}} [http_server_rust-tokio]</text></g><g><title>inline std::panic::catch_unwind [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1589" width="94.9211%" height="15" fill="rgb(221,32,16)"/><text x="5.2649%" y="1599.50">inline std::panic::catch_unwind [http_server_rust-tokio]</text></g><g><title>inline std::panicking::try [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1573" width="94.9211%" height="15" fill="rgb(228,144,50)"/><text x="5.2649%" y="1583.50">inline std::panicking::try [http_server_rust-tokio]</text></g><g><title>inline std::panicking::try::do_call [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1557" width="94.9211%" height="15" fill="rgb(229,201,53)"/><text x="5.2649%" y="1567.50">inline std::panicking::try::do_call [http_server_rust-tokio]</text></g><g><title>inline core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1541" width="94.9211%" height="15" fill="rgb(249,153,27)"/><text x="5.2649%" y="1551.50">inline core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once [http_server_rust-tokio]</text></g><g><title>std::rt::lang_start::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1525" width="94.9211%" height="15" fill="rgb(227,106,25)"/><text x="5.2649%" y="1535.50">std::rt::lang_start::{{closure}} [http_server_rust-tokio]</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1509" width="94.9211%" height="15" fill="rgb(230,65,29)"/><text x="5.2649%" y="1519.50">std::sys::backtrace::__rust_begin_short_backtrace [http_server_rust-tokio]</text></g><g><title>core::ops::function::FnOnce::call_once [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1493" width="94.9211%" height="15" fill="rgb(221,57,46)"/><text x="5.2649%" y="1503.50">core::ops::function::FnOnce::call_once [http_server_rust-tokio]</text></g><g><title>http_server_rust_tokio::main [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1477" width="94.9211%" height="15" fill="rgb(229,161,17)"/><text x="5.2649%" y="1487.50">http_server_rust_tokio::main [http_server_rust-tokio]</text></g><g><title>tokio::runtime::runtime::Runtime::block_on [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1461" width="94.9211%" height="15" fill="rgb(222,213,11)"/><text x="5.2649%" y="1471.50">tokio::runtime::runtime::Runtime::block_on [http_server_rust-tokio]</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1445" width="94.9211%" height="15" fill="rgb(235,35,13)"/><text x="5.2649%" y="1455.50">tokio::runtime::runtime::Runtime::block_on_inner [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1429" width="94.9211%" height="15" fill="rgb(233,158,34)"/><text x="5.2649%" y="1439.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on [http_server_rust-tokio]</text></g><g><title>tokio::runtime::context::runtime::enter_runtime [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1413" width="94.9211%" height="15" fill="rgb(215,151,48)"/><text x="5.2649%" y="1423.50">tokio::runtime::context::runtime::enter_runtime [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1397" width="94.9211%" height="15" fill="rgb(229,84,14)"/><text x="5.2649%" y="1407.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}} [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1381" width="94.9211%" height="15" fill="rgb(229,68,14)"/><text x="5.2649%" y="1391.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1365" width="94.9211%" height="15" fill="rgb(243,106,26)"/><text x="5.2649%" y="1375.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter [http_server_rust-tokio]</text></g><g><title>tokio::runtime::context::set_scheduler [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1349" width="94.9211%" height="15" fill="rgb(206,45,38)"/><text x="5.2649%" y="1359.50">tokio::runtime::context::set_scheduler [http_server_rust-tokio]</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1333" width="94.9211%" height="15" fill="rgb(226,6,15)"/><text x="5.2649%" y="1343.50">std::thread::local::LocalKey&lt;T&gt;::with [http_server_rust-tokio]</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1317" width="94.9211%" height="15" fill="rgb(232,22,54)"/><text x="5.2649%" y="1327.50">std::thread::local::LocalKey&lt;T&gt;::try_with [http_server_rust-tokio]</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1301" width="94.9211%" height="15" fill="rgb(229,222,32)"/><text x="5.2649%" y="1311.50">tokio::runtime::context::set_scheduler::{{closure}} [http_server_rust-tokio]</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1285" width="94.9211%" height="15" fill="rgb(228,62,29)"/><text x="5.2649%" y="1295.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1269" width="94.9211%" height="15" fill="rgb(251,103,34)"/><text x="5.2649%" y="1279.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}} [http_server_rust-tokio]</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}} [http_server_rust-tokio] (22,259 samples, 94.92%)</title><rect x="5.0149%" y="1253" width="94.9211%" height="15" fill="rgb(233,12,30)"/><text x="5.2649%" y="1263.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}} [http_server_rust-tokio]</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner [http_server_rust-tokio] (45 samples, 0.19%)</title><rect x="99.7441%" y="1237" width="0.1919%" height="15" fill="rgb(238,52,0)"/><text x="99.9941%" y="1247.50"></text></g><g><title>all (23,450 samples, 100%)</title><rect x="0.0000%" y="1781" width="100.0000%" height="15" fill="rgb(223,98,5)"/><text x="0.2500%" y="1791.50"></text></g><g><title>http_server_rust-tokio [PID=720589] (23,450 samples, 100.00%)</title><rect x="0.0000%" y="1765" width="100.0000%" height="15" fill="rgb(228,75,37)"/><text x="0.2500%" y="1775.50">http_server_rust-tokio [PID=720589]</text></g><g><title>[MAIN_THREAD] (23,450 samples, 100.00%)</title><rect x="0.0000%" y="1749" width="100.0000%" height="15" fill="rgb(205,115,49)"/><text x="0.2500%" y="1759.50">[MAIN_THREAD]</text></g></svg></svg>