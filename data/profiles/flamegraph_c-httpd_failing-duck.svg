<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>__sys_accept4 (6 samples, 9.09%)</title><rect x="188.8" y="549" width="107.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="191.79" y="559.5" >__sys_accept4</text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 1.52%)</title><rect x="760.9" y="277" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="763.91" y="287.5" ></text>
</g>
<g >
<title>inet_shutdown (4 samples, 6.06%)</title><rect x="1118.5" y="565" width="71.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1121.48" y="575.5" >inet_shu..</text>
</g>
<g >
<title>yyjson_mut_write_opts (1 samples, 1.52%)</title><rect x="385.5" y="581" width="17.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="388.45" y="591.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 1.52%)</title><rect x="1100.6" y="517" width="17.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1103.61" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="760.9" y="389" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="763.91" y="399.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 1.52%)</title><rect x="1118.5" y="549" width="17.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1121.48" y="559.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4 samples, 6.06%)</title><rect x="582.1" y="469" width="71.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="585.12" y="479.5" >__tcp_tr..</text>
</g>
<g >
<title>ep_poll (2 samples, 3.03%)</title><rect x="457.0" y="549" width="35.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="459.97" y="559.5" >ep_..</text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (1 samples, 1.52%)</title><rect x="1029.1" y="469" width="17.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1032.09" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="1154.2" y="437" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1157.24" y="447.5" ></text>
</g>
<g >
<title>evict (1 samples, 1.52%)</title><rect x="313.9" y="437" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="316.94" y="447.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.52%)</title><rect x="617.9" y="293" width="17.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="620.88" y="303.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (4 samples, 6.06%)</title><rect x="582.1" y="437" width="71.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="585.12" y="447.5" >__ip_que..</text>
</g>
<g >
<title>do_IRQ (1 samples, 1.52%)</title><rect x="457.0" y="453" width="17.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="459.97" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 3.03%)</title><rect x="224.5" y="437" width="35.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="227.55" y="447.5" >kme..</text>
</g>
<g >
<title>tcp_tsq_handler (1 samples, 1.52%)</title><rect x="760.9" y="325" width="17.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="763.91" y="335.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 1.52%)</title><rect x="689.4" y="549" width="17.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="692.39" y="559.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 1.52%)</title><rect x="260.3" y="501" width="17.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="263.30" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 1.52%)</title><rect x="1047.0" y="421" width="17.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1049.97" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="457.0" y="405" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="459.97" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 6.06%)</title><rect x="921.8" y="629" width="71.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="924.82" y="639.5" >entry_SY..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 3.03%)</title><rect x="868.2" y="613" width="35.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="871.18" y="623.5" >do_..</text>
</g>
<g >
<title>__call_rcu (1 samples, 1.52%)</title><rect x="886.1" y="533" width="17.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="889.06" y="543.5" ></text>
</g>
<g >
<title>all (66 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 1.52%)</title><rect x="1172.1" y="373" width="17.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1175.12" y="383.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 1.52%)</title><rect x="1011.2" y="469" width="17.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1014.21" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 1.52%)</title><rect x="242.4" y="421" width="17.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="245.42" y="431.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 1.52%)</title><rect x="296.1" y="549" width="17.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="299.06" y="559.5" ></text>
</g>
<g >
<title>iowrite16 (1 samples, 1.52%)</title><rect x="760.9" y="37" width="17.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="763.91" y="47.5" ></text>
</g>
<g >
<title>fput (1 samples, 1.52%)</title><rect x="725.2" y="549" width="17.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="728.15" y="559.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="325" width="17.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1175.12" y="335.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="206.7" y="421" width="17.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="209.67" y="431.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 1.52%)</title><rect x="617.9" y="309" width="17.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="620.88" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (2 samples, 3.03%)</title><rect x="868.2" y="597" width="35.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="871.18" y="607.5" >__x..</text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="501" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1175.12" y="511.5" ></text>
</g>
<g >
<title>inet_release (2 samples, 3.03%)</title><rect x="760.9" y="501" width="35.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="763.91" y="511.5" >ine..</text>
</g>
<g >
<title>[unknown] (19 samples, 28.79%)</title><rect x="81.5" y="629" width="339.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="84.52" y="639.5" >[unknown]</text>
</g>
<g >
<title>__ksize (1 samples, 1.52%)</title><rect x="1047.0" y="453" width="17.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1049.97" y="463.5" ></text>
</g>
<g >
<title>virtqueue_get_buf_ctx (1 samples, 1.52%)</title><rect x="1172.1" y="245" width="17.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1175.12" y="255.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 1.52%)</title><rect x="975.5" y="469" width="17.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="978.45" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 1.52%)</title><rect x="689.4" y="597" width="17.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="692.39" y="607.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 1.52%)</title><rect x="224.5" y="261" width="17.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="227.55" y="271.5" ></text>
</g>
<g >
<title>__sock_sendmsg (7 samples, 10.61%)</title><rect x="993.3" y="565" width="125.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="996.33" y="575.5" >__sock_sendmsg</text>
</g>
<g >
<title>do_tcp_setsockopt.isra.0 (5 samples, 7.58%)</title><rect x="582.1" y="517" width="89.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="585.12" y="527.5" >do_tcp_set..</text>
</g>
<g >
<title>_copy_to_iter (1 samples, 1.52%)</title><rect x="975.5" y="453" width="17.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="978.45" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 3.03%)</title><rect x="600.0" y="325" width="35.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="603.00" y="335.5" >__d..</text>
</g>
<g >
<title>__close (4 samples, 6.06%)</title><rect x="725.2" y="645" width="71.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="728.15" y="655.5" >__close</text>
</g>
<g >
<title>__tcp_push_pending_frames (4 samples, 6.06%)</title><rect x="582.1" y="501" width="71.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="585.12" y="511.5" >__tcp_pu..</text>
</g>
<g >
<title>recv (4 samples, 6.06%)</title><rect x="921.8" y="645" width="71.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="924.82" y="655.5" >recv</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 3.03%)</title><rect x="457.0" y="613" width="35.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="459.97" y="623.5" >ent..</text>
</g>
<g >
<title>start_xmit (1 samples, 1.52%)</title><rect x="760.9" y="85" width="17.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="763.91" y="95.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 1.52%)</title><rect x="760.9" y="245" width="17.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="763.91" y="255.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 1.52%)</title><rect x="313.9" y="421" width="17.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="316.94" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="1047.0" y="389" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1049.97" y="399.5" ></text>
</g>
<g >
<title>epoll_ctl (2 samples, 3.03%)</title><rect x="868.2" y="645" width="35.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="871.18" y="655.5" >epo..</text>
</g>
<g >
<title>alloc_file (2 samples, 3.03%)</title><rect x="224.5" y="501" width="35.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="227.55" y="511.5" >all..</text>
</g>
<g >
<title>ip_local_out (3 samples, 4.55%)</title><rect x="600.0" y="421" width="53.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="603.00" y="431.5" >ip_lo..</text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (2 samples, 3.03%)</title><rect x="457.0" y="533" width="35.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="459.97" y="543.5" >ep_..</text>
</g>
<g >
<title>tcp_shutdown (3 samples, 4.55%)</title><rect x="1136.4" y="549" width="53.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1139.36" y="559.5" >tcp_s..</text>
</g>
<g >
<title>ip_local_out (1 samples, 1.52%)</title><rect x="760.9" y="229" width="17.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="763.91" y="239.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (6 samples, 9.09%)</title><rect x="993.3" y="517" width="107.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="996.33" y="527.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>security_file_free (1 samples, 1.52%)</title><rect x="331.8" y="501" width="17.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="334.82" y="511.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 1.52%)</title><rect x="1136.4" y="501" width="17.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1139.36" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 3.03%)</title><rect x="868.2" y="629" width="35.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="871.18" y="639.5" >ent..</text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 1.52%)</title><rect x="331.8" y="485" width="17.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="334.82" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (3 samples, 4.55%)</title><rect x="1011.2" y="485" width="53.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1014.21" y="495.5" >__all..</text>
</g>
<g >
<title>__sys_recvfrom (3 samples, 4.55%)</title><rect x="939.7" y="581" width="53.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="942.70" y="591.5" >__sys..</text>
</g>
<g >
<title>__call_rcu (1 samples, 1.52%)</title><rect x="886.1" y="549" width="17.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="889.06" y="559.5" ></text>
</g>
<g >
<title>__close_fd (1 samples, 1.52%)</title><rect x="725.2" y="581" width="17.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="728.15" y="591.5" ></text>
</g>
<g >
<title>skb_to_sgvec (1 samples, 1.52%)</title><rect x="617.9" y="261" width="17.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="620.88" y="271.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 1.52%)</title><rect x="313.9" y="389" width="17.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="316.94" y="399.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 1.52%)</title><rect x="868.2" y="565" width="17.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="871.18" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 1.52%)</title><rect x="760.9" y="453" width="17.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="763.91" y="463.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 1.52%)</title><rect x="1064.8" y="485" width="17.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1067.85" y="495.5" ></text>
</g>
<g >
<title>tcp_send_fin (3 samples, 4.55%)</title><rect x="1136.4" y="533" width="53.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1139.36" y="543.5" >tcp_s..</text>
</g>
<g >
<title>__slab_alloc (1 samples, 1.52%)</title><rect x="1029.1" y="437" width="17.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1032.09" y="447.5" ></text>
</g>
<g >
<title>__fput (3 samples, 4.55%)</title><rect x="743.0" y="549" width="53.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="746.03" y="559.5" >__fput</text>
</g>
<g >
<title>__skb_datagram_iter (2 samples, 3.03%)</title><rect x="957.6" y="501" width="35.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="960.58" y="511.5" >__s..</text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 1.52%)</title><rect x="1100.6" y="533" width="17.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1103.61" y="543.5" ></text>
</g>
<g >
<title>ksize (1 samples, 1.52%)</title><rect x="1047.0" y="469" width="17.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1049.97" y="479.5" ></text>
</g>
<g >
<title>____fput (3 samples, 4.55%)</title><rect x="743.0" y="565" width="53.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="746.03" y="575.5" >____f..</text>
</g>
<g >
<title>security_file_alloc (2 samples, 3.03%)</title><rect x="224.5" y="453" width="35.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="227.55" y="463.5" >sec..</text>
</g>
<g >
<title>sock_common_setsockopt (5 samples, 7.58%)</title><rect x="582.1" y="549" width="89.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="585.12" y="559.5" >sock_commo..</text>
</g>
<g >
<title>__x64_sys_recvfrom (3 samples, 4.55%)</title><rect x="939.7" y="597" width="53.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="942.70" y="607.5" >__x64..</text>
</g>
<g >
<title>__fdget (1 samples, 1.52%)</title><rect x="188.8" y="517" width="17.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="191.79" y="527.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 4.55%)</title><rect x="296.1" y="565" width="53.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="299.06" y="575.5" >exit_..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="357" width="17.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1175.12" y="367.5" ></text>
</g>
<g >
<title>send (7 samples, 10.61%)</title><rect x="993.3" y="645" width="125.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="996.33" y="655.5" >send</text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 1.52%)</title><rect x="1172.1" y="277" width="17.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1175.12" y="287.5" ></text>
</g>
<g >
<title>mntget (1 samples, 1.52%)</title><rect x="278.2" y="501" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="281.18" y="511.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 1.52%)</title><rect x="331.8" y="469" width="17.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="334.82" y="479.5" ></text>
</g>
<g >
<title>dput (1 samples, 1.52%)</title><rect x="743.0" y="533" width="17.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="746.03" y="543.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (3 samples, 4.55%)</title><rect x="224.5" y="517" width="53.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="227.55" y="527.5" >alloc..</text>
</g>
<g >
<title>skb_entail (1 samples, 1.52%)</title><rect x="1064.8" y="501" width="17.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1067.85" y="511.5" ></text>
</g>
<g >
<title>____fput (2 samples, 3.03%)</title><rect x="313.9" y="533" width="35.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="316.94" y="543.5" >___..</text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 1.52%)</title><rect x="760.9" y="117" width="17.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="763.91" y="127.5" ></text>
</g>
<g >
<title>filp_close (1 samples, 1.52%)</title><rect x="725.2" y="565" width="17.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="728.15" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 1.52%)</title><rect x="1118.5" y="517" width="17.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1121.48" y="527.5" ></text>
</g>
<g >
<title>tcp_write_xmit (4 samples, 6.06%)</title><rect x="582.1" y="485" width="71.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="585.12" y="495.5" >tcp_writ..</text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 1.52%)</title><rect x="474.8" y="453" width="17.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="477.85" y="463.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 1.52%)</title><rect x="313.9" y="373" width="17.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="316.94" y="383.5" ></text>
</g>
<g >
<title>mntget (1 samples, 1.52%)</title><rect x="278.2" y="517" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="281.18" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 1.52%)</title><rect x="725.2" y="597" width="17.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="728.15" y="607.5" ></text>
</g>
<g >
<title>__skb_to_sgvec (1 samples, 1.52%)</title><rect x="617.9" y="245" width="17.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="620.88" y="255.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 1.52%)</title><rect x="1172.1" y="389" width="17.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1175.12" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="707.3" y="581" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="710.27" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 10.61%)</title><rect x="564.2" y="597" width="125.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="567.24" y="607.5" >do_syscall_64</text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 1.52%)</title><rect x="760.9" y="261" width="17.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="763.91" y="271.5" ></text>
</g>
<g >
<title>sock_recvmsg (3 samples, 4.55%)</title><rect x="939.7" y="565" width="53.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="942.70" y="575.5" >sock_..</text>
</g>
<g >
<title>do_epoll_wait (2 samples, 3.03%)</title><rect x="457.0" y="565" width="35.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="459.97" y="575.5" >do_..</text>
</g>
<g >
<title>tcp_tsq_write.part.0 (1 samples, 1.52%)</title><rect x="760.9" y="309" width="17.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="763.91" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="206.7" y="389" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="209.67" y="399.5" ></text>
</g>
<g >
<title>__gmtime_r (1 samples, 1.52%)</title><rect x="796.7" y="645" width="17.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="799.67" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="1047.0" y="373" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1049.97" y="383.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 1.52%)</title><rect x="1082.7" y="501" width="17.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1085.73" y="511.5" ></text>
</g>
<g >
<title>__sys_setsockopt (7 samples, 10.61%)</title><rect x="564.2" y="565" width="125.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="567.24" y="575.5" >__sys_setsockopt</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 1.52%)</title><rect x="939.7" y="485" width="17.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="942.70" y="495.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 1.52%)</title><rect x="1064.8" y="469" width="17.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1067.85" y="479.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 1.52%)</title><rect x="707.3" y="645" width="17.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="710.27" y="655.5" ></text>
</g>
<g >
<title>ip_queue_xmit (4 samples, 6.06%)</title><rect x="582.1" y="453" width="71.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="585.12" y="463.5" >ip_queue..</text>
</g>
<g >
<title>put_cpu_partial (1 samples, 1.52%)</title><rect x="939.7" y="437" width="17.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="942.70" y="447.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 1.52%)</title><rect x="671.5" y="549" width="17.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="674.52" y="559.5" ></text>
</g>
<g >
<title>__sock_release (2 samples, 3.03%)</title><rect x="760.9" y="517" width="35.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="763.91" y="527.5" >__s..</text>
</g>
<g >
<title>iput (1 samples, 1.52%)</title><rect x="313.9" y="453" width="17.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="316.94" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 1.52%)</title><rect x="689.4" y="613" width="17.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="692.39" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 1.52%)</title><rect x="224.5" y="277" width="17.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="227.55" y="287.5" ></text>
</g>
<g >
<title>tasklet_action (1 samples, 1.52%)</title><rect x="760.9" y="373" width="17.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="763.91" y="383.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1 samples, 1.52%)</title><rect x="206.7" y="517" width="17.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="209.67" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 4.55%)</title><rect x="939.7" y="613" width="53.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="942.70" y="623.5" >do_sy..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 1.52%)</title><rect x="1154.2" y="501" width="17.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1157.24" y="511.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="457.0" y="437" width="17.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="459.97" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="206.7" y="405" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="209.67" y="415.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="453" width="17.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1175.12" y="463.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 1.52%)</title><rect x="1172.1" y="485" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1175.12" y="495.5" ></text>
</g>
<g >
<title>sock_close (2 samples, 3.03%)</title><rect x="760.9" y="533" width="35.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="763.91" y="543.5" >soc..</text>
</g>
<g >
<title>__dentry_kill (1 samples, 1.52%)</title><rect x="313.9" y="485" width="17.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="316.94" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="457.0" y="421" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="459.97" y="431.5" ></text>
</g>
<g >
<title>iput (1 samples, 1.52%)</title><rect x="743.0" y="485" width="17.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="746.03" y="495.5" ></text>
</g>
<g >
<title>sock_alloc (1 samples, 1.52%)</title><rect x="206.7" y="533" width="17.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="209.67" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.52%)</title><rect x="510.6" y="597" width="17.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="513.61" y="607.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 1.52%)</title><rect x="725.2" y="533" width="17.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="728.15" y="543.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 1.52%)</title><rect x="564.2" y="533" width="17.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="567.24" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_setsockopt (7 samples, 10.61%)</title><rect x="564.2" y="581" width="125.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="567.24" y="591.5" >__x64_sys_setso..</text>
</g>
<g >
<title>accept4 (10 samples, 15.15%)</title><rect x="170.9" y="613" width="178.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="173.91" y="623.5" >accept4</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 1.52%)</title><rect x="635.8" y="341" width="17.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="638.76" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="629" width="17.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="853.30" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 3.03%)</title><rect x="457.0" y="581" width="35.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="459.97" y="591.5" >__x..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 1.52%)</title><rect x="760.9" y="165" width="17.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="763.91" y="175.5" ></text>
</g>
<g >
<title>MHD-single (66 samples, 100.00%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >MHD-single</text>
</g>
<g >
<title>rcu_core (1 samples, 1.52%)</title><rect x="224.5" y="341" width="17.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="227.55" y="351.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.52%)</title><rect x="760.9" y="405" width="17.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="763.91" y="415.5" ></text>
</g>
<g >
<title>__sys_shutdown (4 samples, 6.06%)</title><rect x="1118.5" y="581" width="71.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1121.48" y="591.5" >__sys_sh..</text>
</g>
<g >
<title>__qdisc_run (1 samples, 1.52%)</title><rect x="600.0" y="309" width="17.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="603.00" y="319.5" ></text>
</g>
<g >
<title>handle_request (4 samples, 6.06%)</title><rect x="492.7" y="629" width="71.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="495.73" y="639.5" >handle_r..</text>
</g>
<g >
<title>start_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="293" width="17.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1175.12" y="303.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 1.52%)</title><rect x="1172.1" y="437" width="17.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1175.12" y="447.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 1.52%)</title><rect x="939.7" y="517" width="17.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="942.70" y="527.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="1047.0" y="405" width="17.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1049.97" y="415.5" ></text>
</g>
<g >
<title>start_xmit (1 samples, 1.52%)</title><rect x="617.9" y="277" width="17.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="620.88" y="287.5" ></text>
</g>
<g >
<title>inet_recvmsg (3 samples, 4.55%)</title><rect x="939.7" y="549" width="53.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="942.70" y="559.5" >inet_..</text>
</g>
<g >
<title>virtqueue_get_buf (1 samples, 1.52%)</title><rect x="1172.1" y="261" width="17.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1175.12" y="271.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 1.52%)</title><rect x="206.7" y="437" width="17.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="209.67" y="447.5" ></text>
</g>
<g >
<title>__skb_to_sgvec (1 samples, 1.52%)</title><rect x="617.9" y="229" width="17.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="620.88" y="239.5" ></text>
</g>
<g >
<title>setsockopt (8 samples, 12.12%)</title><rect x="564.2" y="629" width="143.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="567.24" y="639.5" >setsockopt</text>
</g>
<g >
<title>ip_output (1 samples, 1.52%)</title><rect x="1172.1" y="421" width="17.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1175.12" y="431.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 1.52%)</title><rect x="743.0" y="501" width="17.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="746.03" y="511.5" ></text>
</g>
<g >
<title>i_callback (1 samples, 1.52%)</title><rect x="224.5" y="309" width="17.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="227.55" y="319.5" ></text>
</g>
<g >
<title>fq_codel_dequeue (1 samples, 1.52%)</title><rect x="600.0" y="277" width="17.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="603.00" y="287.5" ></text>
</g>
<g >
<title>free_old_xmit_skbs (1 samples, 1.52%)</title><rect x="689.4" y="517" width="17.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="692.39" y="527.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 3.03%)</title><rect x="457.0" y="485" width="35.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="459.97" y="495.5" >soc..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.52%)</title><rect x="760.9" y="101" width="17.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="763.91" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 6.06%)</title><rect x="1118.5" y="629" width="71.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1121.48" y="639.5" >entry_SY..</text>
</g>
<g >
<title>__alloc_file (2 samples, 3.03%)</title><rect x="224.5" y="469" width="35.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="227.55" y="479.5" >__a..</text>
</g>
<g >
<title>alloc_empty_file (2 samples, 3.03%)</title><rect x="224.5" y="485" width="35.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="227.55" y="495.5" >all..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 1.52%)</title><rect x="760.9" y="197" width="17.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="763.91" y="207.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="689.4" y="581" width="17.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="692.39" y="591.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 1.52%)</title><rect x="760.9" y="469" width="17.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="763.91" y="479.5" ></text>
</g>
<g >
<title>evict (1 samples, 1.52%)</title><rect x="743.0" y="469" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="746.03" y="479.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 1.52%)</title><rect x="760.9" y="181" width="17.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="763.91" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="707.3" y="597" width="17.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="710.27" y="607.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 1.52%)</title><rect x="743.0" y="421" width="17.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="746.03" y="431.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 1.52%)</title><rect x="868.2" y="581" width="17.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="871.18" y="591.5" ></text>
</g>
<g >
<title>fq_codel_dequeue (1 samples, 1.52%)</title><rect x="600.0" y="293" width="17.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="603.00" y="303.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 1.52%)</title><rect x="1029.1" y="453" width="17.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1032.09" y="463.5" ></text>
</g>
<g >
<title>task_work_run (3 samples, 4.55%)</title><rect x="743.0" y="581" width="53.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="746.03" y="591.5" >task_..</text>
</g>
<g >
<title>do_IRQ (1 samples, 1.52%)</title><rect x="1154.2" y="485" width="17.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1157.24" y="495.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.0 (1 samples, 1.52%)</title><rect x="653.6" y="501" width="17.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="656.64" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 1.52%)</title><rect x="206.7" y="469" width="17.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="209.67" y="479.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 1.52%)</title><rect x="206.7" y="501" width="17.8" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="209.67" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 13.64%)</title><rect x="188.8" y="581" width="160.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="191.79" y="591.5" >do_syscall_64</text>
</g>
<g >
<title>json_endpoint (4 samples, 6.06%)</title><rect x="492.7" y="613" width="71.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="495.73" y="623.5" >json_end..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 13.64%)</title><rect x="188.8" y="597" width="160.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="191.79" y="607.5" >entry_SYSCALL_64_aft..</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 1.52%)</title><rect x="707.3" y="565" width="17.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="710.27" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="224.5" y="373" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="227.55" y="383.5" ></text>
</g>
<g >
<title>virtqueue_notify (1 samples, 1.52%)</title><rect x="760.9" y="69" width="17.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="763.91" y="79.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 1.52%)</title><rect x="1172.1" y="517" width="17.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1175.12" y="527.5" ></text>
</g>
<g >
<title>yyjson_mut_write_opts (2 samples, 3.03%)</title><rect x="528.5" y="597" width="35.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="531.48" y="607.5" >yyj..</text>
</g>
<g >
<title>kfree_skbmem (1 samples, 1.52%)</title><rect x="939.7" y="501" width="17.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="942.70" y="511.5" ></text>
</g>
<g >
<title>shutdown (4 samples, 6.06%)</title><rect x="1118.5" y="645" width="71.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1121.48" y="655.5" >shutdown</text>
</g>
<g >
<title>__x64_sys_accept4 (6 samples, 9.09%)</title><rect x="188.8" y="565" width="107.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="191.79" y="575.5" >__x64_sys_acc..</text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 1.52%)</title><rect x="921.8" y="597" width="17.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="924.82" y="607.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="1154.2" y="453" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1157.24" y="463.5" ></text>
</g>
<g >
<title>tcp_setsockopt (5 samples, 7.58%)</title><rect x="582.1" y="533" width="89.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="585.12" y="543.5" >tcp_setsoc..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 1.52%)</title><rect x="957.6" y="485" width="17.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="960.58" y="495.5" ></text>
</g>
<g >
<title>sock_free_inode (1 samples, 1.52%)</title><rect x="224.5" y="293" width="17.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="227.55" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 10.61%)</title><rect x="993.3" y="629" width="125.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="996.33" y="639.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>task_work_add (1 samples, 1.52%)</title><rect x="725.2" y="517" width="17.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="728.15" y="527.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="309" width="17.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1175.12" y="319.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (2 samples, 3.03%)</title><rect x="957.6" y="517" width="35.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="960.58" y="527.5" >skb..</text>
</g>
<g >
<title>destroy_inode (1 samples, 1.52%)</title><rect x="743.0" y="453" width="17.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="746.03" y="463.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 4.55%)</title><rect x="743.0" y="597" width="53.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="746.03" y="607.5" >exit_..</text>
</g>
<g >
<title>task_work_run (2 samples, 3.03%)</title><rect x="313.9" y="549" width="35.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="316.94" y="559.5" >tas..</text>
</g>
<g >
<title>rcu_do_batch (1 samples, 1.52%)</title><rect x="224.5" y="325" width="17.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="227.55" y="335.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 1.52%)</title><rect x="760.9" y="421" width="17.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="763.91" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 1.52%)</title><rect x="224.5" y="405" width="17.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="227.55" y="415.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 1.52%)</title><rect x="564.2" y="517" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="567.24" y="527.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="224.5" y="389" width="17.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="227.55" y="399.5" ></text>
</g>
<g >
<title>iowrite16 (1 samples, 1.52%)</title><rect x="760.9" y="53" width="17.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="763.91" y="63.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 1.52%)</title><rect x="760.9" y="437" width="17.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="763.91" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.52%)</title><rect x="1154.2" y="469" width="17.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1157.24" y="479.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 1.52%)</title><rect x="671.5" y="533" width="17.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="674.52" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (7 samples, 10.61%)</title><rect x="993.3" y="597" width="125.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="996.33" y="607.5" >__x64_sys_sendto</text>
</g>
<g >
<title>tasklet_action_common.isra.0 (1 samples, 1.52%)</title><rect x="760.9" y="357" width="17.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="763.91" y="367.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (2 samples, 3.03%)</title><rect x="457.0" y="501" width="35.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="459.97" y="511.5" >ep_..</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 1.52%)</title><rect x="313.9" y="469" width="17.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="316.94" y="479.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="469" width="17.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.12" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 1.52%)</title><rect x="707.3" y="629" width="17.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="710.27" y="639.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 1.52%)</title><rect x="707.3" y="533" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="710.27" y="543.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 1.52%)</title><rect x="778.8" y="469" width="17.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="781.79" y="479.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 1.52%)</title><rect x="457.0" y="469" width="17.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="459.97" y="479.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 1.52%)</title><rect x="188.8" y="533" width="17.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="191.79" y="543.5" ></text>
</g>
<g >
<title>virtnet_poll_tx (1 samples, 1.52%)</title><rect x="689.4" y="533" width="17.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="692.39" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 1.52%)</title><rect x="260.3" y="469" width="17.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="263.30" y="479.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (3 samples, 4.55%)</title><rect x="1011.2" y="501" width="53.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1014.21" y="511.5" >sk_st..</text>
</g>
<g >
<title>__slab_free (1 samples, 1.52%)</title><rect x="224.5" y="245" width="17.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="227.55" y="255.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 6.06%)</title><rect x="99.4" y="613" width="71.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="102.39" y="623.5" >[unknown]</text>
</g>
<g >
<title>__d_alloc (1 samples, 1.52%)</title><rect x="260.3" y="485" width="17.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="263.30" y="495.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 1.52%)</title><rect x="778.8" y="453" width="17.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="781.79" y="463.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 1.52%)</title><rect x="993.3" y="485" width="17.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="996.33" y="495.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.52%)</title><rect x="760.9" y="133" width="17.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="763.91" y="143.5" ></text>
</g>
<g >
<title>yyjson_mut_write_opts_impl (1 samples, 1.52%)</title><rect x="385.5" y="565" width="17.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="388.45" y="575.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 1.52%)</title><rect x="313.9" y="405" width="17.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="316.94" y="415.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 1.52%)</title><rect x="224.5" y="357" width="17.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="227.55" y="367.5" ></text>
</g>
<g >
<title>tcp_recvmsg (3 samples, 4.55%)</title><rect x="939.7" y="533" width="53.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="942.70" y="543.5" >tcp_r..</text>
</g>
<g >
<title>__dentry_kill (1 samples, 1.52%)</title><rect x="743.0" y="517" width="17.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="746.03" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 10.61%)</title><rect x="564.2" y="613" width="125.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="567.24" y="623.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 6.06%)</title><rect x="1118.5" y="613" width="71.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1121.48" y="623.5" >do_sysca..</text>
</g>
<g >
<title>clock_gettime (1 samples, 1.52%)</title><rect x="850.3" y="645" width="17.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="853.30" y="655.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.52%)</title><rect x="760.9" y="149" width="17.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="763.91" y="159.5" ></text>
</g>
<g >
<title>yyjson_mut_write_opts_impl (2 samples, 3.03%)</title><rect x="528.5" y="581" width="35.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="531.48" y="591.5" >yyj..</text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 1.52%)</title><rect x="743.0" y="437" width="17.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="746.03" y="447.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 1.52%)</title><rect x="1029.1" y="421" width="17.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1032.09" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 3.03%)</title><rect x="457.0" y="597" width="35.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="459.97" y="607.5" >do_..</text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 1.52%)</title><rect x="975.5" y="485" width="17.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="978.45" y="495.5" ></text>
</g>
<g >
<title>__sys_sendto (7 samples, 10.61%)</title><rect x="993.3" y="581" width="125.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="996.33" y="591.5" >__sys_sendto</text>
</g>
<g >
<title>__lock_text_start (1 samples, 1.52%)</title><rect x="1118.5" y="501" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1121.48" y="511.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 1.52%)</title><rect x="206.7" y="453" width="17.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="209.67" y="463.5" ></text>
</g>
<g >
<title>handle_request (4 samples, 6.06%)</title><rect x="349.7" y="613" width="71.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="352.70" y="623.5" >handle_r..</text>
</g>
<g >
<title>__ip_finish_output (3 samples, 4.55%)</title><rect x="600.0" y="373" width="53.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="603.00" y="383.5" >__ip_..</text>
</g>
<g >
<title>ep_remove (1 samples, 1.52%)</title><rect x="886.1" y="581" width="17.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="889.06" y="591.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 1.52%)</title><rect x="260.3" y="453" width="17.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="263.30" y="463.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 1.52%)</title><rect x="564.2" y="501" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="567.24" y="511.5" ></text>
</g>
<g >
<title>virtqueue_get_buf_ctx (1 samples, 1.52%)</title><rect x="689.4" y="485" width="17.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="692.39" y="495.5" ></text>
</g>
<g >
<title>calloc (1 samples, 1.52%)</title><rect x="814.5" y="645" width="17.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="817.55" y="655.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 3.03%)</title><rect x="600.0" y="341" width="35.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="603.00" y="351.5" >dev..</text>
</g>
<g >
<title>tcp_close (2 samples, 3.03%)</title><rect x="760.9" y="485" width="35.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="763.91" y="495.5" >tcp..</text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 4.55%)</title><rect x="600.0" y="357" width="53.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="603.00" y="367.5" >ip_fi..</text>
</g>
<g >
<title>dput (1 samples, 1.52%)</title><rect x="313.9" y="501" width="17.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="316.94" y="511.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 1.52%)</title><rect x="260.3" y="437" width="17.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="263.30" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 1.52%)</title><rect x="707.3" y="517" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="710.27" y="527.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 59.09%)</title><rect x="10.0" y="645" width="697.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >[unknown]</text>
</g>
<g >
<title>virtqueue_get_buf (1 samples, 1.52%)</title><rect x="689.4" y="501" width="17.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="692.39" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 1.52%)</title><rect x="1172.1" y="405" width="17.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1175.12" y="415.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 1.52%)</title><rect x="993.3" y="501" width="17.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="996.33" y="511.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 1.52%)</title><rect x="582.1" y="421" width="17.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="585.12" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 1.52%)</title><rect x="921.8" y="613" width="17.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="924.82" y="623.5" ></text>
</g>
<g >
<title>sock_alloc_file (4 samples, 6.06%)</title><rect x="224.5" y="533" width="71.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="227.55" y="543.5" >sock_all..</text>
</g>
<g >
<title>__fput (2 samples, 3.03%)</title><rect x="313.9" y="517" width="35.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="316.94" y="527.5" >__f..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 10.61%)</title><rect x="993.3" y="613" width="125.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="996.33" y="623.5" >do_syscall_64</text>
</g>
<g >
<title>ip_output (3 samples, 4.55%)</title><rect x="600.0" y="405" width="53.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="603.00" y="415.5" >ip_ou..</text>
</g>
<g >
<title>__alloc_skb (2 samples, 3.03%)</title><rect x="1136.4" y="517" width="35.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1139.36" y="527.5" >__a..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 6.06%)</title><rect x="725.2" y="629" width="71.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="728.15" y="639.5" >entry_SY..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 1.52%)</title><rect x="1047.0" y="437" width="17.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1049.97" y="447.5" ></text>
</g>
<g >
<title>virtqueue_get_buf_ctx (1 samples, 1.52%)</title><rect x="1172.1" y="229" width="17.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1175.12" y="239.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 1.52%)</title><rect x="886.1" y="565" width="17.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="889.06" y="575.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 1.52%)</title><rect x="1118.5" y="533" width="17.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1121.48" y="543.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 1.52%)</title><rect x="939.7" y="469" width="17.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="942.70" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_shutdown (4 samples, 6.06%)</title><rect x="1118.5" y="597" width="71.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1121.48" y="607.5" >__x64_sy..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 1.52%)</title><rect x="707.3" y="549" width="17.9" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="710.27" y="559.5" ></text>
</g>
<g >
<title>ep_send_events_proc (2 samples, 3.03%)</title><rect x="457.0" y="517" width="35.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="459.97" y="527.5" >ep_..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.52%)</title><rect x="689.4" y="565" width="17.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="692.39" y="575.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 1.52%)</title><rect x="206.7" y="485" width="17.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="209.67" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 1.52%)</title><rect x="224.5" y="421" width="17.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="227.55" y="431.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 1.52%)</title><rect x="939.7" y="453" width="17.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="942.70" y="463.5" ></text>
</g>
<g >
<title>epoll_wait (3 samples, 4.55%)</title><rect x="439.1" y="629" width="53.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="442.09" y="639.5" >epoll..</text>
</g>
<g >
<title>detach_buf_split (1 samples, 1.52%)</title><rect x="689.4" y="453" width="17.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="692.39" y="463.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 1.52%)</title><rect x="474.8" y="469" width="17.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="477.85" y="479.5" ></text>
</g>
<g >
<title>inet_sendmsg (7 samples, 10.61%)</title><rect x="993.3" y="549" width="125.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="996.33" y="559.5" >inet_sendmsg</text>
</g>
<g >
<title>ip_finish_output (3 samples, 4.55%)</title><rect x="600.0" y="389" width="53.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="603.00" y="399.5" >ip_fi..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 1.52%)</title><rect x="707.3" y="613" width="17.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="710.27" y="623.5" ></text>
</g>
<g >
<title>yyjson_read_opts (1 samples, 1.52%)</title><rect x="403.3" y="581" width="17.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="406.33" y="591.5" ></text>
</g>
<g >
<title>malloc (1 samples, 1.52%)</title><rect x="903.9" y="645" width="17.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="906.94" y="655.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 1.52%)</title><rect x="760.9" y="293" width="17.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="763.91" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 1.52%)</title><rect x="1118.5" y="485" width="17.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1121.48" y="495.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (1 samples, 1.52%)</title><rect x="564.2" y="549" width="17.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="567.24" y="559.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.52%)</title><rect x="1172.1" y="341" width="17.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1175.12" y="351.5" ></text>
</g>
<g >
<title>tcp_tasklet_func (1 samples, 1.52%)</title><rect x="760.9" y="341" width="17.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="763.91" y="351.5" ></text>
</g>
<g >
<title>detach_buf_split (1 samples, 1.52%)</title><rect x="689.4" y="469" width="17.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="692.39" y="479.5" ></text>
</g>
<g >
<title>cfree (1 samples, 1.52%)</title><rect x="832.4" y="645" width="17.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="835.42" y="655.5" ></text>
</g>
<g >
<title>tcp_sendmsg (6 samples, 9.09%)</title><rect x="993.3" y="533" width="107.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="996.33" y="543.5" >tcp_sendmsg</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 6.06%)</title><rect x="725.2" y="613" width="71.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="728.15" y="623.5" >do_sysca..</text>
</g>
<g >
<title>__snprintf_chk (1 samples, 1.52%)</title><rect x="421.2" y="629" width="17.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="424.21" y="639.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 1.52%)</title><rect x="760.9" y="213" width="17.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="763.91" y="223.5" ></text>
</g>
<g >
<title>json_endpoint (4 samples, 6.06%)</title><rect x="349.7" y="597" width="71.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="352.70" y="607.5" >json_end..</text>
</g>
</g>
</svg>
